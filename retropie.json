{
    "emulators": {
        "advmame-0.94": {
            "platforms": [],
            "id": "advmame-0.94",
            "desc": "AdvanceMAME v0.94.0",
            "help": "ROM Extension: .zip\\n\\nCopy your AdvanceMAME roms to either $romdir/mame-advmame or\\n$romdir/arcade",
            "licence": "GPL2 https://raw.githubusercontent.com/amadvance/advancemame/master/COPYING",
            "repo": "file $__archive_url/advancemame-0.94.0.tar.gz",
            "section": "opt",
            "flags": "!mali !kms"
        },
        "advmame-1.4": {
            "platforms": [],
            "id": "advmame-1.4",
            "desc": "AdvanceMAME v1.4",
            "help": "ROM Extension: .zip\\n\\nCopy your AdvanceMAME roms to either $romdir/mame-advmame or\\n$romdir/arcade",
            "licence": "GPL2 https://raw.githubusercontent.com/amadvance/advancemame/master/COPYING",
            "repo": "file $__archive_url/advancemame-1.4.tar.gz",
            "section": "opt",
            "flags": "!mali !kms"
        },
        "advmame": {
            "platforms": [
                "arcade",
                "mame-advmame"
            ],
            "id": "advmame",
            "desc": "AdvanceMAME",
            "help": "ROM Extension: .zip\\n\\nCopy your AdvanceMAME roms to either $romdir/mame-advmame or\\n$romdir/arcade",
            "licence": "GPL2 https://raw.githubusercontent.com/amadvance/advancemame/master/COPYING",
            "repo": "git https://github.com/amadvance/advancemame master",
            "section": "opt",
            "flags": "sdl2 sdl1-videocore"
        },
        "ags": {
            "platforms": [
                "ags"
            ],
            "id": "ags",
            "desc": "Adventure Game Studio - Adventure game engine",
            "help": "ROM Extension: .exe\\n\\nCopy your Adventure Game Studio roms to $romdir/ags",
            "licence": "OTHER https://raw.githubusercontent.com/adventuregamestudio/ags/master/License.txt",
            "repo": "git https://github.com/adventuregamestudio/ags.git release-3.5.1",
            "section": "opt",
            "flags": "!mali"
        },
        "amiberry": {
            "platforms": [
                "amiga"
            ],
            "id": "amiberry",
            "desc": "Amiga emulator with JIT support (forked from uae4arm)",
            "help": "ROM Extension: .adf .chd .ipf .lha .zip\\n\\nCopy your Amiga games to $romdir/amiga\\n\\nCopy the required BIOS files\\nkick13.rom\\nkick20.rom\\nkick31.rom\\nto $biosdir/amiga",
            "licence": "GPL3 https://raw.githubusercontent.com/BlitterStudio/amiberry/master/LICENSE",
            "repo": "git https://github.com/BlitterStudio/amiberry v5.3",
            "section": "opt",
            "flags": "!all arm rpi3 rpi4"
        },
        "atari800": {
            "platforms": [
                "atari800",
                "atari5200"
            ],
            "id": "atari800",
            "desc": "Atari 8-bit/800/5200 emulator",
            "help": "ROM Extensions: .a52 .bas .bin .car .xex .atr .xfd .dcm .atr.gz .xfd.gz\\n\\nCopy your Atari800 games to $romdir/atari800\\n\\nCopy your Atari 5200 roms to $romdir/atari5200 You need to copy the Atari 800/5200 BIOS files (5200.ROM, ATARIBAS.ROM, ATARIOSB.ROM and ATARIXL.ROM) to the folder $biosdir and then on first launch configure it to scan that folder for roms (F1 -> Emulator Configuration -> System Rom Settings)",
            "licence": "GPL2 https://raw.githubusercontent.com/atari800/atari800/master/COPYING",
            "repo": "git https://github.com/atari800/atari800.git ATARI800_4_2_0",
            "section": "opt",
            "flags": "sdl1 !mali"
        },
        "basilisk": {
            "platforms": [
                "macintosh"
            ],
            "id": "basilisk",
            "desc": "Macintosh emulator",
            "help": "ROM Extensions: .img .rom\\n\\nCopy your Macintosh roms mac.rom and disk.img to $romdir/macintosh",
            "licence": "GPL2 https://raw.githubusercontent.com/cebix/macemu/master/BasiliskII/COPYING",
            "repo": "git https://github.com/cebix/macemu.git master",
            "section": "opt",
            "flags": "sdl1 !mali"
        },
        "capricerpi": {
            "platforms": [
                "amstradcpc"
            ],
            "id": "capricerpi",
            "desc": "Amstrad CPC emulator - port of Caprice32 for the RPI",
            "help": "ROM Extensions: .cdt .cpc .dsk\\n\\nCopy your Amstrad CPC games to $romdir/amstradcpc",
            "licence": "GPL2 https://raw.githubusercontent.com/KaosOverride/CapriceRPI/master/COPYING.txt",
            "repo": "git https://github.com/KaosOverride/CapriceRPI.git master",
            "section": "opt",
            "flags": "sdl1 !all videocore"
        },
        "coolcv": {
            "platforms": [
                "coleco"
            ],
            "id": "coolcv",
            "desc": "CoolCV Colecovision Emulator",
            "help": "ROM Extensions: .bin .col .rom .zip\\n\\nCopy your Colecovision roms to $romdir/coleco",
            "licence": "PROP",
            "repo": "file $__archive_url/coolcv.tar.gz",
            "section": "opt",
            "flags": "!all videocore"
        },
        "daphne": {
            "platforms": [
                "daphne"
            ],
            "id": "daphne",
            "desc": "Daphne - Laserdisc Emulator",
            "help": "ROM Extension: .daphne\\n\\nCopy your Daphne roms to $romdir/daphne",
            "licence": "GPL2 https://raw.githubusercontent.com/RetroPie/daphne-emu/master/COPYING",
            "repo": "git https://github.com/RetroPie/daphne-emu.git retropie",
            "section": "opt",
            "flags": "sdl1 !x86 !mali"
        },
        "dgen": {
            "platforms": [
                "megadrive",
                "segacd",
                "sega32x"
            ],
            "id": "dgen",
            "desc": "Megadrive/Genesis emulator DGEN",
            "help": "ROM Extensions: .32x .iso .cue .smd .bin .gen .md .sg .zip\\n\\nCopy your  Megadrive / Genesis roms to $romdir/megadrive\\nSega 32X roms to $romdir/sega32x\\nand SegaCD roms to $romdir/segacd\\nThe Sega CD requires the BIOS files bios_CD_U.bin, bios_CD_E.bin, and bios_CD_J.bin copied to $biosdir",
            "licence": "GPL2 https://sourceforge.net/p/dgen/dgen/ci/master/tree/COPYING",
            "repo": "file $__archive_url/dgen-sdl-1.33.tar.gz",
            "section": "opt",
            "flags": "sdl1 !mali !kms"
        },
        "dolphin": {
            "platforms": [
                "gc",
                "wii"
            ],
            "id": "dolphin",
            "desc": "Gamecube/Wii emulator Dolphin",
            "help": "ROM Extensions: .gcm .iso .wbfs .ciso .gcz .rvz .wad .wbfs\\n\\nCopy your Gamecube roms to $romdir/gc and Wii roms to $romdir/wii",
            "licence": "GPL2 https://raw.githubusercontent.com/dolphin-emu/dolphin/master/COPYING",
            "repo": "git https://github.com/dolphin-emu/dolphin.git :_get_branch_dolphin",
            "section": "exp",
            "flags": "!all 64bit"
        },
        "dosbox-sdl2": {
            "platforms": [],
            "id": "dosbox-sdl2",
            "desc": "DOS emulator (enhanced DOSBox fork)",
            "help": "ROM Extensions: .bat .com .exe .sh .conf\\n\\nCopy your DOS games to $romdir/pc",
            "licence": "GPL2 https://sourceforge.net/p/dosbox/code-0/HEAD/tree/dosbox/trunk/COPYING",
            "repo": "git https://github.com/duganchen/dosbox.git master",
            "section": "exp",
            "flags": "sdl2"
        },
        "dosbox-staging": {
            "platforms": [],
            "id": "dosbox-staging",
            "desc": "modern DOS/x86 emulator focusing on ease of use",
            "help": "ROM Extensions: .bat .com .exe .sh .conf\\n\\nCopy your DOS games to $romdir/pc",
            "licence": "GPL2 https://raw.githubusercontent.com/dosbox-staging/dosbox-staging/master/COPYING",
            "repo": "git https://github.com/dosbox-staging/dosbox-staging.git :_get_branch_dosbox-staging",
            "section": "exp",
            "flags": "sdl2"
        },
        "dosbox": {
            "platforms": [
                "pc"
            ],
            "id": "dosbox",
            "desc": "DOS emulator",
            "help": "ROM Extensions: .bat .com .exe .sh .conf\\n\\nCopy your DOS games to $romdir/pc",
            "licence": "GPL2 https://sourceforge.net/p/dosbox/code-0/HEAD/tree/dosbox/trunk/COPYING",
            "repo": "svn https://svn.code.sf.net/p/dosbox/code-0/dosbox/trunk - 4252",
            "section": "opt",
            "flags": "sdl1 !mali"
        },
        "drastic": {
            "platforms": [
                "nds"
            ],
            "id": "drastic",
            "desc": "NDS emu - DraStic",
            "help": "ROM Extensions: .nds .zip\\n\\nCopy your Nintendo DS roms to $romdir/nds",
            "licence": "PROP",
            "section": "exp",
            "flags": "sdl2 !all arm !armv6 !mali"
        },
        "fbzx": {
            "platforms": [
                "zxspectrum"
            ],
            "id": "fbzx",
            "desc": "ZXSpectrum emulator FBZX",
            "help": "ROM Extensions: .sna .szx .z80 .tap .tzx .gz .udi .mgt .img .trd .scl .dsk .zip\\n\\nCopy your ZX Spectrum to $romdir/zxspectrum",
            "licence": "GPL3 https://raw.githubusercontent.com/rastersoft/fbzx/master/COPYING",
            "repo": "git https://github.com/rastersoft/fbzx :_get_branch_fbzx",
            "section": "opt",
            "flags": "sdl1 !mali !kms"
        },
        "frotz": {
            "platforms": [
                "zmachine"
            ],
            "id": "frotz",
            "desc": "Z-Machine Interpreter for Infocom games",
            "help": "ROM Extensions: .dat .zip .z1 .z2 .z3 .z4 .z5 .z6 .z7 .z8\\n\\nCopy your Infocom games to $romdir/zmachine",
            "licence": "GPL2 https://raw.githubusercontent.com/DavidGriffith/frotz/master/COPYING",
            "section": "opt",
            "flags": ""
        },
        "fs-uae": {
            "platforms": [
                "amiga"
            ],
            "id": "fs-uae",
            "desc": "Amiga emulator - FS-UAE integrates the most accurate Amiga emulation code available from WinUAE",
            "help": "ROM Extension: .adf  .adz .dms .ipf .zip\\n\\nCopy your Amiga games to $romdir/amiga\\n\\nCopy a required BIOS file (e.g. kick13.rom) to $biosdir",
            "licence": "GPL2 https://raw.githubusercontent.com/FrodeSolheim/fs-uae/master/COPYING",
            "section": "exp",
            "flags": "!all !arm x11"
        },
        "fuse": {
            "platforms": [
                "zxspectrum"
            ],
            "id": "fuse",
            "desc": "ZX Spectrum emulator Fuse",
            "help": "ROM Extensions: .sna .szx .z80 .tap .tzx .gz .udi .mgt .img .trd .scl .dsk .zip\\n\\nCopy your ZX Spectrum games to $romdir/zxspectrum",
            "licence": "GPL2 https://sourceforge.net/p/fuse-emulator/fuse/ci/master/tree/COPYING",
            "repo": "file $__archive_url/fuse-1.5.7.tar.gz",
            "section": "opt",
            "flags": "sdl1 !mali"
        },
        "gngeopi": {
            "platforms": [
                "arcade",
                "neogeo"
            ],
            "id": "gngeopi",
            "desc": "NeoGeo emulator GnGeoPi",
            "help": "ROM Extension: .zip\\n\\nCopy your GnGeoPi roms to $romdir/neogeo\\n\\nCopy the required BIOS file neogeo.zip BIOS to $romdir/neogeo",
            "licence": "NONCOM https://raw.githubusercontent.com/ymartel06/GnGeo-Pi/master/gngeo/COPYING",
            "repo": "git https://github.com/ymartel06/GnGeo-Pi.git master",
            "section": "opt",
            "flags": "!all arm !mali !kms"
        },
        "gpsp": {
            "platforms": [
                "gba"
            ],
            "id": "gpsp",
            "desc": "GameBoy Advance emulator",
            "help": "ROM Extensions: .gba .zip\\n\\nCopy your Game Boy Advance roms to $romdir/gba\\n\\nCopy the required BIOS file gba_bios.bin to $biosdir",
            "licence": "GPL2 https://raw.githubusercontent.com/gizmo98/gpsp/master/COPYING.DOC",
            "repo": "git https://github.com/gizmo98/gpsp.git master",
            "section": "opt",
            "flags": "noinstclean !all videocore"
        },
        "hatari": {
            "platforms": [
                "atarist"
            ],
            "id": "hatari",
            "desc": "Atari emulator Hatari",
            "help": "ROM Extensions: .st .stx .img .rom .raw .ipf .ctr .zip\\n\\nCopy your Atari ST games to $romdir/atarist\\n\\nCopy Atari ST BIOS (tos.img) to $biosdir",
            "licence": "GPL2 https://git.tuxfamily.org/hatari/hatari.git/plain/gpl.txt",
            "repo": "git git://git.tuxfamily.org/gitroot/hatari/hatari.git v2.3.1",
            "section": "opt",
            "flags": ""
        },
        "hypseus": {
            "platforms": [
                "daphne"
            ],
            "id": "hypseus",
            "desc": "Hypseus Singe - Laserdisc Emulator",
            "help": "ROM Extension: .daphne\\n\\nCopy your Daphne roms to $romdir/daphne",
            "licence": "GPL3 https://raw.githubusercontent.com/DirtBagXon/hypseus-singe/master/LICENSE",
            "repo": "git https://github.com/DirtBagXon/hypseus-singe.git RetroPie",
            "section": "exp",
            "flags": "sdl2"
        },
        "jzintv": {
            "platforms": [
                "intellivision"
            ],
            "id": "jzintv",
            "desc": "Intellivision emulator",
            "help": "ROM Extensions: .int .bin .rom\\n\\nCopy your Intellivision roms to $romdir/intellivision\\n\\nCopy the required BIOS files exec.bin and grom.bin to $biosdir",
            "licence": "GPL2 http://spatula-city.org/%7Eim14u2c/intv/",
            "repo": "file $__archive_url/jzintv-20200712-src.zip",
            "section": "opt",
            "flags": "sdl2"
        },
        "linapple": {
            "platforms": [
                "apple2"
            ],
            "id": "linapple",
            "desc": "Apple 2 emulator LinApple",
            "help": "ROM Extensions: .dsk\\n\\nCopy your Apple 2 games to $romdir/apple2",
            "licence": "GPL2 https://raw.githubusercontent.com/dabonetn/linapple-pie/master/LICENSE",
            "repo": "git https://github.com/dabonetn/linapple-pie.git master",
            "section": "opt",
            "flags": "sdl1 !mali"
        },
        "mame": {
            "platforms": [
                "arcade"
            ],
            "id": "mame",
            "desc": "MAME emulator",
            "help": "ROM Extensions: .zip .7z\\n\\nCopy your MAME roms to either $romdir/mame or\\n$romdir/arcade",
            "licence": "GPL2 https://raw.githubusercontent.com/mamedev/mame/master/COPYING",
            "repo": "git https://github.com/mamedev/mame.git :_get_branch_mame",
            "section": "exp",
            "flags": "!mali !armv6"
        },
        "mame4all": {
            "platforms": [
                "arcade"
            ],
            "id": "mame4all",
            "desc": "MAME emulator MAME4All-Pi",
            "help": "ROM Extension: .zip\\n\\nCopy your MAME4all-Pi roms to either $romdir/mame-mame4all or\\n$romdir/arcade",
            "licence": "NONCOM https://raw.githubusercontent.com/RetroPie/mame4all-pi/master/readme.txt",
            "repo": "git https://github.com/RetroPie/mame4all-pi.git master",
            "section": "opt armv6=main",
            "flags": "!all videocore"
        },
        "minivmac": {
            "platforms": [
                "macintosh"
            ],
            "id": "minivmac",
            "desc": "Macintosh Plus Emulator",
            "help": "ROM Extensions: .dsk \\n\\nCopy your Macintosh Plus disks to $romdir/macintosh \\n\\n You need to copy the Macintosh bios file vMac.ROM into \"$biosdir\" and System Tools.dsk to $romdir",
            "licence": "GPL2 https://raw.githubusercontent.com/vanfanel/minivmac_sdl2/master/COPYING.txt",
            "repo": "git https://github.com/vanfanel/minivmac_sdl2.git master",
            "section": "exp",
            "flags": ""
        },
        "mupen64plus": {
            "platforms": [
                "n64"
            ],
            "id": "mupen64plus",
            "desc": "N64 emulator MUPEN64Plus",
            "help": "ROM Extensions: .z64 .n64 .v64\\n\\nCopy your N64 roms to $romdir/n64",
            "licence": "GPL2 https://raw.githubusercontent.com/mupen64plus/mupen64plus-core/master/LICENSES",
            "repo": ":_pkg_info_mupen64plus",
            "section": "main",
            "flags": "sdl2"
        },
        "np2pi": {
            "platforms": [
                "pc98"
            ],
            "id": "np2pi",
            "desc": "NEC PC-9801 emulator",
            "help": "ROM Extensions: .d88 .d98 .88d .98d .fdi .xdf .hdm .dup .2hd .tfd .hdi .thd .nhd .hdd\\n\\nCopy your pc98 games to to $romdir/pc88\\n\\nCopy bios files 2608_bd.wav, 2608_hh.wav, 2608_rim.wav, 2608_sd.wav, 2608_tom.wav 2608_top.wav, bios.rom, FONT.ROM and sound.rom to $biosdir/pc98",
            "repo": "git https://github.com/eagle0wl/np2pi.git master",
            "section": "exp",
            "flags": "sdl1 !all rpi !aarch64"
        },
        "openmsx": {
            "platforms": [
                "msx"
            ],
            "id": "openmsx",
            "desc": "MSX emulator OpenMSX",
            "help": "ROM Extensions: .cas .rom .mx1 .mx2 .col .dsk .zip\\n\\nCopy your MSX/MSX2 games to $romdir/msx\\nCopy the BIOS files to $biosdir/openmsx",
            "licence": "GPL2 https://raw.githubusercontent.com/openMSX/openMSX/master/doc/GPL.txt",
            "repo": "git https://github.com/openMSX/openMSX.git RELEASE_17_0 :_get_commit_openmsx",
            "section": "opt",
            "flags": ""
        },
        "oricutron": {
            "platforms": [
                "oric"
            ],
            "id": "oricutron",
            "desc": "Oricutron Oric 1/Oric Atmos emulator",
            "help": "ROM Extensions: .dsk .tap\\n\\nCopy your Oric games to $romdir/oric",
            "licence": "GPL2 https://raw.githubusercontent.com/pete-gordon/oricutron/4c359acfb6bd36d44e6d37891d7b6453324faf7d/main.h",
            "repo": "git https://github.com/HerbFargus/oricutron.git extras",
            "section": "exp"
        },
        "osmose": {
            "platforms": [
                "gamegear",
                "mastersystem"
            ],
            "id": "osmose",
            "desc": "Gamegear emulator Osmose",
            "help": "ROM Extensions: .bin .gg .sms .zip\\nCopy your Game Gear roms to $romdir/gamegear\\n\\nMasterSystem roms to $romdir/mastersystem",
            "licence": "GPL2 https://raw.githubusercontent.com/RetroPie/osmose-rpi/master/license.txt",
            "repo": "git https://github.com/RetroPie/osmose-rpi.git master",
            "section": "opt",
            "flags": "!mali !kms"
        },
        "pcsx-rearmed": {
            "platforms": [
                "psx"
            ],
            "id": "pcsx-rearmed",
            "desc": "Playstation emulator - PCSX (arm optimised)",
            "help": "ROM Extensions: .bin .cue .cbn .img .iso .m3u .mdf .pbp .toc .z .znx\\n\\nCopy your PSX roms to $romdir/psx\\n\\nCopy the required BIOS file SCPH1001.BIN to $biosdir",
            "licence": "GPL2 https://raw.githubusercontent.com/notaz/pcsx_rearmed/master/COPYING",
            "repo": "git https://github.com/notaz/pcsx_rearmed.git master",
            "section": "opt",
            "flags": "sdl1 !all videocore"
        },
        "pcsx2": {
            "platforms": [
                "ps2"
            ],
            "id": "pcsx2",
            "desc": "PS2 emulator PCSX2",
            "help": "ROM Extensions: .bin .iso .img .mdf .z .z2 .bz2 .cso .chd .ima .gz\\n\\nCopy your PS2 roms to $romdir/ps2\\n\\nCopy the required BIOS file to $biosdir",
            "licence": "GPL3 https://raw.githubusercontent.com/PCSX2/pcsx2/master/COPYING.GPLv3",
            "section": "exp",
            "flags": "!all x86"
        },
        "pifba": {
            "platforms": [
                "arcade",
                "neogeo",
                "fba"
            ],
            "id": "pifba",
            "desc": "FBA emulator PiFBA",
            "help": "ROM Extension: .zip\\n\\nCopy your FBA roms to\\n$romdir/fba or\\n$romdir/neogeo or\\n$romdir/arcade\\n\\nFor NeoGeo games the neogeo.zip BIOS is required and must be placed in the same directory as your FBA roms.",
            "licence": "GPL2 https://raw.githubusercontent.com/RetroPie/pifba/master/FBAcapex_src/COPYING",
            "repo": "git https://github.com/RetroPie/pifba.git master",
            "section": "opt armv6=main",
            "flags": "!all videocore"
        },
        "pisnes": {
            "platforms": [
                "snes"
            ],
            "id": "pisnes",
            "desc": "SNES emulator PiSNES",
            "help": "ROM Extensions: .bin .smc .sfc .fig .swc .mgd .zip\\n\\nCopy your SNES roms to $romdir/snes",
            "licence": "NONCOM https://raw.githubusercontent.com/RetroPie/pisnes/master/snes9x.h",
            "repo": "git https://github.com/RetroPie/pisnes.git master",
            "section": "opt",
            "flags": "!all videocore"
        },
        "ppsspp-1.5.4": {
            "platforms": [],
            "id": "ppsspp-1.5.4",
            "desc": "PlayStation Portable emulator PPSSPP v1.5.4",
            "help": "ROM Extensions: .iso .pbp .cso\\n\\nCopy your PlayStation Portable roms to $romdir/psp",
            "licence": "GPL2 https://raw.githubusercontent.com/hrydgard/ppsspp/master/LICENSE.TXT",
            "repo": "git https://github.com/hrydgard/ppsspp.git v1.5.4",
            "section": "opt",
            "flags": "!all videocore"
        },
        "ppsspp": {
            "platforms": [
                "psp"
            ],
            "id": "ppsspp",
            "desc": "PlayStation Portable emulator PPSSPP",
            "help": "ROM Extensions: .iso .pbp .cso\\n\\nCopy your PlayStation Portable roms to $romdir/psp",
            "licence": "GPL2 https://raw.githubusercontent.com/hrydgard/ppsspp/master/LICENSE.TXT",
            "repo": "git https://github.com/hrydgard/ppsspp.git v1.12.3",
            "section": "opt",
            "flags": ""
        },
        "px68k": {
            "platforms": [
                "x68000"
            ],
            "id": "px68k",
            "desc": "SHARP X68000 Emulator",
            "help": "You need to copy a X68000 bios file (iplrom30.dat, iplromco.dat, iplrom.dat, or iplromxv.dat), and the font file (cgrom.dat or cgrom.tmp) to $biosdir/keropi. Use F12 to access the in emulator menu.",
            "repo": "git https://github.com/hissorii/px68k.git master",
            "section": "exp",
            "flags": "sdl1 !mali !kms"
        },
        "quasi88": {
            "platforms": [
                "pc88"
            ],
            "id": "quasi88",
            "desc": "NEC PC-8801 emulator",
            "help": "ROM Extensions: .d88 .88d .cmt .t88\\n\\nCopy your pc88 games to to $romdir/pc88\\n\\nCopy bios files FONT.ROM, N88.ROM, N88KNJ1.ROM, N88KNJ2.ROM, and N88SUB.ROM to $biosdir/pc88",
            "repo": "file $__archive_url/quasi88-0.6.4.tgz",
            "section": "exp",
            "flags": "sdl1 !mali !kms"
        },
        "redream": {
            "platforms": [
                "dreamcast"
            ],
            "id": "redream",
            "desc": "Redream Dreamcast emulator",
            "help": "ROM Extensions: .cdi .cue .chd .gdi .iso\\n\\nCopy your Dreamcast roms to $romdir/dreamcast",
            "licence": "PROP",
            "section": "exp",
            "flags": "noinstclean !all gles31 aarch64 x86_64"
        },
        "reicast": {
            "platforms": [
                "dreamcast"
            ],
            "id": "reicast",
            "desc": "Dreamcast emulator Reicast",
            "help": "ROM Extensions: .cdi .gdi\\n\\nCopy your Dreamcast roms to $romdir/dreamcast\\n\\nCopy the required BIOS files dc_boot.bin and dc_flash.bin to $biosdir/dc",
            "licence": "GPL2 https://raw.githubusercontent.com/reicast/reicast-emulator/master/LICENSE",
            "repo": "git https://github.com/reicast/reicast-emulator.git master",
            "section": "opt",
            "flags": "!armv6"
        },
        "residualvm": {
            "platforms": [
                "residualvm\" \"ResidualVM\" \".sh .rvm"
            ],
            "id": "residualvm",
            "desc": "ResidualVM - A 3D Game Interpreter",
            "help": "Copy your ResidualVM games to $romdir/residualvm",
            "licence": "GPL2 https://raw.githubusercontent.com/residualvm/residualvm/master/COPYING",
            "repo": "git https://github.com/ResidualVM/ResidualVM.git master",
            "section": "exp",
            "flags": "sdl2 !mali"
        },
        "retroarch": {
            "platforms": [],
            "id": "retroarch",
            "desc": "RetroArch - frontend to the libretro emulator cores - required by all lr-* emulators",
            "licence": "GPL3 https://raw.githubusercontent.com/libretro/RetroArch/master/COPYING",
            "repo": "git https://github.com/RetroPie/RetroArch.git retropie-v1.10.0",
            "section": "core"
        },
        "rpix86": {
            "platforms": [
                "pc"
            ],
            "id": "rpix86",
            "desc": "DOS Emulator rpix86",
            "help": "ROM Extensions: .bat .com .exe .sh\\n\\nCopy your DOS games to $romdir/pc",
            "licence": "FREEWARE http://rpix86.patrickaalto.com/rdown.html",
            "section": "opt",
            "flags": "!all rpi !kms"
        },
        "scummvm-sdl1": {
            "platforms": [],
            "id": "scummvm-sdl1",
            "desc": "ScummVM - built with legacy SDL1 support.",
            "help": "Copy your ScummVM games to $romdir/scummvm",
            "licence": "GPL2 https://raw.githubusercontent.com/scummvm/scummvm/master/COPYING",
            "repo": "git https://github.com/scummvm/scummvm.git v2.5.0",
            "section": "opt",
            "flags": "sdl1 !mali !x11"
        },
        "scummvm": {
            "platforms": [
                "scummvm"
            ],
            "id": "scummvm",
            "desc": "ScummVM",
            "help": "Copy your ScummVM games to $romdir/scummvm",
            "licence": "GPL3 https://raw.githubusercontent.com/scummvm/scummvm/master/COPYING",
            "repo": "git https://github.com/scummvm/scummvm.git master a9418f8f",
            "section": "opt",
            "flags": "sdl2"
        },
        "sdltrs": {
            "platforms": [
                "trs-80"
            ],
            "id": "sdltrs",
            "desc": "Radio Shack TRS-80 Model I/III/4/4P emulator",
            "help": "ROM Extension: .dsk\\n\\nCopy your TRS-80 games to $romdir/trs-80\\n\\nCopy the required BIOS file level2.rom, level3.rom, level4.rom or level4p.rom to $biosdir",
            "section": "exp",
            "licence": "BSD https://gitlab.com/jengun/sdltrs/-/raw/master/LICENSE",
            "repo": "git https://gitlab.com/jengun/sdltrs.git sdl2",
            "flags": ""
        },
        "simcoupe": {
            "platforms": [
                "samcoupe"
            ],
            "id": "simcoupe",
            "desc": "SimCoupe SAM Coupe emulator",
            "help": "ROM Extensions: .dsk .mgt .sbt .sad\\n\\nCopy your SAM Coupe games to $romdir/samcoupe.",
            "licence": "GPL2 https://raw.githubusercontent.com/simonowen/simcoupe/master/License.txt",
            "repo": "git https://github.com/simonowen/simcoupe.git :_get_branch_simcoupe",
            "section": "opt",
            "flags": ""
        },
        "snes9x": {
            "platforms": [
                "snes"
            ],
            "id": "snes9x",
            "desc": "SNES emulator SNES9X-RPi",
            "help": "ROM Extensions: .bin .smc .sfc .fig .swc .mgd .zip\\n\\nCopy your SNES roms to $romdir/snes",
            "licence": "NONCOM https://raw.githubusercontent.com/RetroPie/snes9x-rpi/master/snes9x.h",
            "repo": "git https://github.com/RetroPie/snes9x-rpi.git retropie",
            "section": "opt",
            "flags": "sdl1 !all videocore"
        },
        "stella": {
            "platforms": [
                "atari2600"
            ],
            "id": "stella",
            "desc": "Atari2600 emulator STELLA",
            "help": "ROM Extensions: .a26 .bin .rom .zip .gz\\n\\nCopy your Atari 2600 roms to $romdir/atari2600",
            "licence": "GPL2 https://raw.githubusercontent.com/stella-emu/stella/master/License.txt",
            "repo": "git https://github.com/stella-emu/stella.git 6.0.1",
            "section": "opt",
            "flags": ""
        },
        "stratagus": {
            "platforms": [
                "stratagus\" \"Stratagus Strategy Engine\" \".wc1 .wc2 .sc .data"
            ],
            "id": "stratagus",
            "desc": "Stratagus - A strategy game engine to play Warcraft I or II, Starcraft, and some similar open-source games",
            "help": "Copy your Stratagus games to $romdir/stratagus",
            "licence": "GPL2 https://raw.githubusercontent.com/Wargus/stratagus/master/COPYING",
            "repo": "git https://github.com/Wargus/stratagus.git v2.4.3",
            "section": "opt",
            "flags": "!mali !kms"
        },
        "ti99sim-sdl1": {
            "platforms": [
                "ti99"
            ],
            "id": "ti99sim-sdl1",
            "desc": "TI-99/SIM - Texas Instruments Home Computer Emulator (SDL1 version)",
            "help": "ROM Extension: .ctg\\n\\nCopy your TI-99 games to $romdir/ti99\\n\\nCopy the required BIOS file TI-994A.ctg (case sensitive) to $biosdir",
            "licence": "GPL2 http://www.mrousseau.org/programs/ti99sim/",
            "repo": "file $__archive_url/ti99sim-0.15.0.src.tar.gz",
            "section": "exp",
            "flags": "sdl1 !mali"
        },
        "ti99sim": {
            "platforms": [
                "ti99"
            ],
            "id": "ti99sim",
            "desc": "TI-99/SIM - Texas Instruments Home Computer Emulator",
            "help": "ROM Extension: .ctg\\n\\nCopy your TI-99 games to $romdir/ti99\\n\\nCopy the required BIOS file TI-994A.ctg (case sensitive) to $biosdir",
            "licence": "GPL2 https://www.mrousseau.org/programs/ti99sim",
            "repo": "file $__archive_url/ti99sim-0.16.0.src.tar.gz",
            "section": "exp",
            "flags": ""
        },
        "uae4all": {
            "platforms": [
                "amiga"
            ],
            "id": "uae4all",
            "desc": "Amiga emulator UAE4All",
            "help": "ROM Extension: .adf\\n\\nCopy your Amiga games to $romdir/amiga\\n\\nCopy the required BIOS files\\nkick13.rom\\nkick20.rom\\nkick31.rom\\nto $biosdir/amiga",
            "licence": "GPL2 https://raw.githubusercontent.com/RetroPie/uae4all2/retropie/copying",
            "repo": "git https://github.com/RetroPie/uae4all2.git retropie",
            "section": "opt",
            "flags": "sdl1 !all videocore"
        },
        "uae4arm": {
            "platforms": [
                "amiga"
            ],
            "id": "uae4arm",
            "desc": "Amiga emulator with JIT support",
            "help": "ROM Extension: .adf .ipf\\n\\nCopy your Amiga games to $romdir/amiga\\n\\nCopy the required BIOS files\\nkick13.rom\\nkick20.rom\\nkick31.rom\\nto $biosdir/amiga",
            "licence": "GPL2",
            "repo": "git https://github.com/Chips-fr/uae4arm-rpi.git master",
            "section": "opt",
            "flags": "!all dispmanx"
        },
        "vice": {
            "platforms": [
                "c64"
            ],
            "id": "vice",
            "desc": "C64 emulator VICE",
            "help": "ROM Extensions: .crt .d64 .g64 .prg .t64 .tap .x64 .zip .vsf\\n\\nCopy your Commodore 64 games to $romdir/c64",
            "licence": "GPL2 http://svn.code.sf.net/p/vice-emu/code/trunk/vice/COPYING",
            "repo": "svn svn://svn.code.sf.net/p/vice-emu/code/tags/v3.5/vice - HEAD",
            "section": "opt",
            "flags": ""
        },
        "xm7": {
            "platforms": [
                "fm7"
            ],
            "id": "xm7",
            "desc": "Fujitsu FM-7 series emulator",
            "help": "ROM Extensions: .d77 .t77 .d88 .2d \\n\\nCopy your FM-7 games to to $romdir/xm7\\n\\nCopy bios files DICROM.ROM, EXTSUB.ROM, FBASIC30.ROM, INITIATE.ROM, KANJI1.ROM, KANJI2.ROM, SUBSYS_A.ROM, SUBSYS_B.ROM, SUBSYSCG.ROM, SUBSYS_C.ROM, fddseek.wav, relayoff.wav and relay_on.wav to $biosdir/xm7",
            "licence": "NONCOM https://raw.githubusercontent.com/nakatamaho/XM7-for-SDL/master/Doc/mess/license.txt",
            "repo": "git https://github.com/nakatamaho/XM7-for-SDL.git master",
            "section": "exp",
            "flags": "!mali !kms"
        },
        "xroar": {
            "platforms": [
                "dragon32",
                "coco"
            ],
            "id": "xroar",
            "desc": "Dragon / CoCo emulator XRoar",
            "help": "ROM Extensions: .cas .wav .bas .asc .dmk .jvc .os9 .dsk .vdk .rom .ccc .sna\\n\\nCopy your Dragon roms to $romdir/dragon32\\n\\nCopy your CoCo games to $romdir/coco\\n\\nCopy the required BIOS files d32.rom (Dragon 32), bas13.rom (CoCo), coco3.rom/coco3p.rom (CoCo3) to $biosdir",
            "licence": "GPL3 http://www.6809.org.uk/xroar/",
            "repo": "git http://www.6809.org.uk/git/xroar.git 1.0.9",
            "section": "opt",
            "flags": ""
        },
        "yabasanshiro": {
            "platforms": [
                "saturn"
            ],
            "id": "yabasanshiro",
            "desc": "SEGA Saturn emulator Yaba Sanshiro",
            "help": "ROM Extensions: .cue .chd\\n\\nCopy your SEGA Saturn ios images to $romdir/saturn",
            "licence": "GPL2 https://github.com/devmiyax/yabause/blob/master/LICENSE",
            "repo": "git https://github.com/devmiyax/yabause.git pi4",
            "section": "exp",
            "flags": "!all rpi !videocore"
        },
        "zesarux": {
            "platforms": [
                "zxspectrum",
                "samcoupe",
                "amstradcpc"
            ],
            "id": "zesarux",
            "desc": "ZX Spectrum emulator ZEsarUX",
            "help": "ROM Extensions: .sna .szx .z80 .tap .tzx .gz .udi .mgt .img .trd .scl .dsk .zip\\n\\nCopy your ZX Spectrum games to $romdir/zxspectrum",
            "licence": "GPL3 https://raw.githubusercontent.com/chernandezba/zesarux/master/src/LICENSE",
            "repo": "git https://github.com/chernandezba/zesarux.git ZEsarUX-10.0",
            "section": "opt",
            "flags": "sdl2 sdl1-videocore"
        },
        "lr-81": {
            "platforms": [
                "zx81"
            ],
            "id": "lr-81",
            "desc": "Sinclair ZX81 emulator - EightyOne port for libretro",
            "help": "ROM Extensions: .p .tzx .t81\\n\\nCopy your ZX81 roms to $romdir/zx81",
            "licence": "GPL3 https://raw.githubusercontent.com/libretro/81-libretro/master/LICENSE",
            "repo": "git https://github.com/libretro/81-libretro.git master",
            "section": "exp"
        },
        "lr-atari800": {
            "platforms": [
                "atari800",
                "atari5200"
            ],
            "id": "lr-atari800",
            "desc": "Atari 8-bit/800/5200 emulator - Atari800 port for libretro",
            "help": "ROM Extensions: .a52 .bas .bin .car .xex .atr .xfd .dcm .atr.gz .xfd.gz\\n\\nCopy your Atari800 games to $romdir/atari800\\n\\nCopy your Atari 5200 roms to $romdir/atari5200 You need to copy the Atari 800/5200 BIOS files (5200.ROM, ATARIBAS.ROM, ATARIOSB.ROM and ATARIXL.ROM) to the folder $biosdir",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/libretro-atari800/master/atari800/COPYING",
            "repo": "git https://github.com/libretro/libretro-atari800.git master",
            "section": "main"
        },
        "lr-beetle-lynx": {
            "platforms": [
                "atarilynx"
            ],
            "id": "lr-beetle-lynx",
            "desc": "Atari Lynx emulator - Mednafen Lynx Port for libretro, itself a fork of Handy",
            "help": "ROM Extensions: .lnx .zip\\n\\nCopy your Atari Lynx roms to $romdir/atarilynx\\n\\nCopy the required BIOS file lynxboot.img to $biosdir",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/beetle-lynx-libretro/master/COPYING",
            "repo": "git https://github.com/libretro/beetle-lynx-libretro.git master",
            "section": "opt"
        },
        "lr-beetle-ngp": {
            "platforms": [
                "ngp",
                "ngpc"
            ],
            "id": "lr-beetle-ngp",
            "desc": "Neo Geo Pocket(Color)emu - Mednafen Neo Geo Pocket core port for libretro",
            "help": "ROM Extensions: .ngc .ngp .zip\\n\\nCopy your Neo Geo Pocket roms to $romdir/ngp\\n\\nCopy your Neo Geo Pocket Color roms to $romdir/ngpc",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/beetle-ngp-libretro/master/COPYING",
            "repo": "git https://github.com/libretro/beetle-ngp-libretro.git master",
            "section": "main"
        },
        "lr-beetle-pce-fast": {
            "platforms": [
                "pcengine"
            ],
            "id": "lr-beetle-pce-fast",
            "desc": "PCEngine emu - Mednafen PCE Fast port for libretro",
            "help": "ROM Extensions: .pce .ccd .cue .zip\\n\\nCopy your PC Engine / TurboGrafx roms to $romdir/pcengine\\n\\nCopy the required BIOS file syscard3.pce to $biosdir",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/beetle-pce-fast-libretro/master/COPYING",
            "repo": "git https://github.com/libretro/beetle-pce-fast-libretro.git master",
            "section": "main"
        },
        "lr-beetle-pcfx": {
            "platforms": [
                "pcfx"
            ],
            "id": "lr-beetle-pcfx",
            "desc": "PCFX emulator - Mednafen PCFX Port for libretro",
            "help": "ROM Extensions: .img .iso .ccd .cue\\n\\nCopy the required BIOS file pcfx.rom to $biosdir",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/beetle-pcfx-libretro/master/COPYING",
            "repo": "git https://github.com/libretro/beetle-pcfx-libretro master",
            "section": "exp"
        },
        "lr-beetle-psx": {
            "platforms": [
                "psx"
            ],
            "id": "lr-beetle-psx",
            "desc": "PlayStation emulator - Mednafen PSX Port for libretro",
            "help": "ROM Extensions: .bin .cue .cbn .img .iso .m3u .mdf .pbp .toc .z .znx\\n\\nCopy your PlayStation roms to $romdir/psx\\n\\nCopy the required BIOS files\\n\\nscph5500.bin and\\nscph5501.bin and\\nscph5502.bin to\\n\\n$biosdir",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/beetle-psx-libretro/master/COPYING",
            "repo": "git https://github.com/libretro/beetle-psx-libretro.git master",
            "section": "opt x86=main",
            "flags": "!arm"
        },
        "lr-beetle-saturn": {
            "platforms": [
                "saturn"
            ],
            "id": "lr-beetle-saturn",
            "desc": "Saturn emulator - Mednafen Saturn port for libretro",
            "help": "ROM Extensions: .chd .cue\\n\\nCopy your Saturn roms to $romdir/saturn\\n\\nCopy the required BIOS files sega_101.bin / mpr-17933.bin to $biosdir",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/beetle-saturn-libretro/master/COPYING",
            "repo": "git https://github.com/libretro/beetle-saturn-libretro.git master",
            "section": "exp",
            "flags": "!armv6"
        },
        "lr-beetle-supergrafx": {
            "platforms": [
                "pcengine"
            ],
            "id": "lr-beetle-supergrafx",
            "desc": "SuperGrafx TG-16 emulator - Mednafen PCE Fast port for libretro",
            "help": "ROM Extensions: .pce .ccd .cue .zip\\n\\nCopy your PC Engine / TurboGrafx roms to $romdir/pcengine\\n\\nCopy the required BIOS file syscard3.pce to $biosdir",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/beetle-supergrafx-libretro/master/COPYING",
            "repo": "git https://github.com/libretro/beetle-supergrafx-libretro.git master",
            "section": "main"
        },
        "lr-beetle-vb": {
            "platforms": [
                "virtualboy"
            ],
            "id": "lr-beetle-vb",
            "desc": "Virtual Boy emulator - Mednafen VB (optimised) port for libretro",
            "help": "ROM Extensions: .vb .zip\\n\\nCopy your Virtual Boy roms to $romdir/virtualboy",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/beetle-vb-libretro/master/COPYING",
            "repo": "git https://github.com/libretro/beetle-vb-libretro.git master",
            "section": "opt",
            "flags": ""
        },
        "lr-beetle-wswan": {
            "platforms": [
                "wonderswan",
                "wonderswancolor"
            ],
            "id": "lr-beetle-wswan",
            "desc": "Wonderswan emu - Mednafen WonderSwan core port for libretro",
            "help": "ROM Extensions: .ws .wsc .zip\\n\\nCopy your Wonderswan roms to $romdir/wonderswan\\n\\nCopy your Wonderswan Color roms to $romdir/wonderswancolor",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/beetle-wswan-libretro/master/COPYING",
            "repo": "git https://github.com/libretro/beetle-wswan-libretro.git master",
            "section": "opt"
        },
        "lr-bluemsx": {
            "platforms": [
                "msx",
                "coleco"
            ],
            "id": "lr-bluemsx",
            "desc": "MSX/MSX2/Colecovision emu - blueMSX port for libretro",
            "help": "ROM Extensions: .cas .rom .mx1 .mx2 .col .dsk .zip\\n\\nCopy your MSX/MSX2 games to $romdir/msx\\nCopy your Colecovision games to $romdir/coleco\\n\\nlr-bluemsx requires the BIOS files from the full standalone package of BlueMSX to be copied to '$biosdir/Machines' folder.\\nColecovision BIOS needs to be copied to '$biosdir/Machines/COL - ColecoVision\\coleco.rom'",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/blueMSX-libretro/master/license.txt",
            "repo": "git https://github.com/libretro/blueMSX-libretro.git master",
            "section": "opt"
        },
        "lr-bsnes": {
            "platforms": [
                "snes"
            ],
            "id": "lr-bsnes",
            "desc": "Super Nintendo Emulator - bsnes port for libretro (v115)",
            "help": "ROM Extensions: .bml .smc .sfc .zip\\n\\nCopy your SNES roms to $romdir/snes",
            "licence": "GPL3 https://raw.githubusercontent.com/libretro/bsnes/master/LICENSE.txt",
            "repo": "git https://github.com/libretro/bsnes.git master",
            "section": "opt",
            "flags": "!armv6"
        },
        "lr-caprice32": {
            "platforms": [
                "amstradcpc"
            ],
            "id": "lr-caprice32",
            "desc": "Amstrad CPC emu - Caprice32 port for libretro",
            "help": "ROM Extensions: .cdt .cpc .dsk\\n\\nCopy your Amstrad CPC games to $romdir/amstradcpc",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/libretro-cap32/master/cap32/COPYING.txt",
            "repo": "git https://github.com/libretro/libretro-cap32.git master",
            "section": "main"
        },
        "lr-desmume": {
            "platforms": [
                "nds"
            ],
            "id": "lr-desmume",
            "desc": "NDS emu - DESMUME",
            "help": "ROM Extensions: .nds .zip\\n\\nCopy your Nintendo DS roms to $romdir/nds",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/desmume/master/desmume/COPYING",
            "repo": "git https://github.com/libretro/desmume.git master",
            "section": "exp"
        },
        "lr-desmume2015": {
            "platforms": [
                "nds"
            ],
            "id": "lr-desmume2015",
            "desc": "NDS emu - DESMUME (2015 version)",
            "help": "ROM Extensions: .nds .zip\\n\\nCopy your Nintendo DS roms to $romdir/nds",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/desmume/master/desmume/COPYING",
            "repo": "git https://github.com/libretro/desmume2015.git master",
            "section": "exp"
        },
        "lr-dinothawr": {
            "platforms": [],
            "id": "lr-dinothawr",
            "desc": "Dinothawr - standalone libretro puzzle game",
            "help": "Dinothawr game assets are automatically installed to $romdir/ports/dinothawr/",
            "licence": "NONCOM https://raw.githubusercontent.com/libretro/Dinothawr/master/LICENSE",
            "repo": "git https://github.com/libretro/Dinothawr.git master",
            "section": "exp"
        },
        "lr-dolphin": {
            "platforms": [
                "gc",
                "wii"
            ],
            "id": "lr-dolphin",
            "desc": "Gamecube/Wii emulator - Dolphin port for libretro",
            "help": "ROM Extensions: .gcm .iso .wbfs .ciso .gcz\\n\\nCopy your gamecube roms to $romdir/gc and Wii roms to $romdir/wii",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/dolphin/master/license.txt",
            "repo": "git https://github.com/libretro/dolphin master",
            "section": "exp",
            "flags": "!all 64bit"
        },
        "lr-dosbox-pure": {
            "platforms": [
                "pc"
            ],
            "id": "lr-dosbox-pure",
            "desc": "DOS emulator",
            "help": "ROM Extensions: .bat .com .cue .dosz .exe .ins .ima .img .iso .m3u .m3u8 .vhd .zip\\n\\nCopy your DOS games to $ROMDIR/pc",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/dosbox-pure/main/LICENSE",
            "repo": "git https://github.com/libretro/dosbox-pure.git main",
            "section": "exp",
            "flags": ""
        },
        "lr-dosbox": {
            "platforms": [
                "pc"
            ],
            "id": "lr-dosbox",
            "desc": "DOS emulator",
            "help": "ROM Extensions: .bat .com .exe .sh\\n\\nCopy your DOS games to $ROMDIR/pc",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/dosbox-libretro/master/COPYING",
            "repo": "git https://github.com/libretro/dosbox-libretro.git master",
            "section": "exp",
            "flags": ""
        },
        "lr-fbalpha2012": {
            "platforms": [
                "arcade",
                "fba",
                "neogeo"
            ],
            "id": "lr-fbalpha2012",
            "desc": "Arcade emu - Final Burn Alpha (0.2.97.30) port for libretro",
            "help": "Previously called lr-fba\\n\\nROM Extension: .zip\\n\\nCopy your FBA roms to\\n$romdir/fba or\\n$romdir/neogeo or\\n$romdir/arcade\\n\\nFor NeoGeo games the neogeo.zip BIOS is required and must be placed in the same directory as your FBA roms.",
            "licence": "NONCOM https://raw.githubusercontent.com/libretro/fbalpha2012/master/docs/license.txt",
            "repo": "git https://github.com/libretro/fbalpha2012.git master",
            "section": "opt armv6=main"
        },
        "lr-fbneo": {
            "platforms": [
                "${systems[@]}"
            ],
            "id": "lr-fbneo",
            "desc": "Arcade emu - FinalBurn Neo (latest version) port for libretro",
            "help": "Previously called lr-fba-next and fbalpha\\n\\ROM Extension: .zip\\n\\nCopy your FBA roms to\\n$romdir/fba or\\n$romdir/neogeo or\\n$romdir/arcade\\n\\nFor NeoGeo games the neogeo.zip BIOS is required and must be placed in the same directory as your FBA roms.",
            "licence": "NONCOM https://raw.githubusercontent.com/libretro/FBNeo/master/src/license.txt",
            "repo": "git https://github.com/libretro/FBNeo.git master",
            "section": "main armv6=opt"
        },
        "lr-fceumm": {
            "platforms": [
                "nes",
                "fds"
            ],
            "id": "lr-fceumm",
            "desc": "NES emu - FCEUmm port for libretro",
            "help": "ROM Extensions: .nes .zip\\n\\nCopy your NES roms to $romdir/nes\\n\\nFor the Famicom Disk System copy your roms to $romdir/fds\\n\\nFor the Famicom Disk System copy the required BIOS file disksys.rom to $biosdir",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/libretro-fceumm/master/Copying",
            "repo": "git https://github.com/libretro/libretro-fceumm.git master",
            "section": "main"
        },
        "lr-flycast": {
            "platforms": [
                "dreamcast",
                "arcade"
            ],
            "id": "lr-flycast",
            "desc": "Dreamcast emulator - Reicast port for libretro",
            "help": "Previously named lr-reicast then lr-beetle-dc\\n\\nDreamcast ROM Extensions: .cdi .gdi .chd .m3u, Naomi/Atomiswave ROM Extension: .zip\\n\\nCopy your Dreamcast/Naomi roms to $romdir/dreamcast\\n\\nCopy the required Dreamcast BIOS files dc_boot.bin and dc_flash.bin to $biosdir/dc\\n\\nCopy the required Naomi/Atomiswave BIOS files naomi.zip and awbios.zip to $biosdir/dc",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/flycast/master/LICENSE",
            "repo": "git https://github.com/libretro/flycast.git master",
            "section": "opt",
            "flags": "!armv6"
        },
        "lr-fmsx": {
            "platforms": [
                "msx"
            ],
            "id": "lr-fmsx",
            "desc": "MSX/MSX2 emu - fMSX port for libretro",
            "help": "ROM Extensions: .rom .mx1 .mx2 .col .dsk .zip\\n\\nCopy the fmsx BIOS files to '$biosdir'\\n\\nCopy your MSX/MSX2 games to $romdir/msx",
            "licence": "NONCOM https://raw.githubusercontent.com/libretro/fmsx-libretro/master/LICENSE",
            "repo": "git https://github.com/libretro/fmsx-libretro.git master",
            "section": "opt"
        },
        "lr-freechaf": {
            "platforms": [
                "channelf"
            ],
            "id": "lr-freechaf",
            "desc": "ChannelF emulator for libretro",
            "help": "ROM Extensions: .bin .rom\\n\\nCopy your ChannelF roms to $romdir/channelf\\n\\nCopy the required BIOS files sl31245.bin and sl31253.bin or sl90025.bin to $biosdir",
            "licence": "GPL3 https://raw.githubusercontent.com/libretro/FreeChaF/master/LICENSE",
            "repo": "git https://github.com/libretro/FreeChaF.git master",
            "section": "exp"
        },
        "lr-freeintv": {
            "platforms": [
                "intellivision"
            ],
            "id": "lr-freeintv",
            "desc": "Intellivision emulator for libretro",
            "help": "ROM Extensions: .int .bin\\n\\nCopy your Intellivision roms to $romdir/intellivision\\n\\nCopy the required BIOS files exec.bin and grom.bin to $biosdir",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/FreeIntv/master/LICENSE",
            "repo": "git https://github.com/libretro/FreeIntv.git master",
            "section": "opt"
        },
        "lr-fuse": {
            "platforms": [
                "zxspectrum"
            ],
            "id": "lr-fuse",
            "desc": "ZX Spectrum emu - Fuse port for libretro",
            "help": "ROM Extensions: .sna .szx .z80 .tap .tzx .gz .udi .mgt .img .trd .scl .dsk .zip\\n\\nCopy your ZX Spectrum games to $romdir/zxspectrum",
            "licence": "GPL3 https://raw.githubusercontent.com/libretro/fuse-libretro/master/LICENSE",
            "repo": "git https://github.com/libretro/fuse-libretro.git master",
            "section": "main"
        },
        "lr-gambatte": {
            "platforms": [
                "gb",
                "gbc"
            ],
            "id": "lr-gambatte",
            "desc": "Gameboy Color emu - libgambatte port for libretro",
            "help": "ROM Extensions: .gb .gbc .zip\\n\\nCopy your GameBoy roms to $romdir/gb\\n\\nCopy your GameBoy Color roms to $romdir/gbc",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/gambatte-libretro/master/COPYING",
            "repo": "git https://github.com/libretro/gambatte-libretro.git master",
            "section": "main"
        },
        "lr-gearsystem": {
            "platforms": [
                "gamegear",
                "mastersystem",
                "sg-1000"
            ],
            "id": "lr-gearsystem",
            "desc": "Sega 8 bit emu - Gearsystem port for libretro",
            "help": "ROM Extensions: .gg .sg .sms .bin .zip\\nCopy your Game Gear roms to $romdir/gamegear\\nMasterSystem roms to $romdir/mastersystem\\nSG-1000 roms to $romdir/sg-1000",
            "licence": "GPL3 https://raw.githubusercontent.com/drhelius/Gearsystem/master/LICENSE",
            "repo": "git https://github.com/drhelius/Gearsystem.git master",
            "section": "exp"
        },
        "lr-genesis-plus-gx": {
            "platforms": [
                "gamegear",
                "mastersystem",
                "megadrive",
                "sg-1000",
                "segacd"
            ],
            "id": "lr-genesis-plus-gx",
            "desc": "Sega 8/16 bit emu - Genesis Plus (enhanced) port for libretro",
            "help": "ROM Extensions: .bin .cue .gen .gg .iso .md .sg .smd .sms .zip\\nCopy your Game Gear roms to $romdir/gamegear\\nMasterSystem roms to $romdir/mastersystem\\nMegadrive / Genesis roms to $romdir/megadrive\\nSG-1000 roms to $romdir/sg-1000\\nSegaCD roms to $romdir/segacd\\nThe Sega CD requires the BIOS files bios_CD_U.bin and bios_CD_E.bin and bios_CD_J.bin copied to $biosdir",
            "licence": "NONCOM https://raw.githubusercontent.com/libretro/Genesis-Plus-GX/master/LICENSE.txt",
            "repo": "git https://github.com/libretro/Genesis-Plus-GX.git master",
            "section": "main"
        },
        "lr-gpsp": {
            "platforms": [
                "gba"
            ],
            "id": "lr-gpsp",
            "desc": "GBA emu - gpSP port for libretro",
            "help": "ROM Extensions: .gba .zip\\n\\nCopy your Game Boy Advance roms to $romdir/gba\\n\\nCopy the required BIOS file gba_bios.bin to $biosdir",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/gpsp/master/COPYING",
            "repo": "git https://github.com/libretro/gpsp.git master",
            "section": "opt arm=main",
            "flags": "!all arm"
        },
        "lr-gw": {
            "platforms": [
                "gameandwatch"
            ],
            "id": "lr-gw",
            "desc": "Game and Watch simulator",
            "help": "ROM Extension: .mgw\\n\\nCopy your Game and Watch games to $romdir/gameandwatch",
            "licence": "ZLIB https://raw.githubusercontent.com/libretro/gw-libretro/master/LICENSE",
            "repo": "git https://github.com/libretro/gw-libretro.git master",
            "section": "opt"
        },
        "lr-handy": {
            "platforms": [
                "atarilynx"
            ],
            "id": "lr-handy",
            "desc": "Atari Lynx emulator - Handy port for libretro",
            "help": "ROM Extensions: .lnx .zip\\n\\nCopy your Atari Lynx roms to $romdir/atarilynx",
            "licence": "ZLIB https://raw.githubusercontent.com/libretro/libretro-handy/master/lynx/license.txt",
            "repo": "git https://github.com/libretro/libretro-handy.git master",
            "section": "main"
        },
        "lr-hatari": {
            "platforms": [
                "atarist"
            ],
            "id": "lr-hatari",
            "desc": "Atari emulator - Hatari port for libretro",
            "help": "ROM Extensions: .st .stx .img .rom .raw .ipf .ctr .zip\\n\\nCopy your Atari ST games to $romdir/atarist",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/hatari/master/gpl.txt",
            "repo": "git https://github.com/libretro/hatari.git master",
            "section": "exp"
        },
        "lr-kronos": {
            "platforms": [
                "saturn"
            ],
            "id": "lr-kronos",
            "desc": "Saturn & ST-V emulator - Kronos port for libretro",
            "help": "ROM Extensions: .iso .cue .zip .ccd .mds\\n\\nCopy your Sega Saturn & ST-V roms to $romdir/saturn\\n\\nCopy the required BIOS file saturn_bios.bin / stvbios.zip to $biosdir/kronos",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/yabause/kronos/yabause/COPYING",
            "repo": "git https://github.com/libretro/yabause.git kronos",
            "section": "exp",
            "flags": "!arm !aarch64"
        },
        "lr-mame": {
            "platforms": [
                "arcade",
                "mame-libretro"
            ],
            "id": "lr-mame",
            "desc": "MAME emulator - MAME (current) port for libretro",
            "help": "ROM Extension: .zip\\n\\nCopy your MAME roms to either $romdir/mame-libretro or\\n$romdir/arcade",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/mame/master/COPYING",
            "repo": "git https://github.com/libretro/mame.git master",
            "section": "exp",
            "flags": ""
        },
        "lr-mame2000": {
            "platforms": [
                "arcade",
                "mame-mame4all",
                "mame-libretro"
            ],
            "id": "lr-mame2000",
            "desc": "Arcade emu - MAME 0.37b5 port for libretro",
            "help": "ROM Extension: .zip\\n\\nCopy your MAME 0.37b5 roms to either $romdir/mame-mame4all or\\n$romdir/arcade",
            "licence": "NONCOM https://raw.githubusercontent.com/libretro/mame2000-libretro/master/readme.txt",
            "repo": "git https://github.com/libretro/mame2000-libretro.git master",
            "section": "opt armv6=main"
        },
        "lr-mame2003-plus": {
            "platforms": [],
            "id": "lr-mame2003-plus",
            "desc": "Arcade emu - updated MAME 0.78 port for libretro with added game support",
            "help": "ROM Extension: .zip\\n\\nCopy your MAME roms to either $romdir/mame-libretro or\\n$romdir/arcade",
            "licence": "NONCOM https://raw.githubusercontent.com/libretro/mame2003-plus-libretro/master/LICENSE.md",
            "repo": "git https://github.com/libretro/mame2003-plus-libretro.git master",
            "section": "opt"
        },
        "lr-mame2003": {
            "platforms": [
                "arcade",
                "mame-libretro"
            ],
            "id": "lr-mame2003",
            "desc": "Arcade emu - MAME 0.78 port for libretro",
            "help": "ROM Extension: .zip\\n\\nCopy your MAME roms to either $romdir/mame-libretro or\\n$romdir/arcade",
            "licence": "NONCOM https://raw.githubusercontent.com/libretro/mame2003-libretro/master/LICENSE.md",
            "repo": "git https://github.com/libretro/mame2003-libretro.git master",
            "section": "main armv6=opt"
        },
        "lr-mame2010": {
            "platforms": [
                "arcade",
                "mame-libretro"
            ],
            "id": "lr-mame2010",
            "desc": "Arcade emu - MAME 0.139 port for libretro",
            "help": "ROM Extension: .zip\\n\\nCopy your MAME roms to either $romdir/mame-libretro or\\n$romdir/arcade",
            "licence": "NONCOM https://raw.githubusercontent.com/libretro/mame2010-libretro/master/docs/license.txt",
            "repo": "git https://github.com/libretro/mame2010-libretro.git master",
            "section": "opt"
        },
        "lr-mame2015": {
            "platforms": [
                "arcade",
                "mame-libretro"
            ],
            "id": "lr-mame2015",
            "desc": "Arcade emu - MAME 0.160 port for libretro",
            "help": "ROM Extension: .zip\\n\\nCopy your MAME roms to either $romdir/mame-libretro or\\n$romdir/arcade",
            "licence": "NONCOM https://raw.githubusercontent.com/libretro/mame2015-libretro/master/docs/license.txt",
            "repo": "git https://github.com/libretro/mame2015-libretro.git master",
            "section": "exp"
        },
        "lr-mame2016": {
            "platforms": [
                "arcade",
                "mame-libretro"
            ],
            "id": "lr-mame2016",
            "desc": "MAME emulator - MAME 0.174 port for libretro",
            "help": "ROM Extension: .zip\\n\\nCopy your MAME roms to either $romdir/mame-libretro or\\n$romdir/arcade",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/mame2016-libretro/master/LICENSE.md",
            "repo": "git https://github.com/libretro/mame2016-libretro.git master",
            "section": "exp",
            "flags": ""
        },
        "lr-mesen": {
            "platforms": [
                "nes",
                "fds"
            ],
            "id": "lr-mesen",
            "desc": "High-accuracy NES and Famicom emulator",
            "help": "ROM Extensions: .nes .fds .unf .unif .zip\\n\\nCopy your NES roms to $romdir/nes\\nFamicom roms to $romdir/fds\\nCopy the recommended BIOS file disksys.rom to $biosdir",
            "licence": "GPL3 https://raw.githubusercontent.com/sourmesen/mesen/master/LICENSE",
            "repo": "git https://github.com/libretro/Mesen.git master",
            "section": "exp",
            "flags": "!armv6"
        },
        "lr-mess": {
            "platforms": [
                "nes",
                "gb",
                "coleco",
                "arcadia",
                "crvision"
            ],
            "id": "lr-mess",
            "desc": "MESS emulator - MESS Port for libretro",
            "help": "see wiki for detailed explanation",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/mame/master/COPYING",
            "repo": "git https://github.com/libretro/mame.git master",
            "section": "exp",
            "flags": ""
        },
        "lr-mess2016": {
            "platforms": [],
            "id": "lr-mess2016",
            "desc": "MESS emulator - MESS Port for libretro",
            "help": "see wiki for detailed explanation",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/mame2016-libretro/master/LICENSE.md",
            "repo": "git https://github.com/libretro/mame2016-libretro.git master",
            "section": "exp",
            "flags": ""
        },
        "lr-mgba": {
            "platforms": [
                "gb",
                "gbc",
                "gba"
            ],
            "id": "lr-mgba",
            "desc": "(Super) Game Boy Color/GBA emulator - MGBA (optimised) port for libretro",
            "help": "ROM Extensions: .gb .gbc .gba .zip\\n\\nCopy your Game Boy roms to $romdir/gb\\nGame Boy Color roms to $romdir/gbc\\nGame Boy Advance roms to $romdir/gba\\n\\nCopy the recommended BIOS files gb_bios.bin, gbc_bios.bin, sgb_bios.bin and gba_bios.bin to $biosdir",
            "licence": "MPL2 https://raw.githubusercontent.com/libretro/mgba/master/LICENSE",
            "repo": "git https://github.com/libretro/mgba.git master",
            "section": "main",
            "flags": ""
        },
        "lr-mrboom": {
            "platforms": [],
            "id": "lr-mrboom",
            "desc": "Mr.Boom - 8 players Bomberman clone for libretro.",
            "help": "8 players Bomberman clone for libretro.",
            "licence": "MIT https://raw.githubusercontent.com/libretro/mrboom-libretro/master/LICENSE",
            "repo": "git https://github.com/libretro/mrboom-libretro.git master",
            "section": "opt"
        },
        "lr-mupen64plus-next": {
            "platforms": [
                "n64"
            ],
            "id": "lr-mupen64plus-next",
            "desc": "N64 emulator - Mupen64Plus + GLideN64 for libretro (next version)",
            "help": "ROM Extensions: .z64 .n64 .v64\\n\\nCopy your N64 roms to $romdir/n64",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/mupen64plus-libretro-nx/master/LICENSE",
            "repo": "git https://github.com/libretro/mupen64plus-libretro-nx.git develop",
            "section": "opt kms=main",
            "flags": ""
        },
        "lr-mupen64plus": {
            "platforms": [
                "n64"
            ],
            "id": "lr-mupen64plus",
            "desc": "N64 emu - Mupen64Plus + GLideN64 for libretro",
            "help": "ROM Extensions: .z64 .n64 .v64\\n\\nCopy your N64 roms to $romdir/n64",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/mupen64plus-libretro/master/LICENSE",
            "repo": "git https://github.com/RetroPie/mupen64plus-libretro.git master",
            "section": "main",
            "flags": "!aarch64"
        },
        "lr-neocd": {
            "platforms": [
                "neogeo"
            ],
            "id": "lr-neocd",
            "desc": "Neo Geo CD Emulator - rewrite of NeoCD for libretro",
            "help": "ROM Extension: .chd .cue\\n\\nCopy your roms to\\n$romdir/neogeo\\n\\nYou will need a minimum of two BIOS files (eg. ng-lo.rom, uni-bioscd.rom) which should be copied to $biosdir/neocd",
            "licence": "GPL3 https://raw.githubusercontent.com/libretro/neocd_libretro/master/LICENSE.md",
            "repo": "git https://github.com/libretro/neocd_libretro.git master",
            "section": "exp"
        },
        "lr-nestopia": {
            "platforms": [
                "nes",
                "fds"
            ],
            "id": "lr-nestopia",
            "desc": "NES emu - Nestopia (enhanced) port for libretro",
            "help": "ROM Extensions: .nes .zip\\n\\nCopy your NES roms to $romdir/nes\\n\\nFor the Famicom Disk System copy your roms to $romdir/fds\\n\\nFor the Famicom Disk System copy the required BIOS file disksys.rom to $biosdir",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/nestopia/master/COPYING",
            "repo": "git https://github.com/libretro/nestopia.git master",
            "section": "main"
        },
        "lr-np2kai": {
            "platforms": [
                "pc98"
            ],
            "id": "lr-np2kai",
            "desc": "PC98 emu - Modified Neko Project II port for libretro",
            "help": "ROM Extensions: .d88 .d98 .88d .98d .fdi .xdf .hdm .dup .2hd .tfd .hdi .thd .nhd .hdd\\n\\nCopy your pc98 games to to $romdir/pc98\\n\\nCopy bios files 2608_bd.wav, 2608_hh.wav, 2608_rim.wav, 2608_sd.wav, 2608_tom.wav 2608_top.wav, bios.rom, FONT.ROM and sound.rom to $biosdir/np2kai",
            "licence": "MIT https://raw.githubusercontent.com/libretro/NP2kai/master/LICENSE",
            "repo": "git https://github.com/AZO234/NP2kai.git master",
            "section": "exp"
        },
        "lr-nxengine": {
            "platforms": [],
            "id": "lr-nxengine",
            "desc": "Cave Story engine clone - NxEngine port for libretro",
            "help": "Copy the original Cave Story game files to $romdir/ports/CaveStory so you have the file $romdir/ports/CaveStory/Doukutsu.exe present.",
            "licence": "GPL3 https://raw.githubusercontent.com/libretro/nxengine-libretro/master/nxengine/LICENSE",
            "repo": "git https://github.com/libretro/nxengine-libretro.git master",
            "section": "opt"
        },
        "lr-o2em": {
            "platforms": [
                "videopac"
            ],
            "id": "lr-o2em",
            "desc": "Odyssey 2 / Videopac emu - O2EM port for libretro",
            "help": "ROM Extensions: .bin .zip\\n\\nCopy your Odyssey 2 / Videopac roms to $romdir/videopac\\n\\nCopy the required BIOS file o2rom.bin to $biosdir",
            "licence": "OTHER",
            "repo": "git https://github.com/libretro/libretro-o2em master",
            "section": "opt"
        },
        "lr-opera": {
            "platforms": [
                "3do"
            ],
            "id": "lr-opera",
            "desc": "3DO emulator - fork of 4DO/FreeDO for libretro",
            "help": "ROM Extension: .cue .chd .iso .zip\\n\\nCopy your 3do roms to $romdir/3do\\n\\nCopy the required BIOS file panazf10.bin to $biosdir",
            "licence": "LGPL https://raw.githubusercontent.com/libretro/opera-libretro/master/libopera/opera_3do.c",
            "repo": "git https://github.com/libretro/opera-libretro.git master",
            "section": "exp"
        },
        "lr-parallel-n64": {
            "platforms": [
                "n64"
            ],
            "id": "lr-parallel-n64",
            "desc": "N64 emu - Highly modified Mupen64Plus port for libretro",
            "help": "ROM Extensions: .z64 .n64 .v64\\n\\nCopy your N64 roms to $romdir/n64",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/parallel-n64/master/mupen64plus-core/LICENSES",
            "repo": "git https://github.com/RetroPie/parallel-n64.git retropie",
            "section": "exp x86=main"
        },
        "lr-pcsx-rearmed": {
            "platforms": [
                "psx"
            ],
            "id": "lr-pcsx-rearmed",
            "desc": "Playstation emulator - PCSX (arm optimised) port for libretro",
            "help": "ROM Extensions: .bin .cue .cbn .img .iso .m3u .mdf .pbp .toc .z .znx\\n\\nCopy your PSX roms to $romdir/psx\\n\\nCopy the required BIOS file SCPH1001.BIN to $biosdir",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/pcsx_rearmed/master/COPYING",
            "repo": "git https://github.com/libretro/pcsx_rearmed.git master",
            "section": "opt arm=main"
        },
        "lr-picodrive": {
            "platforms": [
                "megadrive",
                "mastersystem",
                "segacd",
                "sega32x"
            ],
            "id": "lr-picodrive",
            "desc": "Sega 8/16 bit emu - picodrive arm optimised libretro core",
            "help": "ROM Extensions: .32x .iso .cue .sms .smd .bin .gen .md .sg .zip\\n\\nCopy your Megadrive / Genesis roms to $romdir/megadrive\\nMasterSystem roms to $romdir/mastersystem\\nSega 32X roms to $romdir/sega32x and\\nSegaCD roms to $romdir/segacd\\nThe Sega CD requires the BIOS files us_scd1_9210.bin, eu_mcd1_9210.bin, jp_mcd1_9112.bin copied to $biosdir",
            "licence": "NONCOM https://raw.githubusercontent.com/libretro/picodrive/master/COPYING",
            "repo": "git https://github.com/libretro/picodrive.git master",
            "section": "main"
        },
        "lr-pokemini": {
            "platforms": [
                "pokemini"
            ],
            "id": "lr-pokemini",
            "desc": "Pokemon Mini emulator - PokeMini port for libretro",
            "help": "ROM Extensions: .min .zip\\n\\nCopy your Pokemon Mini roms to $romdir/pokemini",
            "licence": "GPL3 https://raw.githubusercontent.com/libretro/PokeMini/master/LICENSE",
            "repo": "git https://github.com/libretro/pokemini.git master",
            "section": "exp"
        },
        "lr-ppsspp": {
            "platforms": [
                "psp"
            ],
            "id": "lr-ppsspp",
            "desc": "PlayStation Portable emu - PPSSPP port for libretro",
            "help": "ROM Extensions: .iso .pbp .cso\\n\\nCopy your PlayStation Portable roms to $romdir/psp",
            "licence": "GPL2 https://raw.githubusercontent.com/RetroPie/ppsspp/master/LICENSE.TXT",
            "repo": "git https://github.com/hrydgard/ppsspp.git v1.12.3",
            "section": "opt",
            "flags": ""
        },
        "lr-prboom": {
            "platforms": [],
            "id": "lr-prboom",
            "desc": "Doom/Doom II engine - PrBoom port for libretro",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/libretro-prboom/master/COPYING",
            "repo": "git https://github.com/libretro/libretro-prboom.git master",
            "section": "opt"
        },
        "lr-prosystem": {
            "platforms": [
                "atari7800"
            ],
            "id": "lr-prosystem",
            "desc": "Atari 7800 ProSystem emu - ProSystem port for libretro",
            "help": "ROM Extensions: .a78 .bin .zip\\n\\nCopy your Atari 7800 roms to $romdir/atari7800\\n\\nCopy the optional BIOS file 7800 BIOS (U).rom to $biosdir",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/prosystem-libretro/master/License.txt",
            "repo": "git https://github.com/libretro/prosystem-libretro.git master",
            "section": "main"
        },
        "lr-puae": {
            "platforms": [
                "amiga"
            ],
            "id": "lr-puae",
            "desc": "P-UAE Amiga emulator port for libretro",
            "help": "ROM Extensions: .adf .uae\\n\\nCopy your roms to $romdir/amiga and create configs as .uae",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/PUAE/master/COPYING",
            "repo": "git https://github.com/libretro/libretro-uae.git master",
            "section": "opt"
        },
        "lr-puae2021": {
            "platforms": [
                "amiga"
            ],
            "id": "lr-puae2021",
            "desc": "P-UAE Amiga emulator port for libretro from 2021 (v2.6.1)",
            "help": "ROM Extensions: .adf .uae\\n\\nCopy your roms to $romdir/amiga and create configs as .uae",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/PUAE/master/COPYING",
            "repo": "git https://github.com/libretro/libretro-uae.git 2.6.1",
            "section": "opt"
        },
        "lr-px68k": {
            "platforms": [
                "x68000"
            ],
            "id": "lr-px68k",
            "desc": "SHARP X68000 Emulator",
            "help": "You need to copy a X68000 bios file (iplrom30.dat, iplromco.dat, iplrom.dat, or iplromxv.dat), and the font file (cgrom.dat or cgrom.tmp) to $biosdir/keropi. Use F12 to access the in emulator menu.",
            "repo": "git https://github.com/libretro/px68k-libretro.git master",
            "section": "exp",
            "flags": ""
        },
        "lr-quasi88": {
            "platforms": [
                "pc88"
            ],
            "id": "lr-quasi88",
            "desc": "NEC PC-8801 emu - Quasi88 port for libretro",
            "help": "ROM Extensions: .d88 .88d .cmt .m3u .t88\\n\\nCopy your pc88 games to to $romdir/pc88\\n\\nCopy bios files n88.rom, n88_0.rom, n88_1.rom, n88_2.rom, n88_3.rom, n88n.rom, disk.rom, n88knj1.rom, n88knj2.rom, and n88jisho.rom to $biosdir/quasi88",
            "licence": "BSD https://raw.githubusercontent.com/libretro/quasi88-libretro/master/LICENSE",
            "repo": "git https://github.com/libretro/quasi88-libretro.git master",
            "section": "exp"
        },
        "lr-quicknes": {
            "platforms": [
                "nes"
            ],
            "id": "lr-quicknes",
            "desc": "NES emulator - QuickNES Port for libretro",
            "help": "ROM Extensions: .nes .zip\\n\\nCopy your NES roms to $romdir/nes",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/QuickNES_Core/master/LICENSE",
            "repo": "git https://github.com/libretro/QuickNES_Core.git master",
            "section": "opt armv6=main"
        },
        "lr-retro8": {
            "platforms": [
                "pico8"
            ],
            "id": "lr-retro8",
            "desc": "PICO-8 compatible engine - port of retro8 for libretro",
            "help": "ROM Extensions: .p8 .p8.png .zip\\n\\nCopy your roms to $romdir/pico8",
            "licence": "GPL3 https://raw.githubusercontent.com/libretro/retro8/master/LICENSE",
            "repo": "git https://github.com/libretro/retro8.git master",
            "section": "exp"
        },
        "lr-scummvm": {
            "platforms": [
                "scummvm"
            ],
            "id": "lr-scummvm",
            "desc": "ScummVM port for libretro",
            "help": "Copy your ScummVM games to $romdir/scummvm\\n\\nThe name of your game directories must be suffixed with '.svm' for direct launch in EmulationStation.",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/scummvm/master/COPYING",
            "repo": "git https://github.com/libretro/scummvm.git master",
            "section": "exp"
        },
        "lr-smsplus-gx": {
            "platforms": [
                "gamegear",
                "mastersystem"
            ],
            "id": "lr-smsplus-gx",
            "desc": "Sega Master System & Game Gear emu - SMSPlus (enhanced) port for libretro",
            "help": "ROM Extensions: .gg .sms .bin .zip\\nCopy your Game Gear roms to $romdir/gamegear\\nMasterSystem roms to $romdir/mastersystem",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/smsplus-gx/master/docs/license",
            "repo": "git https://github.com/libretro/smsplus-gx.git master",
            "section": "exp"
        },
        "lr-snes9x": {
            "platforms": [
                "snes"
            ],
            "id": "lr-snes9x",
            "desc": "Super Nintendo emu - Snes9x (current) port for libretro",
            "help": "ROM Extensions: .bin .smc .sfc .fig .swc .mgd .zip\\n\\nCopy your SNES roms to $romdir/snes",
            "licence": "NONCOM https://raw.githubusercontent.com/libretro/snes9x/master/LICENSE",
            "repo": "git https://github.com/libretro/snes9x.git master",
            "section": "opt armv8=main x86=main"
        },
        "lr-snes9x2002": {
            "platforms": [
                "snes"
            ],
            "id": "lr-snes9x2002",
            "desc": "Super Nintendo emu - ARM optimised Snes9x 1.39 port for libretro",
            "help": "Previously called lr-pocketsnes\\n\\nROM Extensions: .bin .smc .sfc .fig .swc .mgd .zip\\n\\nCopy your SNES roms to $romdir/snes",
            "licence": "NONCOM https://raw.githubusercontent.com/libretro/snes9x2002/master/src/copyright.h",
            "repo": "git https://github.com/libretro/snes9x2002.git master",
            "section": "opt armv6=main",
            "flags": "!all arm"
        },
        "lr-snes9x2005": {
            "platforms": [
                "snes"
            ],
            "id": "lr-snes9x2005",
            "desc": "Super Nintendo emu - Snes9x 1.43 based port for libretro",
            "help": "Previously called lr-catsfc\\n\\nROM Extensions: .bin .smc .sfc .fig .swc .mgd .zip\\n\\nCopy your SNES roms to $romdir/snes",
            "licence": "NONCOM https://raw.githubusercontent.com/libretro/snes9x2005/master/copyright",
            "repo": "git https://github.com/libretro/snes9x2005.git master",
            "section": "opt arm=main"
        },
        "lr-snes9x2010": {
            "platforms": [
                "snes"
            ],
            "id": "lr-snes9x2010",
            "desc": "Super Nintendo emu - Snes9x 1.52 based port for libretro",
            "help": "Previously called lr-snes9x-next\\n\\nROM Extensions: .bin .smc .sfc .fig .swc .mgd .zip\\n\\nCopy your SNES roms to $romdir/snes",
            "licence": "NONCOM https://raw.githubusercontent.com/libretro/snes9x2010/master/docs/snes9x-license.txt",
            "repo": "git https://github.com/libretro/snes9x2010.git master",
            "section": "opt arm=main"
        },
        "lr-stella": {
            "platforms": [
                "atari2600"
            ],
            "id": "lr-stella",
            "desc": "Atari 2600 emulator - Stella core for libretro",
            "help": "ROM Extensions: .a26 .bin .rom .zip .gz\\n\\nCopy your Atari 2600 roms to $romdir/atari2600",
            "licence": "GPL2 https://raw.githubusercontent.com/stella-emu/stella/master/License.txt",
            "repo": "git https://github.com/stella-emu/stella.git master",
            "section": "exp"
        },
        "lr-stella2014": {
            "platforms": [
                "atari2600"
            ],
            "id": "lr-stella2014",
            "desc": "Atari 2600 emulator - Stella port for libretro",
            "help": "ROM Extensions: .a26 .bin .rom .zip .gz\\n\\nCopy your Atari 2600 roms to $romdir/atari2600",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/stella2014-libretro/master/stella/license.txt",
            "repo": "git https://github.com/libretro/stella2014-libretro.git master",
            "section": "main"
        },
        "lr-superflappybirds": {
            "platforms": [],
            "id": "lr-superflappybirds",
            "desc": "Super Flappy Birds - Multiplayer Flappy Bird Clone",
            "help": "https://github.com/IgniparousTempest/libretro-superflappybirds/wiki",
            "licence": "GPL3 https://raw.githubusercontent.com/IgniparousTempest/libretro-superflappybirds/master/LICENSE",
            "repo": "git https://github.com/IgniparousTempest/libretro-superflappybirds.git master",
            "section": "exp"
        },
        "lr-tgbdual": {
            "platforms": [
                "gb",
                "gbc"
            ],
            "id": "lr-tgbdual",
            "desc": "Gameboy Color emu - TGB Dual port for libretro",
            "help": "ROM Extensions: .gb .gbc .zip\\n\\nCopy your GameBoy roms to $romdir/gb\\n\\nCopy your GameBoy Color roms to $romdir/gbc",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/tgbdual-libretro/master/docs/COPYING-2.0.txt",
            "repo": "git https://github.com/libretro/tgbdual-libretro.git master",
            "section": "opt"
        },
        "lr-theodore": {
            "platforms": [
                "moto"
            ],
            "id": "lr-theodore",
            "desc": "Thomson MO/TO system emulator",
            "help": "ROM Extensions: *.fd, *.sap, *.k7, *.m5, *.m7, *.rom\\n\\nAdd your game files in $romdir/moto",
            "licence": "GPL3 https://raw.githubusercontent.com/Zlika/theodore/master/LICENSE",
            "repo": "git https://github.com/Zlika/theodore master",
            "section": "exp",
            "flags": ""
        },
        "lr-tic80": {
            "platforms": [
                "tic80\" \"TIC-80"
            ],
            "id": "lr-tic80",
            "desc": "TIC-80 fantasy computer - port for libretro",
            "help": "ROM Extensions: .tic .zip\\n\\nCopy your roms to $romdir/tic80\\n\\n",
            "licence": "MIT https://raw.githubusercontent.com/libretro/TIC-80/master/LICENSE",
            "repo": "git https://github.com/libretro/TIC-80.git master",
            "section": "exp"
        },
        "lr-tyrquake": {
            "platforms": [],
            "id": "lr-tyrquake",
            "desc": "Quake 1 engine - Tyrquake port for libretro",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/tyrquake/master/LICENSE.txt",
            "repo": "git https://github.com/libretro/tyrquake.git master",
            "section": "opt"
        },
        "lr-uae4arm": {
            "platforms": [
                "amiga"
            ],
            "id": "lr-uae4arm",
            "desc": "Uae4arm port for libretro",
            "help": "ROM Extensions: .adf .uae .lha .ipf .iso\\n\\nCopy your Amigas games to $romdir/amiga.",
            "licence": "GPL2",
            "repo": "git https://github.com/Chips-fr/uae4arm-rpi.git master",
            "section": "exp",
            "flags": "!all arm aarch64"
        },
        "lr-vba-next": {
            "platforms": [
                "gba"
            ],
            "id": "lr-vba-next",
            "desc": "GBA emulator - VBA-M (optimised) port for libretro",
            "help": "ROM Extensions: .gba .zip\\n\\nCopy your Game Boy Advance roms to $romdir/gba\\n\\nCopy the required BIOS file gba_bios.bin to $biosdir",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/vba-next/master/LICENSE",
            "repo": "git https://github.com/libretro/vba-next.git master",
            "section": "main",
            "flags": "!armv6"
        },
        "lr-vecx": {
            "platforms": [
                "vectrex"
            ],
            "id": "lr-vecx",
            "desc": "Vectrex emulator - vecx port for libretro",
            "help": "ROM Extensions: .vec .gam .bin .zip\\n\\nCopy your Vectrex roms to $romdir/vectrex",
            "licence": "GPL3 https://raw.githubusercontent.com/libretro/libretro-vecx/master/LICENSE.md",
            "repo": "git https://github.com/libretro/libretro-vecx.git master",
            "section": "main"
        },
        "lr-vice": {
            "platforms": [
                "c64"
            ],
            "id": "lr-vice",
            "desc": "C64 / C128 / PET / Plus4 / VIC20 emulator - port of VICE for libretro",
            "help": "ROM Extensions: .cmd .crt .d64 .d71 .d80 .d81 .g64 .m3u .prg .t64 .tap .x64 .zip .vsf\\n\\nCopy your games to $romdir/c64",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/vice-libretro/master/vice/COPYING",
            "repo": "git https://github.com/libretro/vice-libretro.git master",
            "section": "opt",
            "flags": ""
        },
        "lr-virtualjaguar": {
            "platforms": [
                "atarijaguar"
            ],
            "id": "lr-virtualjaguar",
            "desc": "Atari Jaguar emu - Virtual Jaguar (optimised) port for libretro",
            "help": "ROM Extensions: .j64 .jag .zip\\n\\nCopy your Atari Jaguar roms to $romdir/atarijaguar",
            "licence": "GPL3 https://raw.githubusercontent.com/libretro/virtualjaguar-libretro/master/docs/GPLv3",
            "repo": "git https://github.com/libretro/virtualjaguar-libretro.git master",
            "section": "exp",
            "flags": "!armv6"
        },
        "lr-x1": {
            "platforms": [
                "x1"
            ],
            "id": "lr-x1",
            "desc": "Sharp X1 emulator - X Millenium port for libretro",
            "help": "ROM Extensions: .dx1 .zip .2d .2hd .tfd .d88 .88d .hdm .xdf .dup .cmd\\n\\nCopy your X1 roms to $romdir/x1\\n\\nCopy the required BIOS files IPLROM.X1 and IPLROM.X1T to $biosdir",
            "repo": "git https://github.com/r-type/xmil-libretro.git master",
            "section": "exp"
        },
        "lr-xrick": {
            "platforms": [],
            "id": "lr-xrick",
            "desc": "Open source implementation of Rick Dangerous - xrick ported for libretro",
            "help": "Install the xrick data.zip to $romdir/ports/xrick/data.zip",
            "licence": "GPL https://raw.githubusercontent.com/libretro/xrick-libretro/master/README",
            "repo": "git https://github.com/libretro/xrick-libretro.git master",
            "section": "opt"
        },
        "lr-yabause": {
            "platforms": [
                "saturn"
            ],
            "id": "lr-yabause",
            "desc": "Sega Saturn emu - Yabause (optimised) port for libretro",
            "help": "ROM Extensions: .iso .bin .zip\\n\\nCopy your Sega Saturn roms to $romdir/saturn\\n\\nCopy the required BIOS file saturn_bios.bin to $biosdir",
            "licence": "GPL2 https://raw.githubusercontent.com/libretro/yabause/master/yabause/COPYING",
            "repo": "git https://github.com/libretro/yabause.git master",
            "section": "exp",
            "flags": "!armv6"
        }
    },
    "platforms": {
        "3do": {
            "id": "3do",
            "exts": [
                ".chd",
                ".cue",
                ".iso",
                ".zip"
            ]
        },
        "ags": {
            "id": "ags",
            "exts": [
                ".exe"
            ]
        },
        "amiga": {
            "id": "amiga",
            "exts": [
                ".adf",
                ".adz",
                ".chd",
                ".cue",
                ".dms",
                ".ipf",
                ".lha",
                ".m3u",
                ".sh",
                ".uae",
                ".zip"
            ]
        },
        "amstradcpc": {
            "id": "amstradcpc",
            "exts": [
                ".cdt",
                ".cpc",
                ".dsk",
                ".zip"
            ]
        },
        "apple2": {
            "id": "apple2",
            "exts": [
                ".po",
                ".dsk",
                ".nib"
            ]
        },
        "arcade": {
            "id": "arcade",
            "exts": [
                ".7z",
                ".cue",
                ".fba",
                ".iso",
                ".zip"
            ]
        },
        "arcadia": {
            "id": "arcadia",
            "exts": [
                ".bin",
                ".zip"
            ]
        },
        "atari2600": {
            "id": "atari2600",
            "exts": [
                ".7z",
                ".a26",
                ".bin",
                ".rom",
                ".zip",
                ".gz"
            ]
        },
        "atari5200": {
            "id": "atari5200",
            "exts": [
                ".7z",
                ".a52",
                ".bin",
                ".car",
                ".zip"
            ]
        },
        "atari7800": {
            "id": "atari7800",
            "exts": [
                ".7z",
                ".a78",
                ".bin",
                ".zip"
            ]
        },
        "atari800": {
            "id": "atari800",
            "exts": [
                ".7z",
                ".atr",
                ".atr.gz",
                ".atx",
                ".bas",
                ".bin",
                ".car",
                ".cas",
                ".com",
                ".dcm",
                ".rom",
                ".xex",
                ".xfd",
                ".xfd.gz",
                ".zip"
            ]
        },
        "atarijaguar": {
            "id": "atarijaguar",
            "exts": [
                ".j64",
                ".jag",
                ".zip"
            ]
        },
        "atarilynx": {
            "id": "atarilynx",
            "exts": [
                ".7z",
                ".lnx",
                ".zip"
            ]
        },
        "atarist": {
            "id": "atarist",
            "exts": [
                ".st",
                ".stx",
                ".img",
                ".m3u",
                ".rom",
                ".raw",
                ".ipf",
                ".ctr",
                ".zip"
            ]
        },
        "c64": {
            "id": "c64",
            "exts": [
                ".cmd",
                ".crt",
                ".d64",
                ".d71",
                ".d80",
                ".d81",
                ".g64",
                ".prg",
                ".m3u",
                ".t64",
                ".tap",
                ".x64",
                ".zip",
                ".vsf"
            ]
        },
        "channelf": {
            "id": "channelf",
            "exts": [
                ".bin",
                ".rom",
                ".zip",
                ".7z"
            ]
        },
        "coco": {
            "id": "coco",
            "exts": [
                ".cas",
                ".wav",
                ".bas",
                ".asc",
                ".dmk",
                ".jvc",
                ".os9",
                ".dsk",
                ".vdk",
                ".rom",
                ".ccc",
                ".sna"
            ]
        },
        "coleco": {
            "id": "coleco",
            "exts": [
                ".bin",
                ".col",
                ".rom",
                ".zip"
            ]
        },
        "crvision": {
            "id": "crvision",
            "exts": [
                ".rom",
                ".zip"
            ]
        },
        "daphne": {
            "id": "daphne",
            "exts": [
                ".daphne"
            ]
        },
        "dragon32": {
            "id": "dragon32",
            "exts": [
                ".cas",
                ".wav",
                ".bas",
                ".asc",
                ".dmk",
                ".jvc",
                ".os9",
                ".dsk",
                ".vdk",
                ".rom",
                ".ccc",
                ".sna"
            ]
        },
        "dreamcast": {
            "id": "dreamcast",
            "exts": [
                ".cdi",
                ".chd",
                ".cue",
                ".gdi",
                ".sh",
                ".zip",
                ".m3u"
            ]
        },
        "fba": {
            "id": "fba",
            "exts": [
                ".7z",
                ".cue",
                ".fba",
                ".iso",
                ".zip"
            ]
        },
        "fds": {
            "id": "fds",
            "exts": [
                ".7z",
                ".nes",
                ".fds",
                ".zip"
            ]
        },
        "fm7": {
            "id": "fm7",
            "exts": [
                ".d77",
                ".t77",
                ".d88",
                ".2d"
            ]
        },
        "gameandwatch": {
            "id": "gameandwatch",
            "exts": [
                ".mgw"
            ]
        },
        "gamegear": {
            "id": "gamegear",
            "exts": [
                ".7z",
                ".gg",
                ".bin",
                ".sms",
                ".zip"
            ]
        },
        "gba": {
            "id": "gba",
            "exts": [
                ".7z",
                ".gba",
                ".zip"
            ]
        },
        "gb": {
            "id": "gb",
            "exts": [
                ".7z",
                ".gb",
                ".zip"
            ]
        },
        "gbc": {
            "id": "gbc",
            "exts": [
                ".7z",
                ".gbc",
                ".zip"
            ]
        },
        "gc": {
            "id": "gc",
            "exts": [
                ".ciso",
                ".gcm",
                ".gcz",
                ".iso",
                ".rvz"
            ]
        },
        "intellivision": {
            "id": "intellivision",
            "exts": [
                ".7z",
                ".bin",
                ".int",
                ".itv",
                ".rom",
                ".zip"
            ]
        },
        "love": {
            "id": "love",
            "exts": [
                ".love"
            ]
        },
        "macintosh": {
            "id": "macintosh",
            "exts": [
                ".txt",
                ".dsk"
            ]
        },
        "mame": {
            "id": "mame",
            "exts": [
                ".zip",
                ".7z"
            ]
        },
        "mame-advmame": {
            "id": "mame-advmame",
            "exts": [
                ".zip"
            ]
        },
        "mame-libretro": {
            "id": "mame-libretro",
            "exts": [
                ".zip"
            ]
        },
        "mame-mame4all": {
            "id": "mame-mame4all",
            "exts": [
                ".zip"
            ]
        },
        "mastersystem": {
            "id": "mastersystem",
            "exts": [
                ".7z",
                ".sms",
                ".bin",
                ".zip"
            ]
        },
        "megadrive": {
            "id": "megadrive",
            "exts": [
                ".7z",
                ".smd",
                ".bin",
                ".gen",
                ".md",
                ".sg",
                ".zip"
            ]
        },
        "msx": {
            "id": "msx",
            "exts": [
                ".cas",
                ".rom",
                ".mx1",
                ".mx2",
                ".col",
                ".dsk",
                ".zip",
                ".m3u"
            ]
        },
        "moto": {
            "id": "moto",
            "exts": [
                ".fd",
                ".k7",
                ".m5",
                ".m7",
                ".rom",
                ".sap"
            ]
        },
        "n64": {
            "id": "n64",
            "exts": [
                ".z64",
                ".n64",
                ".v64",
                ".zip"
            ]
        },
        "nds": {
            "id": "nds",
            "exts": [
                ".nds",
                ".zip"
            ]
        },
        "neogeo": {
            "id": "neogeo",
            "exts": [
                ".7z",
                ".chd",
                ".cue",
                ".fba",
                ".iso",
                ".zip"
            ]
        },
        "nes": {
            "id": "nes",
            "exts": [
                ".7z",
                ".nes",
                ".zip"
            ]
        },
        "ngp": {
            "id": "ngp",
            "exts": [
                ".7z",
                ".ngp",
                ".zip"
            ]
        },
        "ngpc": {
            "id": "ngpc",
            "exts": [
                ".7z",
                ".ngc",
                ".zip"
            ]
        },
        "np2pi": {
            "id": "np2pi",
            "exts": [
                ".d88",
                ".d98",
                ".88d",
                ".98d",
                ".fdi",
                ".xdf",
                ".hdm",
                ".dup",
                ".2hd",
                ".tfd",
                ".hdi",
                ".thd",
                ".nhd",
                ".hdd"
            ]
        },
        "oric": {
            "id": "oric",
            "exts": [
                ".dsk",
                ".tap"
            ]
        },
        "pc88": {
            "id": "pc88",
            "exts": [
                ".d88",
                ".cmt",
                ".m3u",
                ".t88"
            ]
        },
        "pc98": {
            "id": "pc98",
            "exts": [
                ".d88",
                ".d98",
                ".88d",
                ".98d",
                ".fdi",
                ".xdf",
                ".hdm",
                ".dup",
                ".2hd",
                ".tfd",
                ".hdi",
                ".thd",
                ".nhd",
                ".hdd"
            ]
        },
        "pc": {
            "id": "pc",
            "exts": [
                ".bat",
                ".com",
                ".conf",
                ".cue",
                ".dosz",
                ".exe",
                ".ins",
                ".ima",
                ".img",
                ".iso",
                ".m3u",
                ".m3u8",
                ".sh",
                ".vhd",
                ".zip"
            ]
        },
        "pcengine": {
            "id": "pcengine",
            "exts": [
                ".7z",
                ".pce",
                ".ccd",
                ".chd",
                ".cue",
                ".zip"
            ]
        },
        "pcfx": {
            "id": "pcfx",
            "exts": [
                ".pce",
                ".ccd",
                ".cue",
                ".iso",
                ".chd"
            ]
        },
        "pico8": {
            "id": "pico8",
            "exts": [
                ".p8",
                ".png",
                ".zip"
            ]
        },
        "pokemini": {
            "id": "pokemini",
            "exts": [
                ".min",
                ".zip"
            ]
        },
        "ports": {
            "id": "ports",
            "exts": [
                ".sh"
            ]
        },
        "ps2": {
            "id": "ps2",
            "exts": [
                ".iso",
                ".img",
                ".bin",
                ".mdf",
                ".z",
                ".z2",
                ".bz2",
                ".dump",
                ".cso",
                ".chd",
                ".ima",
                ".gz"
            ]
        },
        "psp": {
            "id": "psp",
            "exts": [
                ".iso",
                ".pbp",
                ".cso"
            ]
        },
        "psx": {
            "id": "psx",
            "exts": [
                ".cue",
                ".cbn",
                ".chd",
                ".img",
                ".iso",
                ".m3u",
                ".mdf",
                ".pbp",
                ".toc",
                ".z",
                ".znx"
            ]
        },
        "samcoupe": {
            "id": "samcoupe",
            "exts": [
                ".dsk",
                ".mgt",
                ".sbt",
                ".sad"
            ]
        },
        "saturn": {
            "id": "saturn",
            "exts": [
                ".chd",
                ".cue",
                ".mdf",
                ".zip"
            ]
        },
        "scummvm": {
            "id": "scummvm",
            "exts": [
                ".sh",
                ".svm"
            ]
        },
        "sega32x": {
            "id": "sega32x",
            "exts": [
                ".7z",
                ".32x",
                ".smd",
                ".bin",
                ".md",
                ".zip"
            ]
        },
        "segacd": {
            "id": "segacd",
            "exts": [
                ".iso",
                ".cue",
                ".chd",
                ".m3u"
            ]
        },
        "sg-1000": {
            "id": "sg-1000",
            "exts": [
                ".7z",
                ".sg",
                ".bin",
                ".zip"
            ]
        },
        "snes": {
            "id": "snes",
            "exts": [
                ".7z",
                ".bin",
                ".bs",
                ".smc",
                ".sfc",
                ".fig",
                ".swc",
                ".mgd",
                ".zip"
            ]
        },
        "solarus": {
            "id": "solarus",
            "exts": [
                ".solarus",
                ".zip"
            ]
        },
        "ti99": {
            "id": "ti99",
            "exts": [
                ".ctg"
            ]
        },
        "tic80": {
            "id": "tic80",
            "exts": [
                ".tic",
                ".zip"
            ]
        },
        "trs-80": {
            "id": "trs-80",
            "exts": [
                ".dsk"
            ]
        },
        "vectrex": {
            "id": "vectrex",
            "exts": [
                ".7z",
                ".vec",
                ".gam",
                ".bin",
                ".zip"
            ]
        },
        "videopac": {
            "id": "videopac",
            "exts": [
                ".7z",
                ".bin",
                ".zip"
            ]
        },
        "virtualboy": {
            "id": "virtualboy",
            "exts": [
                ".7z",
                ".vb",
                ".zip"
            ]
        },
        "wii": {
            "id": "wii",
            "exts": [
                ".ciso",
                ".gcm",
                ".gcz",
                ".iso",
                ".rvz",
                ".wad",
                ".wbfs"
            ]
        },
        "wonderswan": {
            "id": "wonderswan",
            "exts": [
                ".7z",
                ".ws",
                ".zip"
            ]
        },
        "wonderswancolor": {
            "id": "wonderswancolor",
            "exts": [
                ".7z",
                ".wsc",
                ".zip"
            ]
        },
        "x1": {
            "id": "x1",
            "exts": [
                ".dx1",
                ".zip",
                ".2d",
                ".2hd",
                ".tfd",
                ".d88",
                ".88d",
                ".hdm",
                ".xdf",
                ".dup",
                ".cmd"
            ]
        },
        "x68000": {
            "id": "x68000",
            "exts": [
                ".dim",
                ".hdf",
                ".hdm",
                ".2hd",
                ".d88",
                ".m3u"
            ]
        },
        "zmachine": {
            "id": "zmachine",
            "exts": [
                ".dat",
                ".zip",
                ".z1",
                ".z2",
                ".z3",
                ".z4",
                ".z5",
                ".z6",
                ".z7",
                ".z8"
            ]
        },
        "zx81": {
            "id": "zx81",
            "exts": [
                ".7z",
                ".p",
                ".tzx",
                ".t81",
                ".zip"
            ]
        },
        "zxspectrum": {
            "id": "zxspectrum",
            "exts": [
                ".7z",
                ".sh",
                ".sna",
                ".szx",
                ".z80",
                ".tap",
                ".tzx",
                ".gz",
                ".udi",
                ".mgt",
                ".img",
                ".trd",
                ".scl",
                ".dsk",
                ".zip",
                ".rzx"
            ]
        }
    }
}