{
    "emulators": {
        "64tass": {
            "version": "1.56.2625",
            "description": "An assembler for the legendary 6502 processor and it's derivatives ",
            "homepage": "https://sourceforge.net/projects/tass64/",
            "license": {
                "identifier": "GPLv2"
            },
            "url": "https://sourceforge.net/projects/tass64/files/binaries/64tass-1.56.2625.zip/download#/64tass.zip",
            "hash": "cc2029f0f3f11901863729ec62f6506ceba68fae3f43aba9db5926453e07d264",
            "extract_dir": "64tass-1.56.2625",
            "bin": "64tass.exe",
            "checkver": {
                "url": "https://sourceforge.net/projects/tass64/rss?path=/binaries",
                "re": "64tass-(.*)\\.zip"
            },
            "autoupdate": {
                "url": "https://sourceforge.net/projects/tass64/files/binaries/64tass-$version.zip/download#/64tass.zip",
                "extract_dir": "64tass-$version"
            }
        },
        "a7800": {
            "version": "5.2",
            "description": "An Atari 7800 emulator",
            "homepage": "https://github.com/7800-devtools/a7800",
            "license": "GPL-2.0-or-later,CC0-1.0",
            "url": "https://github.com/7800-devtools/a7800/releases/download/v5.2/a7800-win-v5.2.zip",
            "hash": "f92fa66e6e95948d1dcc377ea9140470c3d9bed2da8b3e3d3645477f7b1698d3",
            "persist": "a7800.ini",
            "bin": "a7800.exe",
            "shortcuts": [
                [
                    "a7800.exe",
                    "Atari 7800"
                ]
            ],
            "checkver": "github",
            "autoupdate": {
                "url": "https://github.com/7800-devtools/a7800/releases/download/v$version/a7800-win-v$version.zip"
            }
        },
        "acme": {
            "version": "0.97",
            "description": "multi-platform cross assembler for 6502/6510/65816 cpu",
            "homepage": "https://sourceforge.net/projects/acme-crossass/",
            "license": {
                "identifier": "GPLv2"
            },
            "url": "https://sourceforge.net/projects/acme-crossass/files/win32/acme0.97win.zip/download#/acme.zip",
            "hash": "68f7c80c23806eced6ab96622d8e22b500ed76b4d34a01af33461dee04edc359",
            "extract_dir": "acme0.97win\\acme",
            "bin": "acme.exe",
            "env_set": {
                "ACME": "$dir\\ACME_LIB"
            },
            "checkver": {
                "url": "https://sourceforge.net/projects/acme-crossass/rss?path=/win32",
                "re": "acme(.*)win\\.zip"
            },
            "autoupdate": {
                "url": "https://sourceforge.net/projects/acme-crossass/files/win32/acme$versionwin.zip/download#/acme.zip",
                "extract_dir": "acme$versionwin\\acme"
            }
        },
        "altirra": {
            "version": "4.01",
            "description": "Altirra is the 8-bit Atari emulator focusing on high-quality emulation, sometimes over speed and polish",
            "homepage": "http://www.virtualdub.org/altirra.html",
            "license": "GPL-2.0-only",
            "architecture": {
                "64bit": {
                    "url": "http://www.virtualdub.org/downloads/Altirra-4.01.zip",
                    "hash": "ac43fef674882d99b6461868f90671bb726c3cc9dd8059f38f19813f4ffba6cf",
                    "bin": "Altirra64.exe",
                    "shortcuts": [
                        [
                            "Altirra64.exe",
                            "Altirra"
                        ]
                    ]
                },
                "32bit": {
                    "url": "http://www.virtualdub.org/downloads/Altirra-4.01.zip",
                    "hash": "ac43fef674882d99b6461868f90671bb726c3cc9dd8059f38f19813f4ffba6cf",
                    "bin": "Altirra.exe",
                    "shortcuts": [
                        [
                            "Altirra.exe",
                            "Altirra"
                        ]
                    ]
                }
            },
            "checkver": {
                "url": "http://www.virtualdub.org/altirra.html",
                "regex": "Version ([\\d.]+): \\["
            },
            "autoupdate": {
                "url": "http://www.virtualdub.org/downloads/Altirra-$version.zip"
            }
        },
        "applewin": {
            "version": "1.30.11.0",
            "description": "Apple II emulator for Windows",
            "homepage": "https://github.com/AppleWin/AppleWin",
            "license": "GPL-2.0-only",
            "url": "https://github.com/AppleWin/AppleWin/releases/download/v1.30.11.0/AppleWin1.30.11.0.zip",
            "hash": "1dfe4a50ceb059ccd8c027d87f0d058156aa7a3379d63755c7dacc549966fd91",
            "shortcuts": [
                [
                    "Applewin.exe",
                    "AppleWin"
                ]
            ],
            "checkver": "github",
            "autoupdate": {
                "url": "https://github.com/AppleWin/AppleWin/releases/download/v$version/AppleWin$version.zip"
            }
        },
        "aranym": {
            "version": "1.1.0",
            "description": "ARAnyM is a VM designed and developed for running 32-bit Atari ST/TT/Falcon operating systems (TOS, FreeMiNT, MagiC and Linux-m68k) and TOS/GEM applications on any kind of hardware",
            "homepage": "https://aranym.github.io/",
            "license": "GPL-2.0-only",
            "url": "https://github.com/aranym/aranym/releases/download/ARANYM_1_1_0/aranym-1.1.0-cygwin-i386-sdl2-setup.exe#/dl.7z",
            "hash": "ac02c8aaa7b4404b8fde6d692fb314781c19f2a2a446f7cecd1c3e5e42d187aa",
            "pre_install": "Remove-Item \"$dir\\`$PLUGINSDIR\", \"$dir\\uninstall-aranym.exe\" -Force -Recurse",
            "bin": [
                "aranym.exe",
                "aranym-jit.exe",
                "aranym-mmu.exe"
            ],
            "shortcuts": [
                [
                    "aranym.exe",
                    "Aranym"
                ],
                [
                    "aranym-jit.exe",
                    "Aranym (JIT)"
                ],
                [
                    "aranym-mmu.exe",
                    "Aranym (MMU)"
                ]
            ],
            "checkver": {
                "url": "https://github.com/aranym/aranym/releases",
                "regex": "version ([\\d.]+) released"
            },
            "autoupdate": {
                "url": "https://github.com/aranym/aranym/releases/download/ARANYM_$underscoreVersion/aranym-$version-cygwin-i386-sdl2-setup.exe#/dl.7z"
            }
        },
        "arcade64": {
            "version": "0.247",
            "description": "MAME with working arcade games only ",
            "homepage": "https://github.com/Robbbert/store1",
            "license": "GPL-2.0",
            "url": "https://arcade.mameworld.info/arcade247.7z",
            "hash": "35aaabf2a1eb9542a399d5a0a45635b08855fa1d1f3382bff99ecf4f67a06055",
            "bin": "arcade64.exe",
            "shortcuts": [
                [
                    "arcade64.exe",
                    "Arcade64"
                ]
            ],
            "checkver": {
                "url": "https://arcade.mameworld.info/",
                "re": ">&nbsp;&nbsp;ARCADE64 ([0-9\\.]*)\\.0 \\(64-bit, GUI\\)"
            },
            "autoupdate": {
                "url": "https://arcade.mameworld.info/arcade$minorVersion.7z"
            }
        },
        "ares": {
            "version": "129",
            "description": "Multi-system emulator focused on accuracy and preservation",
            "homepage": "https://ares-emulator.github.io/",
            "license": "ISC",
            "architecture": {
                "64bit": {
                    "url": "https://github.com/ares-emulator/ares/releases/download/v129/ares-windows.zip",
                    "hash": "6e8fec912d33bfadc08f41bab3a653c7c698e1e874fe0d935b247f995f7d565f",
                    "extract_dir": "ares-v129"
                }
            },
            "pre_install": "if (!(Test-Path \"$persist_dir\\settings.bml\")) { New-Item -ItemType File \"$dir\\settings.bml\" | Out-Null }",
            "bin": "ares.exe",
            "shortcuts": [
                [
                    "ares.exe",
                    "ares"
                ]
            ],
            "persist": [
                "settings.bml",
                "Systems",
                "Saves",
                "Screenshots",
                "Debugging"
            ],
            "checkver": {
                "github": "https://github.com/ares-emulator/ares/"
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://github.com/ares-emulator/ares/releases/download/v$cleanVersion/ares-windows.zip",
                        "extract_dir": "ares-v$cleanVersion"
                    }
                }
            }
        },
        "asap": {
            "version": "5.2.0",
            "description": "ASAP is a player of Atari 8-bit chiptunes for modern computers and mobile devices",
            "homepage": "http://asap.sourceforge.net",
            "license": "GPL-2.0",
            "url": "https://downloads.sourceforge.net/project/asap/asap/5.2.0/asap-5.2.0-win32.msi",
            "hash": "sha1:74ea9a54f228902637b9defff6242cd2610489dc",
            "bin": [
                "ASAP\\asapconv.exe",
                "ASAP\\wasap.exe"
            ],
            "shortcuts": [
                [
                    "ASAP\\wasap.exe",
                    "WASAP"
                ]
            ],
            "checkver": {
                "url": "https://sourceforge.net/projects/asap/rss",
                "regex": "asap-([\\d.]+)-"
            },
            "autoupdate": {
                "url": "https://downloads.sourceforge.net/project/asap/asap/$version/asap-$version-win32.msi"
            }
        },
        "atari800": {
            "version": "4.2.0",
            "description": "Portable and free Atari 8-bit emulator",
            "homepage": "https://atari800.github.io",
            "license": "GPL-2.0-only",
            "url": "https://github.com/atari800/atari800/releases/download/ATARI800_4_2_0/atari800-4.2.0-win32-sdl.zip",
            "hash": "1da32ab1e5812c8018168018b4dab652d38a989dc3cc78d7c54b6f80d585a08a",
            "extract_dir": "atari800-4.2.0-win32-sdl",
            "bin": "atari800.exe",
            "shortcuts": [
                [
                    "atari800.exe",
                    "Atari 800"
                ]
            ],
            "checkver": {
                "url": "https://atari800.github.io/news.html",
                "regex": "Atari800 v([\\d.]+) released"
            },
            "autoupdate": {
                "url": "https://github.com/atari800/atari800/releases/download/ATARI800_$underscoreVersion/atari800-$version-win32-sdl.zip",
                "extract_dir": "atari800-$version-win32-sdl"
            }
        },
        "atariplusplus": {
            "version": "1.81",
            "description": " Atari++ is an emulator of the Atari eight bit computers, namely the Atari 400 and 800, the Atari 400XL, 800XL and 130XE, and the Atari 5200 game console",
            "homepage": "http://www.xl-project.com/",
            "license": "GPL-2.0-only",
            "url": "http://www.xl-project.com/download/atari%2b%2b_win_1.81.zip",
            "hash": "9f149433c464c7e2d66176233e42e0f865ea0b126b8220a7ae60215b5ee8af39",
            "shortcuts": [
                [
                    "atari++.exe",
                    "Atari++"
                ]
            ],
            "checkver": {
                "url": "http://www.xl-project.com/downloads.html",
                "regex": "atari\\+\\+ ([\\d.]+) for win32"
            },
            "autoupdate": {
                "url": "http://www.xl-project.com/download/atari%2b%2b_win_$version.zip"
            }
        },
        "b-em": {
            "version": "2.2",
            "description": "B-em is a BBC Micro emulator",
            "homepage": "http://b-em.bbcmicro.com",
            "license": "GPL-2.0-only",
            "url": "http://b-em.bbcmicro.com/B-emv2.2Win.zip",
            "hash": "1e86ed3165fd8f778a7bd2a43e8fcd7e969428e8ff1d532544e8571761e0bf5a",
            "shortcuts": [
                [
                    "B-em.exe",
                    "B-em"
                ]
            ],
            "checkver": "B-emv([\\d.]+)Win.zip",
            "autoupdate": {
                "url": "http://b-em.bbcmicro.com/B-emv$versionWin.zip"
            }
        },
        "beebem": {
            "version": "4.18",
            "description": "BeebEm is a BBC Micro and Master 128 emulator",
            "homepage": "http://www.mkw.me.uk/beebem/",
            "license": "GPL-2.0-only",
            "url": "http://www.mkw.me.uk/beebem/BeebEm418.zip",
            "hash": "0ed6cf6b3f1e91deaa7d53721c50b9ffe167818744c166a82ca652d7635fe1dc",
            "extract_dir": "beebem",
            "shortcuts": [
                [
                    "BeebEm.exe",
                    "BeebEm"
                ]
            ],
            "checkver": "Download version ([\\d.]+)",
            "autoupdate": {
                "url": "http://www.mkw.me.uk/beebem/BeebEm$cleanVersion.zip"
            }
        },
        "betterjoy": {
            "version": "v7.1",
            "description": "A remapping program for Nintendo Switch controllers",
            "homepage": "https://github.com/Davidobot/BetterJoy",
            "license": {
                "identifier": "MIT",
                "url": "https://github.com/Davidobot/BetterJoy/blob/master/LICENSE"
            },
            "notes": [
                "BetterJoy needs vigembus installed to function.",
                "Run the ViGEm_Bus_Setup at $dir\\Drivers if you have never installed ViGEm before."
            ],
            "architecture": {
                "64bit": {
                    "url": "https://github.com/Davidobot/BetterJoy/releases/download/v7.1/BetterJoy_v7.1.zip",
                    "hash": "a9ffe5bb14b05e775f34f9eeff41fca89a350d49252eedae1e330e88952e7f36"
                }
            },
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\")) {",
                "   New-Item -Path \"$dir\" -Name \"settings\" -ItemType \"File\" | Out-Null",
                "}"
            ],
            "bin": "BetterJoyForCemu.exe",
            "shortcuts": [
                [
                    "BetterJoyForCemu.exe",
                    "BetterJoy"
                ]
            ],
            "persist": [
                "BetterJoyForCemu.exe.config",
                "settings"
            ],
            "checkver": {
                "github": "https://github.com/Davidobot/BetterJoy",
                "regex": "download/(?<build>v[\\d\\.]+[a-z]?)",
                "replace": "${1}"
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://github.com/Davidobot/BetterJoy/releases/download/$matchBuild/BetterJoy_$matchBuild.zip"
                    }
                }
            }
        },
        "bgb": {
            "version": "1.5.9",
            "description": "GameBoy emulator/debugger",
            "homepage": "http://bgb.bircd.org/",
            "license": "Freeware",
            "architecture": {
                "32bit": {
                    "url": "http://bgb.bircd.org/bgb.zip",
                    "hash": "79357345b5fccf91b632e4987c0b5aa0549a70b563085f8caad86ea8c7ceacf9",
                    "bin": "bgb.exe",
                    "shortcuts": [
                        [
                            "bgb.exe",
                            "BGB GameBoy Emulator"
                        ]
                    ]
                },
                "64bit": {
                    "url": "http://bgb.bircd.org/bgbw64.zip",
                    "hash": "8685fc9daf09ceb384330ce543d05471fcc1d427c65de0d68875a97a57532763",
                    "bin": "bgb64.exe",
                    "shortcuts": [
                        [
                            "bgb64.exe",
                            "BGB GameBoy Emulator"
                        ]
                    ]
                }
            },
            "persist": "bgb.ini",
            "checkver": {
                "url": "http://bgb.bircd.org/",
                "regex": "\\(current version: BGB ([\\d]+[\\.][\\d]+[\\.][\\d]+)\\)<\\/title>"
            },
            "autoupdate": {
                "architecture": {
                    "32bit": {
                        "url": "http://bgb.bircd.org/bgb.zip"
                    },
                    "64bit": {
                        "url": "http://bgb.bircd.org/bgbw64.zip"
                    }
                }
            }
        },
        "bizhawk": {
            "version": "2.8",
            "description": "BizHawk is a multi-platform emulator with full rerecording support and Lua scripting. BizHawk focuses on core accuracy and power user tools while still being an easy-to-use emulator for casual gaming",
            "homepage": "http://tasvideos.org/BizHawk.html",
            "license": {
                "identifier": "MIT"
            },
            "url": "https://github.com/TASEmulators/BizHawk/releases/download/2.8/BizHawk-2.8-win-x64.zip",
            "hash": "cbbbeb86684ad504ae818dfe5a151174e4a6f087afa5022e4775e05798a1e060",
            "bin": "EmuHawk.exe",
            "shortcuts": [
                [
                    "EmuHawk.exe",
                    "emuhawk"
                ]
            ],
            "checkver": {
                "github": "https://github.com/TASVideos/BizHawk"
            },
            "autoupdate": {
                "url": "https://github.com/TASEmulators/BizHawk/releases/download/$version/BizHawk-$version-win-x64.zip"
            }
        },
        "bsnes-hd-beta": {
            "version": "10.6",
            "description": "bsnes-hd is a fork of bsnes that adds video features like rendering Mode 7 in a higher resolution, widescreen, and true color",
            "homepage": "https://github.com/DerKoun/bsnes-hd",
            "license": {
                "identifier": "GPL-3.0-only",
                "url": "https://github.com/DerKoun/bsnes-hd/blob/master/LICENSE"
            },
            "url": "https://github.com/DerKoun/bsnes-hd/releases/download/beta_10_6/bsnes_hd_beta_10_6_windows.zip",
            "hash": "31c4d27e74ff8d87e9e7da7ca9c64960d5f69e6b6d6c805120145e955067e445",
            "bin": [
                [
                    "bsnes_hd.exe",
                    "bsnes-hd-beta"
                ]
            ],
            "shortcuts": [
                [
                    "bsnes_hd.exe",
                    "bsnes-hd (beta)"
                ]
            ],
            "persist": [
                "Firmware",
                "settings.bml"
            ],
            "checkver": {
                "github": "https://github.com/DerKoun/bsnes-hd",
                "regex": "tag/beta_(\\d+)_(\\d+)",
                "replace": "${1}.${2}"
            },
            "autoupdate": {
                "url": "https://github.com/DerKoun/bsnes-hd/releases/download/beta_$underscoreVersion/bsnes_hd_beta_$underscoreVersion_windows.zip"
            }
        },
        "bsnes-plus": {
            "version": "05.95",
            "description": "emulator for the Super Nintendo / Super Famicom forked from bsnes (based on bsnes-classic) intended to introduce some new features and improvements, mostly aimed at debugging.",
            "homepage": "http://bsnes.revenant1.net/",
            "license": {
                "identifier": "GPL-2.0",
                "url": "https://github.com/bsnes-emu/bsnes/blob/master/LICENSE.txt"
            },
            "url": "https://revenant1.net/bsnes/build/bsnes-plus-v05.95-master.zip",
            "hash": "2f7073ed8c46ff2460103e6da0d0d067d8f37afc2a0c3088339d6577e2874032",
            "bin": [
                [
                    "bsnes-accuracy.exe",
                    "bsnes-plus-accuracy"
                ],
                [
                    "bsnes-performance.exe",
                    "bsnes-plus-performance"
                ],
                [
                    "bsnes.exe",
                    "bsnes-plus"
                ]
            ],
            "shortcuts": [
                [
                    "bsnes-accuracy.exe",
                    "bsnes-plus-accuracy"
                ],
                [
                    "bsnes-performance.exe",
                    "bsnes-plus-performance"
                ],
                [
                    "bsnes.exe",
                    "bsnes-plus"
                ]
            ],
            "persist": [
                "Firmware",
                "settings.bml"
            ],
            "checkver": {
                "url": "https://revenant1.net/bsnes/build/",
                "regex": ".*bsnes-plus-v(?<version>[\\d\\w.]+)-master.zip"
            },
            "autoupdate": {
                "url": "https://revenant1.net/bsnes/build/bsnes-plus-v$version-master.zip"
            }
        },
        "bsnes": {
            "version": "115",
            "description": "Nintendo SNES (Super Nintendo Entertainment System) emulator",
            "homepage": "https://github.com/bsnes-emu/bsnes",
            "license": {
                "identifier": "GPL-2.0",
                "url": "https://github.com/bsnes-emu/bsnes/blob/master/LICENSE.txt"
            },
            "url": "https://github.com/bsnes-emu/bsnes/releases/download/v115/bsnes_v115-windows.zip",
            "hash": "be2b3d17523f011359d1a88e05a54a0e70c846ee98a6b520d1a60e7422b2f7ef",
            "extract_dir": "bsnes_v115-windows",
            "bin": "bsnes.exe",
            "shortcuts": [
                [
                    "bsnes.exe",
                    "bsnes"
                ]
            ],
            "persist": [
                "Firmware",
                "settings.bml"
            ],
            "checkver": {
                "github": "https://github.com/bsnes-emu/bsnes",
                "regex": ".*bsnes_v(?<version>[\\d\\w.]+)-windows.zip"
            },
            "autoupdate": {
                "url": "https://github.com/bsnes-emu/bsnes/releases/download/v$version/bsnes_v$version-windows.zip",
                "extract_dir": "bsnes_v$version-windows"
            }
        },
        "cc65": {
            "version": "2.18",
            "url": "https://dl.bintray.com/cdtdoug/tools/cc65-2.18.7z",
            "hash": "80777F1805CCD2359468A04F302FAC096F538D7D9955C7604B9F69D24DF3699C",
            "env_add_path": "bin",
            "env_set": {
                "CC65_HOME": "$dir"
            }
        },
        "cemu-dev": {
            "version": "2.0",
            "description": "Nintendo Wii U emulator",
            "homepage": "https://cemu.info/",
            "license": {
                "identifier": "Freeware",
                "url": "https://cemu.info"
            },
            "suggest": {
                "cemuhook": "cemuhook",
                "Microsoft Visual C++ Runtime 2022": "extras/vcredist2022"
            },
            "architecture": {
                "64bit": {
                    "url": "https://cemu.info/releases/cemu_2.0.zip",
                    "hash": "660a5461333c9eecad3065c4c3e891e6c362f6df05c5e18fc4c36e3d806b6ca4"
                }
            },
            "extract_dir": "cemu_2.0",
            "pre_install": "if (!(Test-Path \"$persist_dir\\keys.txt\")) { New-Item \"$dir\\keys.txt\" -Type File | Out-Null }",
            "installer": {
                "script": [
                    "'cemuhook.dll', 'keystone.dll' | ForEach-Object {",
                    "   if (Test-Path \"$(versiondir 'cemuhook' 'current' $global)\\$_\") {",
                    "       Copy-Item \"$(versiondir 'cemuhook' 'current' $global)\\$_\" \"$dir\"",
                    "   }",
                    "}",
                    "if (!(Test-Path \"$persist_dir\\keys.txt\")) {",
                    "    New-Item \"$dir\\keys.txt\" -Type File | Out-Null",
                    "}"
                ]
            },
            "post_install": [
                "'settings.xml' | ForEach-Object {",
                "   if (Test-Path \"$persist_dir\\$_.bak\") {",
                "       Copy-Item \"$persist_dir\\$_.bak\" \"$dir\\$_\"  -Force",
                "   } else {",
                "       New-Item -ItemType File \"$dir\\$_\" | Out-Null",
                "   }",
                "}"
            ],
            "bin": "Cemu.exe",
            "shortcuts": [
                [
                    "cemu.exe",
                    "Cemu"
                ]
            ],
            "persist": [
                "controllerProfiles",
                "gameProfiles",
                "graphicPacks",
                "mlc01",
                "sharedFonts",
                "shaderCache\\transferable",
                "keys.txt"
            ],
            "uninstaller": {
                "script": [
                    "'settings.xml' | ForEach-Object {",
                    "   Copy-Item \"$dir\\$_\" \"$persist_dir\\$_.bak\" -Force",
                    "}"
                ]
            },
            "checkver": {
                "regex": "Download latest experimental version \\(v((?<version>[\\d.]+)[\\w]*?),"
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://cemu.info/releases/cemu_$matchVersion.zip"
                    }
                },
                "extract_dir": "cemu_$matchVersion"
            }
        },
        "cemu": {
            "version": "1.26.2f",
            "description": "Experimental software to emulate Wii U applications on PC",
            "homepage": "https://cemu.info/",
            "license": {
                "identifier": "Freeware",
                "url": "https://cemu.info"
            },
            "suggest": {
                "cemuhook": "cemuhook",
                "Microsoft Visual C++ Runtime 2022": "extras/vcredist2022"
            },
            "architecture": {
                "64bit": {
                    "url": "https://cemu.info/releases/cemu_1.26.2.zip",
                    "hash": "b0e3abf5048f78e352b42c3e1660a2c6e85d6905cd9f60d06ca2f2318fa3152c"
                }
            },
            "extract_dir": "cemu_1.26.2",
            "installer": {
                "script": [
                    "'cemuhook.dll', 'keystone.dll' | ForEach-Object {",
                    "   if (Test-Path \"$(versiondir 'cemuhook' 'current' $global)\\$_\") {",
                    "       Copy-Item \"$(versiondir 'cemuhook' 'current' $global)\\$_\" \"$dir\"",
                    "   }",
                    "}",
                    "if (!(Test-Path \"$persist_dir\\keys.txt\")) {",
                    "    New-Item \"$dir\\keys.txt\" -Type File | Out-Null",
                    "}"
                ]
            },
            "post_install": [
                "'settings.xml' | ForEach-Object {",
                "   if (Test-Path \"$persist_dir\\$_.bak\") {",
                "       Copy-Item \"$persist_dir\\$_.bak\" \"$dir\\$_\"  -Force",
                "   } else {",
                "       New-Item -ItemType File \"$dir\\$_\" | Out-Null",
                "   }",
                "}"
            ],
            "bin": "Cemu.exe",
            "shortcuts": [
                [
                    "cemu.exe",
                    "Cemu"
                ]
            ],
            "persist": [
                "controllerProfiles",
                "gameProfiles",
                "graphicPacks",
                "mlc01",
                "sharedFonts",
                "shaderCache\\transferable",
                "keys.txt"
            ],
            "uninstaller": {
                "script": [
                    "'settings.xml' | ForEach-Object {",
                    "   Copy-Item \"$dir\\$_\" \"$persist_dir\\$_.bak\" -Force",
                    "}"
                ]
            },
            "checkver": {
                "regex": "Download latest stable version \\(v((?<version>[\\d.]+)[\\w]*?),"
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://cemu.info/releases/cemu_$matchVersion.zip"
                    }
                },
                "extract_dir": "cemu_$matchVersion"
            }
        },
        "cemuhook": {
            "version": "0.5.7.7",
            "description": "Plugin for the Cemu emulator enabling H.264 decoding, gamepad input source overrides and game code/data patching at load-time",
            "homepage": "https://cemuhook.sshnuke.net/",
            "license": {
                "identifier": "Freeware",
                "url": "https://cemuhook.sshnuke.net"
            },
            "depends": "cemu",
            "architecture": {
                "64bit": {
                    "url": "https://files.sshnuke.net/cemuhook_1262d_0577.zip",
                    "hash": "62c47873eaa2f1f07f80e207ebbbf122648623ed2639ca137c6c1be1ac3172b7"
                }
            },
            "installer": {
                "script": [
                    "Copy-Item \"$dir\\cemuhook.dll\" \"$(versiondir 'cemu' 'current' $global)\" -Force",
                    "Copy-Item \"$dir\\keystone.dll\" \"$(versiondir 'cemu' 'current' $global)\" -Force"
                ]
            },
            "uninstaller": {
                "script": [
                    "'cemuhook.dll', 'keystone.dll' | ForEach-Object {",
                    "   if (Test-Path \"$(versiondir 'cemu' 'current' $global)\\$_\") {",
                    "       Remove-Item \"$(versiondir 'cemu' 'current' $global)\\$_\"",
                    "   }",
                    "}"
                ]
            },
            "checkver": {
                "regex": "cemuhook_(?<cemu>[\\d_a-z]+).zip\">Cemu hook ([\\d.]+) for"
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://files.sshnuke.net/cemuhook_$matchCemu.zip"
                    }
                }
            }
        },
        "citra-canary": {
            "version": "2271-20220920",
            "description": "Emulator for Nintendo 3DS, capable of playing many of your favorite games",
            "homepage": "https://citra-emu.org/",
            "license": {
                "identifier": "GPL-2.0",
                "url": "https://github.com/citra-emu/citra-canary/blob/master/license.txt"
            },
            "url": "https://github.com/citra-emu/citra-canary/releases/download/canary-2271/citra-windows-mingw-20220920-58a6502.7z",
            "hash": "f4c8a4230d35140aded44c5671ffe6e5eb8c019d8830829758c1a867ea8e1f85",
            "extract_dir": "canary-mingw",
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\\user\")) {",
                "   New-Item -Path \"$persist_dir\" -Name \"user\" -ItemType \"directory\" | Out-Null",
                "   if (Test-Path \"$env:APPDATA\\Citra\") {",
                "       Write-host \"Migrating AppData...\" -ForegroundColor yellow",
                "       Copy-Item -Path \"$env:APPDATA\\Citra\\*\" -Destination \"$persist_dir\\user\" -Recurse",
                "       Remove-Item -Path \"$env:APPDATA\\Citra\" -Recurse",
                "   }",
                "}"
            ],
            "bin": [
                [
                    "citra.exe",
                    "citra-canary"
                ],
                [
                    "citra-qt.exe",
                    "citra-qt-canary"
                ],
                [
                    "citra-room.exe",
                    "citra-room-canary"
                ]
            ],
            "shortcuts": [
                [
                    "citra-qt.exe",
                    "Citra (Canary)"
                ]
            ],
            "persist": "user",
            "checkver": {
                "github": "https://github.com/citra-emu/citra-canary",
                "regex": "download/canary-(?<build>[\\d]+)/citra-windows-(?<env>[\\w]+)-(?<date>[\\d]{8})-(?<commit>[\\da-f]{7})\\.(?<zip>7z|zip)",
                "replace": "${build}-${date}"
            },
            "autoupdate": {
                "url": "https://github.com/citra-emu/citra-canary/releases/download/canary-$matchBuild/citra-windows-$matchEnv-$matchDate-$matchCommit.$matchZip"
            }
        },
        "citra-nightly": {
            "version": "1785-20220910",
            "description": "Nintendo 3DS emulator",
            "homepage": "https://citra-emu.org/",
            "license": {
                "url": "https://github.com/citra-emu/citra-nightly/blob/master/license.txt",
                "identifier": "GPL-2.0"
            },
            "architecture": {
                "64bit": {
                    "url": "https://github.com/citra-emu/citra-nightly/releases/download/nightly-1785/citra-windows-mingw-20220910-baecc18.7z",
                    "hash": "514b33b62c40c7bb8f7ad5ddfd8974b3a78c9ff32e2f9abeb3628810e54fa15e"
                }
            },
            "extract_dir": "nightly-mingw",
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\\user\")) {",
                "   New-Item -Path \"$persist_dir\" -Name \"user\" -ItemType \"directory\" | Out-Null",
                "   if (Test-Path \"$env:APPDATA\\Citra\") {",
                "       Write-host \"Migrating AppData...\" -ForegroundColor yellow",
                "       Copy-Item -Path \"$env:APPDATA\\Citra\\*\" -Destination \"$persist_dir\\user\" -Recurse",
                "       Remove-Item -Path \"$env:APPDATA\\Citra\" -Recurse",
                "   }",
                "}"
            ],
            "bin": [
                "citra.exe",
                "citra-qt.exe",
                "citra-room.exe"
            ],
            "shortcuts": [
                [
                    "citra-qt.exe",
                    "Citra"
                ]
            ],
            "persist": "user",
            "checkver": {
                "github": "https://github.com/citra-emu/citra-nightly",
                "regex": "download/nightly-(?<build>[\\d]+)/citra-windows-(?<env>[\\w]+)-(?<date>[\\d]{8})-(?<commit>[\\da-f]{7})\\.(?<zip>7z|zip)",
                "replace": "${build}-${date}"
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://github.com/citra-emu/citra-nightly/releases/download/nightly-$matchBuild/citra-windows-$matchEnv-$matchDate-$matchCommit.$matchZip"
                    }
                },
                "extract_dir": "nightly-$matchEnv"
            }
        },
        "citra": {
            "version": "1785-20220910",
            "description": "Emulator for Nintendo 3DS, capable of playing many of your favorite games",
            "homepage": "https://citra-emu.org/",
            "license": {
                "identifier": "GPL-2.0",
                "url": "https://github.com/citra-emu/citra-nightly/blob/master/license.txt"
            },
            "url": "https://github.com/citra-emu/citra-nightly/releases/download/nightly-1785/citra-windows-mingw-20220910-baecc18.7z",
            "hash": "514b33b62c40c7bb8f7ad5ddfd8974b3a78c9ff32e2f9abeb3628810e54fa15e",
            "extract_dir": "nightly-mingw",
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\\user\")) {",
                "   New-Item -Path \"$persist_dir\" -Name \"user\" -ItemType \"directory\" | Out-Null",
                "   if (Test-Path \"$env:APPDATA\\Citra\") {",
                "       Write-host \"Migrating AppData...\" -ForegroundColor yellow",
                "       Copy-Item -Path \"$env:APPDATA\\Citra\\*\" -Destination \"$persist_dir\\user\" -Recurse",
                "       Remove-Item -Path \"$env:APPDATA\\Citra\" -Recurse",
                "   }",
                "}"
            ],
            "bin": [
                "citra.exe",
                "citra-qt.exe",
                "citra-room.exe"
            ],
            "shortcuts": [
                [
                    "citra-qt.exe",
                    "Citra"
                ]
            ],
            "persist": "user",
            "checkver": {
                "github": "https://github.com/citra-emu/citra-nightly",
                "regex": "download/nightly-(?<build>[\\d]+)/citra-windows-(?<env>[\\w]+)-(?<date>[\\d]+)-(?<commit>[\\da-f]{7})\\.(?<zip>7z|zip)",
                "replace": "${build}-${date}"
            },
            "autoupdate": {
                "url": "https://github.com/citra-emu/citra-nightly/releases/download/nightly-$matchBuild/citra-windows-$matchEnv-$matchDate-$matchCommit.$matchZip"
            }
        },
        "cxbx-reloaded": {
            "version": "4204640",
            "description": "Microsoft Xbox emulator",
            "homepage": "https://cxbx-reloaded.co.uk/",
            "license": {
                "identifier": "GPL-2.0",
                "url": "https://github.com/Cxbx-Reloaded/Cxbx-Reloaded/blob/master/COPYING"
            },
            "url": "https://github.com/Cxbx-Reloaded/Cxbx-Reloaded/releases/download/CI-4204640/CxbxReloaded-Release-VS2022.zip",
            "hash": "1a4cabd19f020d309b40e6b6a970ac2e55d82422fbf79be7a5b38c0d1e04a8f8",
            "pre_install": "if (!(Test-Path \"$persist_dir\\settings.ini\")) { $null = New-Item \"$dir\\settings.ini\" }",
            "bin": "cxbx.exe",
            "shortcuts": [
                [
                    "cxbx.exe",
                    "Cxbx-Reloaded"
                ]
            ],
            "persist": [
                "EmuDisk",
                "settings.ini"
            ],
            "checkver": {
                "url": "https://github.com/Cxbx-Reloaded/Cxbx-Reloaded/releases.atom",
                "regex": "CI-([a-f\\d]+)."
            },
            "autoupdate": {
                "url": "https://github.com/Cxbx-Reloaded/Cxbx-Reloaded/releases/download/CI-$version/CxbxReloaded-Release-VS2022.zip"
            }
        },
        "demul": {
            "version": "07_280418",
            "description": "Dreamcast, Naomi, Atomiswave, Hikaru, other SuperH or PowerVR 2-based systems emulator",
            "homepage": "http://demul.emulation64.com/",
            "license": "Freeware",
            "suggest": {
                "gdidrop": "gdidrop"
            },
            "url": "http://demul.emulation64.com/files/demul07_280418.7z",
            "hash": "ae3f11ed5d36c4f327b3428b8947181284a7f9ae302d811852d4d7a4e9af9148",
            "pre_install": [
                "'Demul.ini' | ForEach-Object {",
                "   if (!(Test-Path \"$dir\\$_\")) {",
                "       New-Item -ItemType File \"$dir\\$_\" | Out-Null",
                "   }",
                "}"
            ],
            "bin": "demul.exe",
            "shortcuts": [
                [
                    "demul.exe",
                    "DEmul"
                ]
            ],
            "persist": [
                "Demul.ini",
                "gdrCHD.ini",
                "gdrImage.ini",
                "gpuDX11.ini",
                "netDemul.ini",
                "padDemul.ini",
                "spuDemul.ini",
                "memsaves",
                "nvram",
                "roms",
                "snap",
                "sstates"
            ],
            "checkver": {
                "url": "http://demul.emulation64.com/downloads/",
                "regex": "demul([\\d\\._]+)\\.7z"
            },
            "autoupdate": {
                "url": "http://demul.emulation64.com/files/demul$version.7z"
            }
        },
        "demulshooter": {
            "version": "10.7.8",
            "description": "Hook into (mostly) emulators to allow playing rail shooter games with up to 4 lightguns or HID devices",
            "homepage": "https://github.com/argonlefou/DemulShooter",
            "license": "Unknown",
            "notes": [
                "",
                "The usage instructions for the app can be found here: https://github.com/argonlefou/DemulShooter/wiki/Usage",
                ""
            ],
            "url": "https://github.com/argonlefou/DemulShooter/releases/download/v10.7.8/DemulShooter_v10.7.8.zip",
            "hash": "7a4a01180a5a8e24a045b8cb103e7f071b7277bcd3f02bfe8592af94759930d5",
            "pre_install": "if (!(Test-Path \"$persist_dir\\config.ini\")) { New-Item -ItemType File \"$dir\\config.ini\" | Out-Null }",
            "shortcuts": [
                [
                    "DemulShooter_GUI.exe",
                    "DemulShooter"
                ]
            ],
            "persist": "config.ini",
            "checkver": "github",
            "autoupdate": {
                "url": "https://github.com/argonlefou/DemulShooter/releases/download/v$version/DemulShooter_v$version.zip"
            }
        },
        "desmume-stable": {
            "version": "0.9.13",
            "description": "Most used NDS emulator",
            "homepage": "https://desmume.org/",
            "license": {
                "identifier": "GPL-2.0"
            },
            "notes": "No wifi emulation, most likey will never be",
            "architecture": {
                "64bit": {
                    "url": "https://github.com/TASEmulators/desmume/releases/download/release_0_9_13/desmume-0.9.13-win64.zip",
                    "hash": "cbf710b8e6b29f0904e289a9b9a895548a2d7c7af5a3145c8279b97a69a09276",
                    "bin": [
                        [
                            "DeSmuME_0.9.13_x64.exe",
                            "desmume-stable"
                        ]
                    ],
                    "shortcuts": [
                        [
                            "DeSmuME_0.9.13_x64.exe",
                            "desmume-stable"
                        ]
                    ]
                }
            },
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\\desmume.ini\")) {",
                "    New-Item \"$dir\\desmume.ini\" -Type File | Out-Null",
                "}"
            ],
            "persist": [
                "AviFiles",
                "Battery",
                "Cheats",
                "Firmware",
                "Lua",
                "Roms",
                "Screenshots",
                "SramImportExport",
                "States",
                "StateSlots",
                "desmume.ini"
            ],
            "checkver": {
                "github": "https://github.com/TASEmulators/desmume",
                "regex": "release_([^_]*)_([^_]*)_([^_\"]*)",
                "replace": "${1}.${2}.${3}"
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://github.com/TASEmulators/desmume/releases/download/release_$underscoreVersion/desmume-$version-win64.zip",
                        "hash": "e858159f6bbeff6704bfba0959a29c22ffe8aaf2763ee5f983b487db23ba5247",
                        "bin": [
                            [
                                "DeSmuME_$version_x64.exe",
                                "desmume-stable"
                            ]
                        ],
                        "shortcuts": [
                            [
                                "DeSmuME_$version_x64.exe",
                                "desmume-stable"
                            ]
                        ]
                    }
                }
            }
        },
        "desmume": {
            "version": "739f316",
            "description": "Nintendo DS emulator",
            "homepage": "https://desmume.org",
            "license": {
                "identifier": "GPL-2.0",
                "url": "https://github.com/TASEmulators/desmume/blob/master/license.txt"
            },
            "url": "https://nightly.link/TASEmulators/desmume/workflows/build_win/master/desmume-win-x64.zip",
            "hash": "23fbabcee562aae5cacc21725f60065a110dd6759d00338f80888dd351623f36",
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\\desmume.ini\")) {",
                "    New-Item \"$dir\\desmume.ini\" -Type File | Out-Null",
                "}"
            ],
            "bin": [
                [
                    "DeSmuME-VS2019-x64-Release.exe",
                    "DeSmuME"
                ]
            ],
            "shortcuts": [
                [
                    "DeSmuME-VS2019-x64-Release.exe",
                    "DeSmuME"
                ]
            ],
            "persist": [
                "AviFiles",
                "Battery",
                "Cheats",
                "Firmware",
                "Lua",
                "Roms",
                "Screenshots",
                "SramImportExport",
                "States",
                "StateSlots",
                "desmume.ini"
            ],
            "checkver": {
                "url": "https://github.com/TASEmulators/desmume/actions/workflows/build_win.yml?query=branch%3Amaster+is%3Asuccess",
                "regex": "([a-f0-9]{7})<"
            },
            "autoupdate": {
                "url": "https://nightly.link/TASEmulators/desmume/workflows/build_win/master/desmume-win-x64.zip"
            }
        },
        "dolphin-beta": {
            "version": "5.0-17269",
            "description": "A Nintendo GameCube and Wii emulator",
            "homepage": "https://dolphin-emu.org/",
            "license": {
                "identifier": "GPL-2.0-or-later",
                "url": "https://github.com/dolphin-emu/dolphin/blob/master/COPYING"
            },
            "url": "https://dl.dolphin-emu.org/builds/25/5f/dolphin-master-5.0-17269-x64.7z",
            "hash": "d4e89ca74a538d11d1e07336a7a30d3cb792408ec1eef81aee10dcd212577b1e",
            "extract_dir": "Dolphin-x64",
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\")) {",
                "   New-item \"$persist_dir\" -ItemType Directory | Out-Null",
                "   New-item \"$persist_dir\\User\" -ItemType Directory | Out-Null",
                "   if (Test-Path \"$env:USERPROFILE\\Documents\\Dolphin Emulator\") {",
                "       Write-host \"Migrating AppData...\" -ForegroundColor yellow",
                "       Copy-Item -Path \"$env:USERPROFILE\\Documents\\Dolphin Emulator\\*\" -Destination \"$persist_dir\\User\" -Recurse",
                "       Remove-Item -Path \"$env:USERPROFILE\\Documents\\Dolphin Emulator\" -Recurse",
                "   }",
                "}"
            ],
            "post_install": "Set-Content -Value $null -Path \"$dir\\portable.txt\"",
            "bin": [
                [
                    "Dolphin.exe",
                    "dolphin-beta"
                ]
            ],
            "shortcuts": [
                [
                    "Dolphin.exe",
                    "Dolphin (beta)"
                ]
            ],
            "persist": "User",
            "checkver": {
                "url": "https://dolphin-emu.org/download/",
                "regex": "\\/(?<rand1>.{2})\\/(?<rand2>.{2})\\/dolphin-master-(?<major>[\\d\\.]+)-(?<build>[\\d]+)",
                "replace": "${major}-${build}"
            },
            "autoupdate": {
                "url": "https://dl.dolphin-emu.org/builds/$matchRand1/$matchRand2/dolphin-master-$matchMajor-$matchBuild-x64.7z"
            }
        },
        "dolphin-dev": {
            "version": "5.0-17403",
            "description": "A Nintendo GameCube and Wii emulator, with enhancements and Netplay. (development version)",
            "homepage": "https://dolphin-emu.org/",
            "license": {
                "identifier": "GPL-2.0-or-later",
                "url": "https://github.com/dolphin-emu/dolphin/blob/master/COPYING"
            },
            "suggest": {
                "Microsoft Visual C++ Runtime 2022": "extras/vcredist2022"
            },
            "url": "https://dl.dolphin-emu.org/builds/46/53/dolphin-master-5.0-17403-x64.7z",
            "hash": "bfd73621a24880e53c0d98c673fa476bd90489b239b389de87dc280d2ac1c87d",
            "extract_dir": "Dolphin-x64",
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\")) {",
                "   New-item \"$persist_dir\" -ItemType Directory | Out-Null",
                "   New-item \"$persist_dir\\User\" -ItemType Directory | Out-Null",
                "   if (Test-Path \"$env:USERPROFILE\\Documents\\Dolphin Emulator\") {",
                "       Write-host \"Migrating AppData...\" -ForegroundColor yellow",
                "       Copy-Item -Path \"$env:USERPROFILE\\Documents\\Dolphin Emulator\\*\" -Destination \"$persist_dir\\User\" -Recurse",
                "       Remove-Item -Path \"$env:USERPROFILE\\Documents\\Dolphin Emulator\" -Recurse",
                "   }",
                "}"
            ],
            "post_install": "Set-Content -Value $null -Path \"$dir\\portable.txt\"",
            "bin": [
                [
                    "Dolphin.exe",
                    "dolphin-dev"
                ]
            ],
            "shortcuts": [
                [
                    "Dolphin.exe",
                    "Dolphin (Development)"
                ]
            ],
            "persist": "User",
            "checkver": {
                "url": "https://dolphin-emu.org/download/list/master/1/",
                "regex": "\\/(?<rand1>.{2})\\/(?<rand2>.{2})\\/dolphin-master-(?<major>[\\d\\.]+)-(?<build>[\\d]+)",
                "replace": "${major}-${build}"
            },
            "autoupdate": {
                "url": "https://dl.dolphin-emu.org/builds/$matchRand1/$matchRand2/dolphin-master-$matchMajor-$matchBuild-x64.7z"
            }
        },
        "dolphin": {
            "version": "5.0",
            "description": "A Nintendo GameCube and Wii emulator, with enhancements and Netplay.",
            "homepage": "https://dolphin-emu.org/",
            "license": {
                "identifier": "GPL-2.0-or-later",
                "url": "https://github.com/dolphin-emu/dolphin/blob/master/COPYING"
            },
            "suggest": {
                "Microsoft Visual C++ Runtime 2019": "extras/vcredist2019"
            },
            "url": "https://dl-mirror.dolphin-emu.org/5.0/dolphin-x64-5.0.exe#/dolphin.lzma",
            "hash": "e1b3ae8fc890c6588e5656f77ef2747ae7ddfc90b6530b240c0c5b9d0ab3ce8c",
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\")) {",
                "   New-item \"$persist_dir\" -ItemType Directory | Out-Null",
                "   New-item \"$persist_dir\\User\" -ItemType Directory | Out-Null",
                "   if (Test-Path \"$env:USERPROFILE\\Documents\\Dolphin Emulator\") {",
                "       Write-host \"Migrating AppData...\" -ForegroundColor yellow",
                "       Copy-Item -Path \"$env:USERPROFILE\\Documents\\Dolphin Emulator\\*\" -Destination \"$persist_dir\\User\" -Recurse",
                "       Remove-Item -Path \"$env:USERPROFILE\\Documents\\Dolphin Emulator\" -Recurse",
                "   }",
                "}"
            ],
            "post_install": "Set-Content -Value $null -Path \"$dir\\portable.txt\"",
            "bin": "Dolphin.exe",
            "shortcuts": [
                [
                    "Dolphin.exe",
                    "Dolphin"
                ]
            ],
            "persist": "User",
            "checkver": {
                "url": "https://dolphin-emu.org/download/",
                "regex": "https://dl-mirror.dolphin-emu.org/([\\d.]+)/dolphin-x64"
            },
            "autoupdate": {
                "url": "https://dl-mirror.dolphin-emu.org/$version/dolphin-x64-$version.exe#/dl.7z"
            }
        },
        "dsp-emulator": {
            "version": "0.20",
            "description": "Dsp emulator ",
            "homepage": "https://github.com/leniad/dsp-emulator",
            "license": "GPL-2.0",
            "url": "https://github.com/leniad/dsp-emulator/raw/master/Release%200.20/dsp_020_win64.zip",
            "hash": "5e1df56311ccafb74ebf83412d9c9d45c33a9c6576222c4e5be7cdaee9604d03",
            "bin": "dsp.exe",
            "shortcuts": [
                [
                    "dsp.exe",
                    "DSP Emulator"
                ]
            ],
            "checkver": {
                "url": "https://raw.githubusercontent.com/leniad/dsp-emulator/master/wiki/DSPEmulator.wiki",
                "re": "<h1>DSP Emulator v([0-9\\.]*) by Leniad"
            },
            "autoupdate": {
                "url": "https://github.com/leniad/dsp-emulator/raw/master/Release%20$version/dsp_$cleanVersion_win64.zip"
            }
        },
        "duckstation": {
            "version": "20220708-g82965f7",
            "description": "Sony PlayStation emulator",
            "homepage": "https://github.com/stenzek/duckstation/",
            "license": {
                "identifier": "GPL-3.0-only",
                "url": "https://github.com/stenzek/duckstation/blob/master/LICENSE"
            },
            "notes": [
                "ATTENTION: Duckstation requires a PSX BIOS to function.",
                "Place the BIOS file in $persist_dir\\bios",
                "Learn more at: https://www.duckstation.org/wiki/BIOS"
            ],
            "url": "https://github.com/stenzek/duckstation/releases/download/latest/duckstation-windows-x64-release.zip",
            "hash": "486bab13e3bb6ac19bd9145558afda0486613898d41e559feb8c8963a76229b4",
            "installer": {
                "script": [
                    "if (!(Test-Path \"$persist_dir\")) {",
                    "   '[Main]', 'SettingsVersion = 3', '[AutoUpdater]', 'CheckAtStartup = false' | Set-Content \"$dir\\settings.ini\"",
                    "   New-item \"$dir\\portable.txt\" -ItemType File | Out-Null",
                    "}"
                ]
            },
            "bin": [
                [
                    "duckstation-nogui-x64-ReleaseLTCG.exe",
                    "duckstation"
                ],
                "duckstation-qt-x64-ReleaseLTCG.exe"
            ],
            "shortcuts": [
                [
                    "duckstation-qt-x64-ReleaseLTCG.exe",
                    "DuckStation"
                ]
            ],
            "persist": [
                "bios",
                "cache",
                "cheats",
                "covers",
                "database\\chtdb.txt",
                "database\\gamecontrollerdb.txt",
                "database\\gamesettings.ini",
                "dump",
                "inputprofiles",
                "memcards",
                "savestates",
                "screenshots",
                "shaders",
                "textures",
                "portable.txt",
                "settings.ini"
            ],
            "checkver": {
                "url": "https://github.com/stenzek/duckstation/releases/tag/latest",
                "regex": " datetime=\"(?<year>[0-9]{4})-(?<month>[0-9]{2})-(?<day>[0-9]{2})[\\s\\S]*?.*duckstation/commit/(?<commit>[0-9a-f]{7})",
                "replace": "${year}${month}${day}-g${commit}"
            },
            "autoupdate": {
                "url": "https://github.com/stenzek/duckstation/releases/download/latest/duckstation-windows-x64-release.zip"
            }
        },
        "eightyone": {
            "version": "1.29",
            "description": "Emulator for the range of ZX home computers made by Sinclair Research (and their clones) in the 1980s, primarily the ZX80 and ZX81 but also includes the ZX Spectrum models. As well as emulating the machines themselves, various add-on interfaces are supported, including storage devices, hi-res graphics, custom character sets, sound and colour cards.",
            "homepage": "https://sourceforge.net/projects/eightyone-sinclair-emulator/",
            "license": {
                "identifier": "GPLv2"
            },
            "url": "https://sourceforge.net/projects/eightyone-sinclair-emulator/files/EightyOne%20V1.29.zip/download#/eightyone.zip",
            "hash": "e5228aa4124136be10d61b1d9e69dbf4d8a0ab443e316737ae953968ccb13f9f",
            "bin": "EightyOne.exe",
            "checkver": {
                "url": "https://sourceforge.net/projects/eightyone-sinclair-emulator/rss?path=/",
                "re": "EightyOne V([\\d.]*)\\.zip"
            },
            "autoupdate": {
                "url": "https://sourceforge.net/projects/eightyone-sinclair-emulator/files/EightyOne%20V$version.zip/download#/eightyone.zip"
            }
        },
        "electrem": {
            "version": "0.6c",
            "description": "ElectrEm is an emulator of the Acorn Electron, an 8bit microcomputer first launched in 1983",
            "homepage": "http://electrem.emuunlim.com/",
            "license": "GPL-2.0-only",
            "url": "http://electrem.emuunlim.com/files/future/ElectrEmWin32v06c.zip",
            "hash": "95c5d5bc37eea97170a6b246c586f8f46c67b3fcb0716deed6e1b9c74524873a",
            "shortcuts": [
                [
                    "ElectrEm.exe",
                    "ElectrEm"
                ]
            ],
            "checkver": {
                "url": "http://electrem.emuunlim.com/Downloads.html",
                "regex": "ElectrEm v([\\d\\w.]+)"
            },
            "autoupdate": {
                "url": "http://electrem.emuunlim.com/files/future/ElectrEmWin32v$cleanVersion.zip"
            }
        },
        "epsxe": {
            "version": "2.0.5",
            "description": "Playstation emulator, that has been around for good bit",
            "homepage": "http://www.epsxe.com",
            "license": {
                "identifier": "Unknown"
            },
            "notes": "May require bioses, also may not work with every PSX game.",
            "url": "http://www.epsxe.com/files/ePSXe205.zip",
            "hash": "46e1a7ad3dc9c75763440c153465cdccc9a3ba367e3158542953ece4bcdb7b4f",
            "bin": "ePSXe.exe",
            "shortcuts": [
                [
                    "ePSXe.exe",
                    "epsxe",
                    "epsxe.exe"
                ]
            ],
            "checkver": {
                "url": "http://www.epsxe.com/download.php",
                "re": "ePSXe v(.*) Windows"
            },
            "autoupdate": {
                "url": "http://www.epsxe.com/files/ePSXe$cleanVersion.zip"
            }
        },
        "fbneo-nightly": {
            "version": "nightly",
            "description": "Emulator for arcade games and select consoles",
            "homepage": "https://github.com/finalburnneo/FBNeo",
            "license": "https://github.com/finalburnneo/FBNeo/blob/master/src/license.txt",
            "architecture": {
                "32bit": {
                    "url": "https://github.com/finalburnneo/FBNeo/releases/download/latest/Windows.x32.zip",
                    "bin": [
                        [
                            "fbneo.exe",
                            "fbneo-nightly"
                        ]
                    ],
                    "shortcuts": [
                        [
                            "fbneo.exe",
                            "FinalBurn Neo (nightly)"
                        ]
                    ]
                },
                "64bit": {
                    "url": "https://github.com/finalburnneo/FBNeo/releases/download/latest/Windows.x64.zip",
                    "bin": [
                        [
                            "fbneo64.exe",
                            "fbneo-nightly"
                        ]
                    ],
                    "shortcuts": [
                        [
                            "fbneo64.exe",
                            "FinalBurn Neo (nightly)"
                        ]
                    ]
                }
            },
            "persist": [
                "avi",
                "config",
                "neocdiso",
                "recordings",
                "roms",
                "savestates",
                "screenshots",
                "support"
            ]
        },
        "fbneo": {
            "version": "1.0.0.2",
            "description": "Emulator for arcade games and select consoles",
            "homepage": "https://github.com/finalburnneo/FBNeo",
            "license": "https://github.com/finalburnneo/FBNeo/blob/master/src/license.txt",
            "notes": [
                "",
                "Some users will get an error message when they start the emulator because the default renderer is using Direct3D 7.",
                "",
                "To change the renderer, go to Video > Select blitter.",
                ""
            ],
            "url": "https://github.com/finalburnneo/FBNeo/releases/download/v1.0.0.2/fbneo.zip",
            "hash": "9d09d210b007745c91143df61da46190d60a344b192ad79e3b6bc1f1140e0ec1",
            "extract_dir": "fbneo",
            "bin": "fbneo.exe",
            "shortcuts": [
                [
                    "fbneo.exe",
                    "FinalBurn Neo"
                ]
            ],
            "persist": [
                "avi",
                "config",
                "neocdiso",
                "recordings",
                "roms",
                "savestates",
                "screenshots",
                "support"
            ],
            "checkver": "github",
            "autoupdate": {
                "url": "https://github.com/finalburnneo/FBNeo/releases/download/v$version/fbneo.zip"
            }
        },
        "fceux-dev": {
            "version": "1360-bef4e80e",
            "description": "Nintendo NES and Famicom emulator",
            "homepage": "http://www.fceux.com",
            "license": {
                "url": "https://github.com/TASEmulators/fceux/blob/master/COPYING",
                "identifier": "GPL-2.0"
            },
            "architecture": {
                "32bit": {
                    "url": "https://github.com/detain/scoop-emulators-cache/raw/master/fceux-dev/fceux64.zip",
                    "hash": "d35657c0812b1399cfd0169baf0691375c2a2bafe4925bf9760d15598fccef44",
                    "bin": [
                        [
                            "fceux64.exe",
                            "fceux-dev"
                        ]
                    ],
                    "shortcuts": [
                        [
                            "fceux64.exe",
                            "FCEUX (dev)"
                        ]
                    ]
                },
                "64bit": {
                    "url": "https://github.com/detain/scoop-emulators-cache/raw/master/fceux-dev/fceux64.zip",
                    "hash": "d35657c0812b1399cfd0169baf0691375c2a2bafe4925bf9760d15598fccef44",
                    "bin": [
                        [
                            "fceux64.exe",
                            "fceux-dev"
                        ]
                    ],
                    "shortcuts": [
                        [
                            "fceux64.exe",
                            "FCEUX (dev)"
                        ]
                    ]
                }
            },
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\\fceux.cfg\")) {",
                "    New-Item \"$dir\\fceux.cfg\" -Type File | Out-Null",
                "}"
            ],
            "depends": "scoop-validator",
            "persist": [
                "cheats",
                "fcs",
                "movies",
                "sav",
                "snaps",
                "fceux.cfg"
            ],
            "checkver": {
                "url": "https://ci.appveyor.com/api/projects/zeromus/fceux",
                "script": [
                    "$job32 = json_path $page $.build.jobs[0].jobId",
                    "$job64 = json_path $page $.build.jobs[2].jobId",
                    "$build = json_path $page $.build.buildNumber",
                    "$commit = json_path $page $.build.commitId",
                    "Write-Output \"$job32 $job64 $build $commit\""
                ],
                "regex": "(?<job32>[\\w]{16}) (?<job64>[\\w]{16}) (?<build>[\\d]+) (?<commit>[a-f0-9]{8})",
                "replace": "${build}-${commit}"
            },
            "autoupdate": {
                "architecture": {
                    "32bit": {
                        "url": "https://ci.appveyor.com/api/buildjobs/$matchJob32/artifacts/fceux.zip"
                    },
                    "64bit": {
                        "url": "https://ci.appveyor.com/api/buildjobs/$matchJob64/artifacts/fceux64.zip"
                    }
                }
            }
        },
        "fceux-dev1": {
            "version": "1360-bef4e80e",
            "description": "Nintendo NES and Famicom emulator",
            "homepage": "http://www.fceux.com",
            "license": {
                "url": "https://github.com/detain/fceux/blob/master/COPYING",
                "identifier": "GPL-2.0"
            },
            "architecture": {
                "32bit": {
                    "url": "https://github.com/detain/scoop-emulators-cache/raw/master/fceux-dev/fceux64.zip",
                    "hash": "d35657c0812b1399cfd0169baf0691375c2a2bafe4925bf9760d15598fccef44",
                    "bin": [
                        [
                            "fceux64.exe",
                            "fceux-dev"
                        ]
                    ],
                    "shortcuts": [
                        [
                            "fceux64.exe",
                            "FCEUX (dev)"
                        ]
                    ]
                },
                "64bit": {
                    "url": "https://github.com/detain/scoop-emulators-cache/raw/master/fceux-dev/fceux64.zip",
                    "hash": "d35657c0812b1399cfd0169baf0691375c2a2bafe4925bf9760d15598fccef44",
                    "bin": [
                        [
                            "fceux64.exe",
                            "fceux-dev"
                        ]
                    ],
                    "shortcuts": [
                        [
                            "fceux64.exe",
                            "FCEUX (dev)"
                        ]
                    ]
                }
            },
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\\fceux.cfg\")) {",
                "    New-Item \"$dir\\fceux.cfg\" -Type File | Out-Null",
                "}"
            ],
            "depends": "scoop-validator",
            "persist": [
                "cheats",
                "fcs",
                "movies",
                "sav",
                "snaps",
                "fceux.cfg"
            ],
            "checkver": {
                "url": "https://ci.appveyor.com/api/projects/detain/fceux",
                "regex": "\"jobId\":\"(?<win32>.*?)\".*?arch=win32,.*?\"jobId\":\"(?<x64>.*?)\".*?arch=win32-x64,.*\"version\":\"(?<version>.*?)\".*\"commitId\":\"(?<commit>.{7}).*\""
            },
            "autoupdate": {
                "architecture": {
                    "32bit": {
                        "url": "https://ci.appveyor.com/api/buildjobs/$matchWin32/artifacts/fceux.zip"
                    },
                    "64bit": {
                        "url": "https://ci.appveyor.com/api/buildjobs/$matchX64/artifacts/fceux64.zip"
                    }
                }
            }
        },
        "fceux-dev2": {
            "version": "1360-bef4e80e",
            "description": "Nintendo NES and Famicom emulator",
            "homepage": "http://www.fceux.com",
            "license": {
                "url": "https://github.com/detain/fceux/blob/master/COPYING",
                "identifier": "GPL-2.0"
            },
            "architecture": {
                "32bit": {
                    "url": "https://github.com/detain/scoop-emulators-cache/raw/master/fceux-dev/fceux64.zip",
                    "hash": "d35657c0812b1399cfd0169baf0691375c2a2bafe4925bf9760d15598fccef44",
                    "bin": [
                        [
                            "fceux64.exe",
                            "fceux-dev"
                        ]
                    ],
                    "shortcuts": [
                        [
                            "fceux64.exe",
                            "FCEUX (dev)"
                        ]
                    ]
                },
                "64bit": {
                    "url": "https://github.com/detain/scoop-emulators-cache/raw/master/fceux-dev/fceux64.zip",
                    "hash": "d35657c0812b1399cfd0169baf0691375c2a2bafe4925bf9760d15598fccef44",
                    "bin": [
                        [
                            "fceux64.exe",
                            "fceux-dev"
                        ]
                    ],
                    "shortcuts": [
                        [
                            "fceux64.exe",
                            "FCEUX (dev)"
                        ]
                    ]
                }
            },
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\\fceux.cfg\")) {",
                "    New-Item \"$dir\\fceux.cfg\" -Type File | Out-Null",
                "}"
            ],
            "depends": "scoop-validator",
            "persist": [
                "cheats",
                "fcs",
                "movies",
                "sav",
                "snaps",
                "fceux.cfg"
            ],
            "checkver": {
                "url": "https://ci.appveyor.com/api/projects/detain/fceux",
                "script": [
                    "$job32 = json_path $page $.build.jobs[0].jobId",
                    "$job64 = json_path $page $.build.jobs[2].jobId",
                    "$build = json_path $page $.build.buildNumber",
                    "$commit = json_path $page $.build.commitId",
                    "Write-Output \"$job32 $job64 $build $commit\""
                ],
                "regex": "(?<job32>[\\w]{16}) (?<job64>[\\w]{16}) (?<build>[\\d]+) (?<commit>[a-f0-9]{8})",
                "replace": "${build}-${commit}"
            },
            "autoupdate": {
                "architecture": {
                    "32bit": {
                        "url": "https://ci.appveyor.com/api/buildjobs/$matchJob32/artifacts/fceux.zip"
                    },
                    "64bit": {
                        "url": "https://ci.appveyor.com/api/buildjobs/$matchJob64/artifacts/fceux64.zip"
                    }
                }
            }
        },
        "fceux": {
            "version": "2.6.4",
            "description": "Nintendo NES and Famicom emulator",
            "homepage": "http://www.fceux.com",
            "license": {
                "identifier": "GPL-2.0",
                "url": "https://github.com/TASEmulators/fceux/blob/master/COPYING"
            },
            "architecture": {
                "32bit": {
                    "url": "http://sourceforge.net/projects/fceultra/files/Binaries/2.6.4/fceux-2.6.4-win32.zip/download#/fceux.zip",
                    "hash": "780000c8c1ff47b609f0dc392beacd37680c1c3d285571459224f382def78e74",
                    "bin": [
                        [
                            "fceux.exe",
                            "fceux"
                        ]
                    ],
                    "shortcuts": [
                        [
                            "fceux.exe",
                            "FCEUX"
                        ]
                    ]
                },
                "64bit": {
                    "url": "http://sourceforge.net/projects/fceultra/files/Binaries/2.6.4/qfceux-2.6.4-win64.zip/download#/qfceux.zip",
                    "hash": "6d38511c57d7c24c22ebd1268c70de9073fc24a2de150a50673cc88bc245f891",
                    "extract_dir": "bin",
                    "bin": [
                        [
                            "qfceux.exe",
                            "fceux"
                        ]
                    ],
                    "shortcuts": [
                        [
                            "qfceux.exe",
                            "FCEUX"
                        ]
                    ]
                }
            },
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\\fceux.cfg\")) {",
                "    New-Item \"$dir\\fceux.cfg\" -Type File | Out-Null",
                "}"
            ],
            "persist": [
                "cheats",
                "fcs",
                "movies",
                "sav",
                "snaps",
                "fceux.cfg"
            ],
            "checkver": {
                "github": "https://github.com/TASEmulators/fceux",
                "regex": "fceux-([\\d.]+)"
            },
            "autoupdate": {
                "architecture": {
                    "32bit": {
                        "url": "http://sourceforge.net/projects/fceultra/files/Binaries/$version/fceux-$version-win32.zip/download#/fceux.zip"
                    },
                    "64bit": {
                        "url": "http://sourceforge.net/projects/fceultra/files/Binaries/$version/qfceux-$version-win64.zip/download#/qfceux.zip"
                    }
                }
            }
        },
        "flycast-dev": {
            "version": "1.3",
            "description": "Sega Dreamcast, Naomi and Atomiswave emulator",
            "homepage": "https://github.com/flyinghead/flycast",
            "license": {
                "identifier": "GPL-2.0",
                "url": "https://github.com/flyinghead/flycast/blob/master/LICENSE"
            },
            "architecture": {
                "64bit": {
                    "url": "https://github.com/flyinghead/flycast/releases/download/v1.3/flycast-win64-1.3.zip",
                    "hash": "90336ee379f0d3e9f449e03ab6939c0f4f8013f06a042552a4d4a0011925735a"
                }
            },
            "pre_install": "if (!(Test-Path \"$persist_dir\\emu.cfg\")) { New-Item -ItemType File \"$dir\\emu.cfg\" | Out-Null }",
            "bin": "flycast.exe",
            "shortcuts": [
                [
                    "flycast.exe",
                    "Flycast"
                ]
            ],
            "persist": [
                "emu.cfg",
                "data",
                "mappings"
            ],
            "checkver": {
                "url": "https://github.com/flyinghead/flycast/actions/workflows/c-cpp.yml?query=branch%3Amaster+is%3Asuccess",
                "regex": "([a-f0-9]{7})<"
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://github.com/flyinghead/flycast/releases/download/v$version/flycast-win64-$version.zip"
                    }
                }
            }
        },
        "flycast": {
            "version": "2.0",
            "description": "Sega Dreamcast, Naomi and Atomiswave emulator",
            "homepage": "https://github.com/flyinghead/flycast",
            "license": {
                "identifier": "GPL-2.0",
                "url": "https://github.com/flyinghead/flycast/blob/master/LICENSE"
            },
            "architecture": {
                "64bit": {
                    "url": "https://github.com/flyinghead/flycast/releases/download/v2.0/flycast-win64-2.0.zip",
                    "hash": "8b3f3f5aa7a4fa0ff06d88465206382fae101f6b0c6f8d1d509211aa09c6ddfc"
                }
            },
            "pre_install": "if (!(Test-Path \"$persist_dir\\emu.cfg\")) { New-Item -ItemType File \"$dir\\emu.cfg\" | Out-Null }",
            "bin": "flycast.exe",
            "shortcuts": [
                [
                    "flycast.exe",
                    "Flycast"
                ]
            ],
            "persist": [
                "emu.cfg",
                "data",
                "mappings"
            ],
            "checkver": "github",
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://github.com/flyinghead/flycast/releases/download/v$version/flycast-win64-$version.zip"
                    }
                }
            }
        },
        "gbeplus": {
            "version": "1.6",
            "description": "A gameboy trying to emulate ALL the peripherals for the gameboy",
            "homepage": "https://github.com/shonumi/gbe-plus",
            "license": {
                "identifier": "GPL-2.0"
            },
            "url": "https://github.com/shonumi/gbe-plus/releases/download/1.6/gbe_plus_1.6.7z",
            "hash": "dc5600e6661113fefed19642a34924d9238c0a981037044d7e8dbd29c2fbab3f",
            "extract_dir": "gbe-plus",
            "bin": "gbe_plus_qt.exe",
            "shortcuts": [
                [
                    "gbe_plus.exe",
                    "gbeplus",
                    "gbe+"
                ]
            ],
            "checkver": "github",
            "autoupdate": {
                "url": "https://github.com/shonumi/gbe-plus/releases/download/$version/gbe_plus_$version.7z"
            }
        },
        "gearboy": {
            "version": "3.4.0",
            "description": "Game Boy / Gameboy Color emulator for iOS, macOS, Raspberry Pi, Windows, Linux, BSD and RetroArch.",
            "homepage": "https://github.com/drhelius/Gearboy",
            "license": "GPL-3.0",
            "url": "https://github.com/drhelius/Gearboy/releases/download/gearboy-3.4.0/Gearboy-3.4.0-Windows.zip",
            "hash": "cf4c57414965b4d776dca7e279bddd536e7449ca5f6ae6f2458956db791ecb02",
            "extract_dir": "Gearboy-3.4.0-Windows",
            "bin": "Gearboy.exe",
            "shortcuts": [
                [
                    "Gearboy.exe",
                    "GearBoy"
                ]
            ],
            "checkver": {
                "github": "https://github.com/drhelius/Gearboy",
                "re": "\\/releases\\/tag\\/gearboy-([\\d.]+)"
            },
            "autoupdate": {
                "url": "https://github.com/drhelius/Gearboy/releases/download/gearboy-$version/Gearboy-$version-Windows.zip",
                "extract_dir": "Gearboy-$version-Windows"
            }
        },
        "gearsystem": {
            "version": "3.4.1",
            "description": "Sega Master System / Game Gear / SG-1000 emulator for iOS, macOS, Raspberry Pi, Windows, Linux, BSD and RetroArch. ",
            "homepage": "https://github.com/drhelius/Gearsystem",
            "license": "GPL-3.0",
            "url": "https://github.com/drhelius/Gearsystem/releases/download/gearsystem-3.4.1/Gearsystem-3.4.1-Windows.zip",
            "hash": "02536bce829baa11f5cb2989af1341d268fa83efc3f59bcbd28535f5769bcb8e",
            "extract_dir": "Gearsystem-3.4.1-Windows",
            "bin": "Gearsystem.exe",
            "shortcuts": [
                [
                    "Gearsystem.exe",
                    "GearSystem"
                ]
            ],
            "checkver": {
                "github": "https://github.com/drhelius/Gearsystem",
                "re": "\\/releases\\/tag\\/gearsystem-([\\d.]+)"
            },
            "autoupdate": {
                "url": "https://github.com/drhelius/Gearsystem/releases/download/gearsystem-$version/Gearsystem-$version-Windows.zip",
                "extract_dir": "Gearsystem-$version-Windows"
            }
        },
        "handy": {
            "version": "0.95",
            "description": "An Atari Lynx Emulator for Windows 95/98/NT/2000",
            "homepage": "http://handy.sourceforge.net",
            "license": "zlib-acknowledgement",
            "url": "https://downloads.sourceforge.net/project/handy/handy/Handy%200.95/Handy-0.95.zip",
            "hash": "e7354ed052802c93d1b310a3e253e72552f4b5a99a8cfc68b7b2e3465e447356",
            "bin": [
                "handy.exe",
                "make_lnx.exe",
                [
                    "rotate.exe",
                    "handy_rotate"
                ]
            ],
            "shortcuts": [
                [
                    "handy.exe",
                    "Handy Lynx Emulator"
                ]
            ],
            "checkver": {
                "url": "https://sourceforge.net/projects/handy/rss?path=/handy",
                "re": "Handy-([\\d.]+)\\.zip"
            },
            "autoupdate": {
                "url": "https://downloads.sourceforge.net/project/handy/handy/Handy%20$version/Handy-$version.zip"
            }
        },
        "hatari": {
            "version": "2.4.1",
            "description": "An Atari ST/STE/TT/Falcon emulator that aims to emulate the hardware of a ST as accurately as possible",
            "homepage": "https://hatari.tuxfamily.org",
            "license": "GPL-2.0-or-later",
            "architecture": {
                "64bit": {
                    "url": "https://download.tuxfamily.org/hatari/2.4.1/hatari-2.4.1_windows64.zip",
                    "hash": "422441ba8070bc769a6bd256fedc1a65b1332769eee7e9d0b02a8dd374d88fcb",
                    "extract_dir": "hatari-2.4.1_windows64",
                    "bin": "hatari.exe",
                    "shortcuts": [
                        [
                            "hatari.exe",
                            "Hatari"
                        ]
                    ]
                },
                "32bit": {
                    "url": "https://download.tuxfamily.org/hatari/2.4.1/hatari-2.4.1_windows.zip",
                    "hash": "eb06a822fdd77bea60f254a50c0158478dd036de4c25cbc7f0e08cff9280eebe",
                    "extract_dir": "hatari-2.4.1_windows",
                    "bin": "hatari.exe",
                    "shortcuts": [
                        [
                            "hatari.exe",
                            "Hatari"
                        ]
                    ]
                }
            },
            "checkver": {
                "url": "https://hatari.tuxfamily.org/news.html",
                "regex": ": Version ([\\d.]+)"
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://download.tuxfamily.org/hatari/$version/hatari-$version_windows64.zip",
                        "extract_dir": "hatari-$version_windows64"
                    },
                    "32bit": {
                        "url": "https://download.tuxfamily.org/hatari/$version/hatari-$version_windows.zip",
                        "extract_dir": "hatari-$version_windows"
                    }
                }
            }
        },
        "higan": {
            "version": "110",
            "description": "A multi-system emulator that is quite large.",
            "homepage": "https://higan.byuu.org/",
            "license": {
                "identifier": "Unknown"
            },
            "url": "https://github.com/higan-emu/higan/releases/download/v110/higan-v110-windows-x86_64.zip",
            "hash": "5d2b3c56ef2bf56755c917ec12c72b1f9a06171382c8afbaf8af8f00e8aeea52",
            "extract_dir": "higan-nightly",
            "bin": "icarus.exe",
            "shortcuts": [
                [
                    "icarus.exe",
                    "icarus"
                ]
            ],
            "checkver": {
                "github": "https://github.com/higan-emu/higan"
            },
            "autoupdate": {
                "url": "https://github.com/higan-emu/higan/releases/download/v$version/higan-v$version-windows-x86_64.zip"
            }
        },
        "iv-play": {
            "version": "1.8.3",
            "description": "IV/Play - A small and powerful MAME front-end. ",
            "homepage": "https://github.com/Mataniko/IV-Play",
            "license": "GPL-2.0",
            "url": "https://github.com/Mataniko/IV-Play/releases/download/v1.8.3/IV-Play.exe",
            "hash": "fb13a6e6923a72e03a5f25b4c641e5acf109e3b55dee15ba4f2cec10e4757976",
            "bin": "IV-Play.exe",
            "shortcuts": [
                [
                    "IV-Play.exe",
                    "IV-Play"
                ]
            ],
            "checkver": "github",
            "autoupdate": {
                "url": "https://github.com/Mataniko/IV-Play/releases/download/v$version/IV-Play.exe"
            }
        },
        "jpcsp": {
            "version": "XLinkKai-v1.0",
            "description": "PSP Emulator written in Java ",
            "homepage": "https://github.com/jpcsp/jpcsp",
            "license": "GPL-2.0",
            "url": "https://github.com/jpcsp/jpcsp/releases/download/XLinkKai-v1.0/jpcsp-d9de3122-windows-amd64.7z",
            "hash": "d7cb8346ee7a58b6ee8474cb59b00e907113e4034a5e752f95607210b1fd3473",
            "extract_dir": "jpcsp-windows-amd64",
            "bin": "start-windows-amd64.bat",
            "shortcuts": [
                [
                    "start-windows-amd64.bat",
                    "jpcsp"
                ]
            ],
            "checkver": {
                "github": "https://github.com/jpcsp/jpcsp",
                "re": "\\/releases\\/tag\\/([a-zA-Z0-9\\-\\.]+)"
            },
            "autoupdate": {
                "url": "https://github.com/jpcsp/jpcsp/releases/download/$version/jpcsp-d9de3122-windows-amd64.7z"
            }
        },
        "kega-fusion": {
            "version": "3.64",
            "description": "SEGA Genesis / Mega Drive emulator",
            "homepage": "https://www.carpeludum.com/kega-fusion/",
            "license": "Freeware",
            "url": "https://www.carpeludum.com/download/Fusion364.zip",
            "hash": "6365101eb417c5c2a5e6609573f354b7b7ea86632cbfd968676a1eec070e0ca3",
            "extract_dir": "Fusion364",
            "pre_install": "If(!(Test-Path(\"$persist_dir\\Fusion.ini\"))){New-Item -ItemType File \"$dir\\Fusion.ini\" | Out-Null }",
            "bin": "Fusion.exe",
            "shortcuts": [
                [
                    "Fusion.exe",
                    "Kega Fusion"
                ]
            ],
            "persist": "Fusion.ini",
            "checkver": {
                "url": "https://www.carpeludum.com/kega-fusion/",
                "regex": "Kega Fusion ([\\d]+[\\.][\\d]+) Windows<\\/a>"
            },
            "autoupdate": {
                "url": "https://www.carpeludum.com/download/Fusion$cleanVersion.zip",
                "extract_dir": "Fusion$cleanVersion"
            }
        },
        "m64p": {
            "version": "2022.08.9",
            "description": "Nintendo 64 emulator",
            "homepage": "https://m64p.github.io/",
            "license": {
                "identifier": "GPL-3.0",
                "url": "https://github.com/m64p/m64p/blob/main/LICENSE"
            },
            "url": "https://github.com/m64p/m64p/releases/download/v2022.08.9/m64p-win64-fbf2c91.zip",
            "hash": "6320e8f1520a5b0c6b70a0b85d700214bc124d4cf900b3690e164d9e28fe3b2e",
            "extract_dir": "mupen64plus",
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\\mupen64plus-gui.ini\")) {",
                "   New-Item    \"$dir\\mupen64plus-gui.ini\" -Type File | Out-Null",
                "   Set-Content \"$dir\\mupen64plus-gui.ini\" '[General]'",
                "   Add-Content \"$dir\\mupen64plus-gui.ini\" 'version=2'",
                "   Add-Content \"$dir\\mupen64plus-gui.ini\" 'configDirPath=$APP_PATH$/config'",
                "}"
            ],
            "bin": [
                [
                    "mupen64plus-gui.exe",
                    "m64p"
                ]
            ],
            "shortcuts": [
                [
                    "mupen64plus-gui.exe",
                    "m64p"
                ]
            ],
            "persist": "config",
            "checkver": {
                "github": "https://github.com/m64p/m64p",
                "regex": "v([\\d\\.]+)\\/m64p-win64-(?<commit>[\\da-f]{7})\\."
            },
            "autoupdate": {
                "url": "https://github.com/m64p/m64p/releases/download/v$version/m64p-win64-$matchCommit.zip"
            }
        },
        "mame": {
            "version": "0.247",
            "description": "Arcade machine emulator",
            "homepage": "http://mamedev.org",
            "license": {
                "identifier": "GPL-2.0",
                "url": "https://github.com/mamedev/mame/blob/master/COPYING"
            },
            "architecture": {
                "32bit": {
                    "url": "https://raw.githubusercontent.com/Calinou/scoop-games/27ba46f443a3446a70bf1f93eeb09797be0fb286/bucket/mame.json",
                    "hash": "c5000bfb8d01c568cb4b7df64cb16f2361729e19d43dd7bee30d1db72ac1b2c5",
                    "pre_install": [
                        "Write-Host -ForegroundColor Yellow \"WARN: MAME no longer provides up to date 32bit binaries\"",
                        "Write-Host -ForegroundColor Yellow \"Continue installing latest 32bit release (0.217)? \"",
                        "$choice = (Read-Host -Prompt \"[Y / N]\").toLower()",
                        "switch ($choice) {",
                        "   y {scoop uninstall mame",
                        "       scoop install https://raw.githubusercontent.com/Calinou/scoop-games/27ba46f443a3446a70bf1f93eeb09797be0fb286/bucket/mame.json",
                        "       scoop hold mame",
                        "       exit 0",
                        "   }",
                        "   n {Write-Error -Message \"Install aborted.\" -Category NotInstalled",
                        "       scoop uninstall mame",
                        "       exit 1",
                        "   }",
                        "}"
                    ]
                },
                "64bit": {
                    "url": "https://github.com/mamedev/mame/releases/download/mame0247/mame0247b_64bit.exe#/dl.7z",
                    "hash": "f633ab955b114edebc162716cd60c21c4906128038ada431a7cac56c606c3366",
                    "pre_install": [
                        "if(!(Test-Path \"$persist_dir\\mame.ini\")) {",
                        "   Start-Process \"$dir\\mame.exe\" -WorkingDirectory \"$dir\" -ArgumentList \"-createconfig\"",
                        "   Start-Sleep -Seconds 5",
                        "}"
                    ],
                    "bin": [
                        [
                            "mame.exe",
                            "mame"
                        ]
                    ],
                    "shortcuts": [
                        [
                            "mame.exe",
                            "MAME"
                        ]
                    ]
                }
            },
            "persist": [
                "ctrlr",
                "plugins",
                "roms",
                "mame.ini",
                "ui.ini",
                "plugin.ini"
            ],
            "checkver": {
                "github": "https://github.com/mamedev/mame",
                "regex": "MAME ([\\d.]+)"
            },
            "autoupdate": {
                "architecture": {
                    "32bit": {
                        "url": "https://raw.githubusercontent.com/Calinou/scoop-games/27ba46f443a3446a70bf1f93eeb09797be0fb286/bucket/mame.json"
                    },
                    "64bit": {
                        "url": "https://github.com/mamedev/mame/releases/download/mame$cleanVersion/mame$cleanVersionb_64bit.exe#/dl.7z"
                    }
                }
            }
        },
        "mameui": {
            "version": "0.247",
            "description": "MAMEUI is the x64 GUI version of MAME on the Windows platform.",
            "homepage": "http://www.mameui.info/",
            "license": "GPL-2.0-or-later",
            "architecture": {
                "64bit": {
                    "url": "http://www.mameui.info/MAMEUI.7z",
                    "hash": "0a66cd9c134487f5270185de18600aab89346a2c744ab8336fccee0a608fb3ff",
                    "extract_dir": "MAMEUI",
                    "shortcuts": [
                        [
                            "MAMEUI.exe",
                            "MAMEUI"
                        ]
                    ]
                }
            },
            "checkver": {
                "regex": "MAMEUI v\\.([\\d]+) Download",
                "replace": "0.${1}"
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "http://www.mameui.info/MAMEUI.7z"
                    }
                }
            }
        },
        "medgui-reborn": {
            "version": "0.120",
            "description": "Frontend and launcher for Mednafen multi emulator",
            "homepage": "https://github.com/Speedvicio/MedGuiReborn",
            "license": "CC0-1.0",
            "url": "https://github.com/Speedvicio/MedGuiReborn/releases/download/v.0120/MedGui.Reborn.v0.120.full.zip",
            "hash": "969aea8923d6ac3c4937229c8da4f581748fab063d66d512ee96af3126f58557",
            "extract_dir": "MedGui Reborn",
            "bin": "MedGuiR.exe",
            "shortcuts": [
                [
                    "MedGuiR.exe",
                    "Mednafen GUI Reborn"
                ]
            ],
            "persist": "MedGuiR",
            "checkver": "github",
            "autoupdate": {
                "url": "https://github.com/Speedvicio/MedGuiReborn/releases/download/v$version/MedGui.Reborn.v$version.full.zip"
            }
        },
        "mednafen-dev": {
            "version": "1.31.0",
            "description": "Multi-system emulator",
            "homepage": "https://mednafen.github.io/",
            "license": {
                "identifier": "GPL-2.0-only",
                "url": "http://www.gnu.org/licenses/gpl-2.0.html"
            },
            "notes": [
                "ATTENTION: Mednafen requires BIOS/firmware files for Playstation 1, PC Engine, and PC FX emulation.",
                "It is recommended to place these in $persist_dir\\firmware.",
                "See https://mednafen.github.io/documentation/#Section_firmware_bios for more information."
            ],
            "suggest": {
                "Mednaffe": "mednaffe"
            },
            "architecture": {
                "32bit": {
                    "url": "https://mednafen.github.io/releases/files/mednafen-1.31.0-UNSTABLE-win32.zip",
                    "hash": "0f4c21472bf7631133784c5b23999b11fc5ca6b196a6074ef071d9ebbb4a6636"
                },
                "64bit": {
                    "url": "https://mednafen.github.io/releases/files/mednafen-1.31.0-UNSTABLE-win64.zip",
                    "hash": "787ff503eb282dcd1bcdfc5b17da2f5bd24ac607b6c7ba6e36df1df335a607e5"
                }
            },
            "installer": {
                "script": [
                    "if (!(Test-Path \"$persist_dir\\mednafen.cfg\")) {",
                    "   New-Item \"$dir\\mednafen.cfg\" | Out-Null",
                    "}"
                ]
            },
            "bin": [
                [
                    "mednafen.exe",
                    "mednafen-dev"
                ]
            ],
            "shortcuts": [
                [
                    "mednafen.exe",
                    "mednafen (dev)"
                ]
            ],
            "persist": [
                "cheats",
                "firmware",
                "mcm",
                "mcs",
                "palettes",
                "pgconfig",
                "sav",
                "snaps",
                "mednafen.cfg"
            ],
            "checkver": {
                "regex": "mednafen-(?<version>[\\d.]+)(?<dev>-UNSTABLE)?.tar.xz",
                "replace": "${1}"
            },
            "autoupdate": {
                "architecture": {
                    "32bit": {
                        "url": "https://mednafen.github.io/releases/files/mednafen-$matchVersion$matchDev-win32.zip"
                    },
                    "64bit": {
                        "url": "https://mednafen.github.io/releases/files/mednafen-$matchVersion$matchDev-win64.zip"
                    }
                }
            }
        },
        "mednafen": {
            "version": "1.29.0",
            "description": "Multi-system emulator",
            "homepage": "https://mednafen.github.io/",
            "license": {
                "identifier": "GPL-2.0",
                "url": "http://www.gnu.org/licenses/gpl-2.0.html"
            },
            "notes": [
                "ATTENTION: Mednafen requires BIOS/firmware files for Playstation 1, PC Engine, and PC FX emulation.",
                "It is recommended to place these in $persist_dir\\firmware.",
                "See https://mednafen.github.io/documentation/#Section_firmware_bios for more information."
            ],
            "suggest": {
                "Mednaffe": "mednaffe"
            },
            "architecture": {
                "32bit": {
                    "url": "https://mednafen.github.io/releases/files/mednafen-1.29.0-win32.zip",
                    "hash": "f1c78dd0190129efaeeaa8e96553fb4d83d0120041caaaa6d4e7f440a573d811"
                },
                "64bit": {
                    "url": "https://mednafen.github.io/releases/files/mednafen-1.29.0-win64.zip",
                    "hash": "26c6676354d44e7d2c31b002f0abb097940e0846e449ed080fb79e6b64db0be2"
                }
            },
            "installer": {
                "script": [
                    "if (!(Test-Path \"$persist_dir\\mednafen.cfg\")) {",
                    "   New-Item \"$dir\\mednafen.cfg\" | Out-Null",
                    "}"
                ]
            },
            "bin": "mednafen.exe",
            "shortcuts": [
                [
                    "mednafen.exe",
                    "mednafen"
                ]
            ],
            "persist": [
                "cheats",
                "firmware",
                "mcm",
                "mcs",
                "palettes",
                "pgconfig",
                "sav",
                "snaps",
                "mednafen.cfg"
            ],
            "checkver": {
                "regex": "mednafen-(?<version>[\\d.]+).tar.xz",
                "replace": "${1}"
            },
            "autoupdate": {
                "architecture": {
                    "32bit": {
                        "url": "https://mednafen.github.io/releases/files/mednafen-$matchVersion-win32.zip"
                    },
                    "64bit": {
                        "url": "https://mednafen.github.io/releases/files/mednafen-$matchVersion-win64.zip"
                    }
                }
            }
        },
        "mednaffe": {
            "version": "0.9.2",
            "description": "Front-end for Mednafen",
            "homepage": "https://github.com/AmatCoder/mednaffe/",
            "license": {
                "identifier": "GPL-3.0",
                "url": "https://github.com/AmatCoder/mednaffe/blob/master/COPYING"
            },
            "depends": "sudo",
            "url": "https://github.com/AmatCoder/mednaffe/releases/download/0.9.2/mednaffe-0.9.2-win.zip",
            "hash": "e172f24c656dbc0d07bbeb67de03481b119be155997749697d12f9f33b60af00",
            "pre_install": [
                "$medinst = 0",
                "if (Test-Path \"$scoopdir\\apps\\mednafen\\current\\mednafen.exe\") {",
                "   $medinst = 1",
                "}",
                "elseif (Test-Path \"$scoopdir\\apps\\mednafen-dev\\current\\mednafen.exe\") {",
                "   $medinst = 2",
                "}",
                "if ((Test-Path \"$scoopdir\\apps\\mednafen\\current\\mednafen.exe\") -and (Test-Path \"$scoopdir\\apps\\mednafen-dev\\current\\mednafen.exe\")) {",
                "   Write-Host -ForegroundColor Yellow \"Mednafen and Mednafen-dev were found on this system.\"",
                "   Write-Host -ForegroundColor Yellow \"Choose one to use mednaffe with, 1 (stable) or 2 (dev)\"",
                "   $medinst = Read-Host -Prompt \"[1, 2]\"",
                "}",
                "if ($medinst -eq 0) {",
                "   Write-Host -ForegroundColor Yellow \"No Mednafen installation was found on this system.\"",
                "   Write-Host -ForegroundColor Yellow \"Choose 1 to install Mednafen stable, 2 for Mednafen-dev, or 3 to cancel the install.\"",
                "   $medinst = Read-Host -Prompt \"[1, 2, 3]\"",
                "   switch ($medinst) {",
                "       1 {scoop install mednafen}",
                "       2 {scoop install mednafen-dev}",
                "       3 {Write-Error -Message \"Install aborted.\" -Category NotInstalled",
                "           scoop uninstall mednaffe",
                "           exit 1",
                "       }",
                "   }",
                "}"
            ],
            "installer": {
                "script": [
                    "if (!(Test-Path \"$persist_dir\\mednafen.cfg\")) {",
                    "   New-Item \"$persist_dir\" -ItemType Directory | Out-Null",
                    "   switch ($medinst) {",
                    "       1 {sudo New-Item -ItemType HardLink -Path \"$persist_dir\\mednafen.cfg\" -Target \"$scoopdir\\persist\\mednafen\\mednafen.cfg\" | Out-Null}",
                    "       2 {sudo New-Item -ItemType HardLink -Path \"$persist_dir\\mednafen.cfg\" -Target \"$scoopdir\\persist\\mednafen-dev\\mednafen.cfg\" | Out-Null}",
                    "   }",
                    "}"
                ]
            },
            "bin": "mednaffe.exe",
            "shortcuts": [
                [
                    "mednaffe.exe",
                    "Mednaffe"
                ]
            ],
            "persist": "mednafen.cfg",
            "checkver": "github",
            "autoupdate": {
                "url": "https://github.com/AmatCoder/mednaffe/releases/download/$version/mednaffe-$version-win.zip"
            }
        },
        "melonds": {
            "version": "0.9.4",
            "description": "Nintendo DS emulator",
            "homepage": "http://melonds.kuribo64.net/",
            "license": {
                "identifier": "GPL-3.0",
                "url": "https://github.com/Arisotura/melonDS/blob/master/LICENSE"
            },
            "url": "https://github.com/Arisotura/melonDS/releases/download/0.9.4/melonDS_0.9.4_win_x64.7z",
            "hash": "8df7ae6293e358dcc4ff9728c72d02886893b89422171f04bb663355fa7faa07",
            "installer": {
                "script": [
                    "$FILE = 'melonDS.ini'",
                    "if (!(Test-Path \"$persist_dir\\$FILE\")) {",
                    "    New-Item \"$dir\\$FILE\" -Type File | Out-Null",
                    "}"
                ]
            },
            "bin": "melonDS.exe",
            "shortcuts": [
                [
                    "melonDS.exe",
                    "melonDS"
                ]
            ],
            "persist": "melonDS.ini",
            "checkver": {
                "github": "https://github.com/Arisotura/melonDS"
            },
            "autoupdate": {
                "url": "https://github.com/Arisotura/melonDS/releases/download/$version/melonDS_$version_win_x64.7z"
            }
        },
        "mesen-s": {
            "version": "0.4.0",
            "description": "Nintendo SNES (Super Nintendo Entertainment System) and Super Game Boy emulator",
            "homepage": "https://www.mesen.ca",
            "license": {
                "identifier": "GPL-3.0",
                "url": "https://github.com/SourMesen/Mesen-S/blob/master/LICENSE"
            },
            "notes": "Configuration files cannot be persisted, but will be retained during the update",
            "url": "https://github.com/SourMesen/Mesen-S/releases/download/0.4.0/Mesen-S.0.4.0.zip",
            "hash": "ce4ee543dd3aaa4a10e8597d5aa4735fbe9252c8d679e5772dbee827cfaa2d96",
            "pre_install": "if (!(Test-Path \"$persist_dir\\settings.xml\")) { New-Item -ItemType File \"$dir\\settings.xml\" | Out-Null }",
            "bin": "Mesen-S.exe",
            "shortcuts": [
                [
                    "Mesen-S.exe",
                    "Mesen-S"
                ]
            ],
            "persist": [
                "settings.xml",
                "Avi",
                "Cheats",
                "Firmware",
                "Movies",
                "RecentGames",
                "Saves",
                "SaveStates",
                "Screenshots",
                "Wave"
            ],
            "checkver": {
                "github": "https://github.com/SourMesen/Mesen-S/"
            },
            "autoupdate": {
                "url": "https://github.com/SourMesen/Mesen-S/releases/download/$version/Mesen-S.$version.zip"
            }
        },
        "mesen": {
            "version": "0.9.9",
            "description": "Nintendo NES (Nintendo Entertainment System) and Famicom emulator",
            "homepage": "https://www.mesen.ca",
            "license": {
                "identifier": "GPL-3.0",
                "url": "https://github.com/SourMesen/Mesen/blob/master/LICENSE"
            },
            "url": "https://github.com/SourMesen/Mesen/releases/download/0.9.9/Mesen.0.9.9.zip",
            "hash": "91bd2b1ba007c9349864a96e490dbdaada78033d51e0be1aabbf442a4b9a7cda",
            "pre_install": [
                "if(!(Test-Path(\"$persist_dir\\FdsBios.bin\"))) { New-Item \"$dir\\FdsBios.bin\" | Out-Null }",
                "if (!(Test-Path \"$persist_dir\\settings.xml\")) { New-Item -ItemType File \"$dir\\settings.xml\" | Out-Null }"
            ],
            "bin": "Mesen.exe",
            "shortcuts": [
                [
                    "Mesen.exe",
                    "Mesen"
                ]
            ],
            "persist": [
                "settings.xml",
                "FdsBios.bin",
                "Avi",
                "GoogleDrive",
                "HdPacks",
                "Movies",
                "RecentGames",
                "SaveStates",
                "Saves",
                "Screenshots",
                "Wave"
            ],
            "checkver": {
                "github": "https://github.com/SourMesen/Mesen/"
            },
            "autoupdate": {
                "url": "https://github.com/SourMesen/Mesen/releases/download/$version/Mesen.$version.zip"
            }
        },
        "mgba-dev": {
            "version": "7675-20220910",
            "description": "A fast, accurate, and portable GBA emulator (development version)",
            "homepage": "https://mgba.io/",
            "license": {
                "identifier": "MPL-2.0",
                "url": "https://github.com/mgba-emu/mgba/blob/master/LICENSE"
            },
            "architecture": {
                "32bit": {
                    "url": "https://s3.amazonaws.com/mgba/build/mGBA-build-2022-09-10-win32-7675-83f0deab1b47b693c06fd0d937e6b559fc2dbbd2.7z",
                    "hash": "236d99122c20f6ef6f63ef7c55b6619a9c38ded2b3ce86bf6f7f29218f31a02b",
                    "extract_dir": "mGBA-build-2022-09-10-win32-7675-83f0deab1b47b693c06fd0d937e6b559fc2dbbd2"
                },
                "64bit": {
                    "url": "https://s3.amazonaws.com/mgba/build/mGBA-build-2022-09-10-win64-7675-83f0deab1b47b693c06fd0d937e6b559fc2dbbd2.7z",
                    "hash": "c5478fe602e20424397a300561b40e7e1e10adcc199a745007fd41ce0639327f",
                    "extract_dir": "mGBA-build-2022-09-10-win64-7675-83f0deab1b47b693c06fd0d937e6b559fc2dbbd2"
                }
            },
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\\qt.ini\")) {",
                "   New-Item \"$dir\\qt.ini\" -Type File | Out-Null",
                "}",
                "if (!(Test-Path \"$persist_dir\\config.ini\")) {",
                "   New-Item \"$dir\\config.ini\" -Type File | Out-Null",
                "   Set-Content \"$dir\\config.ini\" '[ports.qt]'",
                "   Add-Content \"$dir\\config.ini\" 'savestatePath=savestate'",
                "   Add-Content \"$dir\\config.ini\" 'patchPath=patch'",
                "   Add-Content \"$dir\\config.ini\" 'screenshotPath=screenshot'",
                "   Add-Content \"$dir\\config.ini\" 'cheatsPath=cheats'",
                "   Add-Content \"$dir\\config.ini\" 'savegamePath=savegame'",
                "   Add-Content \"$dir\\config.ini\" 'gba.bios=bios/gba_bios.bin'",
                "   Add-Content \"$dir\\config.ini\" 'gb.bios=bios/gb_bios.bin'",
                "   Add-Content \"$dir\\config.ini\" 'gbc.bios=bios/gbc_bios.bin'",
                "   Add-Content \"$dir\\config.ini\" 'sgb.bios=bios/sgb_bios.bin'",
                "}"
            ],
            "bin": [
                [
                    "mGBA.exe",
                    "mgba-dev"
                ],
                [
                    "mgba-sdl.exe",
                    "mgba-sdl-dev"
                ]
            ],
            "shortcuts": [
                [
                    "mGBA.exe",
                    "mGBA (dev)"
                ]
            ],
            "persist": [
                "bios",
                "cheats",
                "patch",
                "savegame",
                "savestate",
                "screenshot",
                "shaders",
                "qt.ini",
                "config.ini",
                "portable.ini"
            ],
            "checkver": {
                "url": "https://mgba.io/builds/1/",
                "regex": "build-(?<year>20\\d{2})-(?<month>\\d{2})-(?<day>\\d{2})-win32-(?<ver>[\\d]+)-(?<git>\\w{40})\\.7z",
                "replace": "$4-$1$2$3"
            },
            "autoupdate": {
                "architecture": {
                    "32bit": {
                        "url": "https://s3.amazonaws.com/mgba/build/mGBA-build-$matchYear-$matchMonth-$matchDay-win32-$matchVer-$matchGit.7z",
                        "extract_dir": "mGBA-build-$matchYear-$matchMonth-$matchDay-win32-$matchVer-$matchGit"
                    },
                    "64bit": {
                        "url": "https://s3.amazonaws.com/mgba/build/mGBA-build-$matchYear-$matchMonth-$matchDay-win64-$matchVer-$matchGit.7z",
                        "extract_dir": "mGBA-build-$matchYear-$matchMonth-$matchDay-win64-$matchVer-$matchGit"
                    }
                }
            }
        },
        "mgba": {
            "version": "0.9.3",
            "description": "Nintendo Game Boy Advance emulator",
            "homepage": "https://mgba.io/",
            "license": {
                "identifier": "MPL-2.0",
                "url": "https://github.com/mgba-emu/mgba/blob/master/LICENSE"
            },
            "architecture": {
                "32bit": {
                    "url": "https://github.com/mgba-emu/mgba/releases/download/0.9.3/mGBA-0.9.3-win32.7z",
                    "hash": "54df53ba5bb463395da0b85db8692234259c2ab7210781d49426b78e5a259757",
                    "extract_dir": "mGBA-0.9.3-win32"
                },
                "64bit": {
                    "url": "https://github.com/mgba-emu/mgba/releases/download/0.9.3/mGBA-0.9.3-win64.7z",
                    "hash": "a84ba662a2808f2d47de6f00d437981359194b807447043860a33ce15b3f5468",
                    "extract_dir": "mGBA-0.9.3-win64"
                }
            },
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\\qt.ini\")) {",
                "   New-Item \"$dir\\qt.ini\" -Type File | Out-Null",
                "}",
                "if (!(Test-Path \"$persist_dir\\config.ini\")) {",
                "   New-Item \"$dir\\config.ini\" -Type File | Out-Null",
                "   Set-Content \"$dir\\config.ini\" '[ports.qt]'",
                "   Add-Content \"$dir\\config.ini\" 'savestatePath=savestate'",
                "   Add-Content \"$dir\\config.ini\" 'patchPath=patch'",
                "   Add-Content \"$dir\\config.ini\" 'screenshotPath=screenshot'",
                "   Add-Content \"$dir\\config.ini\" 'cheatsPath=cheats'",
                "   Add-Content \"$dir\\config.ini\" 'savegamePath=savegame'",
                "   Add-Content \"$dir\\config.ini\" 'gba.bios=bios/gba_bios.bin'",
                "   Add-Content \"$dir\\config.ini\" 'gb.bios=bios/gb_bios.bin'",
                "   Add-Content \"$dir\\config.ini\" 'gbc.bios=bios/gbc_bios.bin'",
                "   Add-Content \"$dir\\config.ini\" 'sgb.bios=bios/sgb_bios.bin'",
                "}"
            ],
            "bin": [
                [
                    "mGBA.exe",
                    "mgba-sdl.exe"
                ]
            ],
            "shortcuts": [
                [
                    "mGBA.exe",
                    "mGBA"
                ]
            ],
            "persist": [
                "bios",
                "cheats",
                "patch",
                "savegame",
                "savestate",
                "screenshot",
                "shaders",
                "qt.ini",
                "config.ini",
                "portable.ini"
            ],
            "checkver": {
                "github": "https://github.com/mgba-emu/mgba"
            },
            "autoupdate": {
                "architecture": {
                    "32bit": {
                        "url": "https://github.com/mgba-emu/mgba/releases/download/$version/mGBA-$version-win32.7z",
                        "extract_dir": "mGBA-$version-win32"
                    },
                    "64bit": {
                        "url": "https://github.com/mgba-emu/mgba/releases/download/$version/mGBA-$version-win64.7z",
                        "extract_dir": "mGBA-$version-win64"
                    }
                }
            }
        },
        "model-b": {
            "version": "20040410",
            "description": "model-b is a BBC Micro emulator",
            "homepage": "http://modelb.bbcmicro.com",
            "license": "GPL-2.0-only",
            "url": "http://modelb.bbcmicro.com/latest/modelb-dx8.zip",
            "hash": "9cade6d0f7a45b4a91c7e14dce5259fc8a9c0b7d1f27d240fc2b916f6e477741",
            "shortcuts": [
                [
                    "modelb.exe",
                    "model-b"
                ]
            ]
        },
        "model3": {
            "version": "0.3a-git-0eef09b",
            "description": "Emulates Sega's Model 3 arcade platform, allowing you to relive state-of-the-art 3D arcade gaming as it existed from 1996 through 1999. It uses OpenGL, SDL2, and can run on Windows, Linux, and macOS. It also supports network play on low-latency network connections.",
            "homepage": "https://github.com/trzy/Supermodel",
            "license": "GPL-3.0",
            "url": "https://supermodel3.com/Files/Git_Snapshots/Supermodel_0.3a-git-0eef09b_Win64.zip",
            "hash": "c0edb04b713a67e0aec27e9ec4b1d7743eb4965a893623a427e3e471dcd6d2fe",
            "bin": "Supermodel.exe",
            "shortcuts": [
                [
                    "Supermodel.exe",
                    "Supermodel"
                ]
            ],
            "checkver": {
                "url": "https://supermodel3.com/Download.html",
                "re": ">Supermodel_([0-9\\.a-z]*-git-[a-f0-9]*)_Win64.zip<"
            },
            "autoupdate": {
                "url": "https://supermodel3.com/Files/Git_Snapshots/Supermodel_$version_Win64.zip"
            }
        },
        "nanoboyadvance": {
            "version": "1.6",
            "description": "NanoBoyAdvance is a Game Boy Advance emulator focused on accuracy.",
            "homepage": "https://github.com/nba-emu/NanoBoyAdvance",
            "license": "GPL-3.0-only",
            "architecture": {
                "64bit": {
                    "url": "https://github.com/nba-emu/NanoBoyAdvance/releases/download/v1.6/NanoBoyAdvance-1.6-win64.zip",
                    "hash": "b203d19e767bdf51c21f5ba98de081486259ee80d41d30d1fd2a6e9d7c9fcb65"
                }
            },
            "shortcuts": [
                [
                    "NanoBoyAdvance.exe",
                    "NanoBoyAdvance"
                ]
            ],
            "persist": "config.toml",
            "checkver": "github",
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://github.com/nba-emu/NanoBoyAdvance/releases/download/v$version/NanoBoyAdvance-$version-win64.zip"
                    }
                }
            }
        },
        "nester": {
            "version": "publicbeta4a",
            "description": "Nintendo Entertainment System emulator for Windows",
            "homepage": "https://sourceforge.net/p/nester-emu/wiki/Home/",
            "license": {
                "identifier": "GPLv2"
            },
            "url": "https://sourceforge.net/projects/nester-emu/files/nester-emu/public%20beta%204a/nester_publicbeta4a.zip/download#/nester.zip",
            "hash": "23e72f07dd327ec1eba836155bad9f8efc0a5d30d46a525df0ae061bced6380d",
            "extract_dir": "nester_publicbeta4a",
            "bin": "nester.exe",
            "shortcuts": [
                [
                    "nester.exe",
                    "nester"
                ]
            ],
            "checkver": {
                "url": "https://sourceforge.net/projects/nester-emu/rss?path=/nester-emu/public%20beta%204a",
                "re": "nester_(.*)\\.zip"
            },
            "autoupdate": {
                "url": "https://sourceforge.net/projects/nester-emu/files/nester-emu/public%20beta%204a/nester_$version.zip/download#/nester.zip",
                "extract_dir": "nester_$version"
            }
        },
        "nestopia": {
            "version": "1.40",
            "description": "A portable and cycle-accurate NES/Famicom emulator written in C++",
            "homepage": "http://nestopia.sourceforge.net/",
            "license": {
                "identifier": "GPLv2"
            },
            "url": "https://sourceforge.net/projects/nestopia/files/Nestopia/v1.40/Nestopia140bin.zip/download#/nestopia.zip",
            "hash": "d30aeff27ffd8a22099b8edd043763b07a62a19e8bf8710e09c4f11b1f69764f",
            "bin": "nestopia.exe",
            "shortcuts": [
                [
                    "nestopia.exe",
                    "nestopia"
                ]
            ],
            "checkver": {
                "url": "https://sourceforge.net/projects/nestopia/rss?path=/Nestopia/v1.40",
                "re": "Nestopia/v(.*)/Nestopia(.*)bin.zip"
            },
            "autoupdate": {
                "url": "https://sourceforge.net/projects/nestopia/files/Nestopia/v$version/Nestopia$cleanVersionbin.zip/download/nestopia.zip"
            }
        },
        "nintendulator": {
            "version": "0.985",
            "description": "NES emulator for Windows ",
            "homepage": "https://github.com/quietust/nintendulator",
            "license": "GPL-2.0",
            "url": "https://www.qmtpro.com/~nes/nintendulator/nintendulator_bin_amd64.zip",
            "hash": "865a63764d03f12c17d92cd7d2bf96f86f72790c0a3d96c2946123a1ccf488c6",
            "bin": "Nintendulator.exe",
            "shortcuts": [
                [
                    "Nintendulator.exe",
                    "Nintendulator"
                ]
            ],
            "checkver": {
                "url": "https://www.qmtpro.com/~nes/nintendulator/",
                "re": "<li>Nintendulator v([0-9\\.]*) Beta"
            },
            "autoupdate": {
                "url": "https://www.qmtpro.com/~nes/nintendulator/nintendulator_bin_amd64.zip"
            }
        },
        "noods": {
            "version": "428",
            "description": "A (hopefully!) speedy DS emulator ",
            "homepage": "https://github.com/Hydr8gon/NooDS",
            "license": "GPL-2.0",
            "url": "https://github.com/Hydr8gon/NooDS/releases/download/release/noods-windows.zip",
            "hash": "80f41712dafcefcc263e5e70071f64d0e769eec4c1a09fafe71fec20c7af8b2a",
            "bin": "noods.exe",
            "shortcuts": [
                [
                    "noods.exe",
                    "NooDS"
                ]
            ],
            "checkver": {
                "url": "https://github.com/Hydr8gon/NooDS/actions/workflows/autobuild.yml?query=branch%3Amaster+is%3Asuccess",
                "regex": "Run ([0-9]*) of Automatic Builds"
            },
            "autoupdate": {
                "url": "https://github.com/Hydr8gon/NooDS/releases/download/release/noods-windows.zip"
            }
        },
        "openmsx-dev": {
            "version": "18.0-86-g527fbfc2d",
            "description": "Cycle-accurate MSX emulator (Development builds)",
            "homepage": "https://openmsx.fixato.net/",
            "license": "GPL-2.0",
            "notes": "User data are stored in C:\\Users\\[USERNAME]\\Documents\\openMSX",
            "architecture": {
                "64bit": {
                    "url": "https://openmsx.fixato.net/builds/windows/x64/openmsx-18.0-86-g527fbfc2d-windows-vc-x64-bin.zip",
                    "hash": "3218a2942ce455378f6b27dcbd4ea38ac8dc37122e152671f0309eb15c6cbdc1"
                }
            },
            "bin": [
                [
                    "openmsx.exe",
                    "openmex-dev"
                ]
            ],
            "shortcuts": [
                [
                    "openmsx.exe",
                    "openMSX\\openMSX (Development)"
                ],
                [
                    "Catapult\\bin\\Catapult.exe",
                    "openMSX\\Catapult (Development)"
                ]
            ],
            "checkver": {
                "url": "https://openmsx.fixato.net/builds/windows/x64/",
                "regex": "openmsx-(?<ver>[\\d.]+)-(?<build>[\\d]+)-g(?<commit>[\\da-f]{9})-windows-vc-x64-bin\\.zip",
                "replace": "${ver}-${build}-g${commit}"
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://openmsx.fixato.net/builds/windows/x64/openmsx-$version-windows-vc-x64-bin.zip"
                    }
                }
            }
        },
        "openmsx": {
            "version": "18.0",
            "description": "Cycle-accurate MSX emulator",
            "homepage": "https://openmsx.org/",
            "license": "GPL-2.0",
            "notes": "User data are stored in C:\\Users\\[USERNAME]\\Documents\\openMSX",
            "architecture": {
                "64bit": {
                    "url": "https://github.com/openMSX/openMSX/releases/download/RELEASE_18_0/openmsx-18.0-windows-vc-x64-bin.zip",
                    "hash": "f03c88622e71f663ad0973cc65374747098ff7e890058171c54886e431a62d79"
                }
            },
            "bin": "openmsx.exe",
            "shortcuts": [
                [
                    "openmsx.exe",
                    "openMSX\\openMSX"
                ],
                [
                    "Catapult\\bin\\Catapult.exe",
                    "openMSX\\Catapult"
                ]
            ],
            "checkver": {
                "regex": "openmsx-([\\d.]+)-windows-vc-x64-bin\\.zip"
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://github.com/openMSX/openMSX/releases/download/RELEASE_$majorVersion_$minorVersion/openmsx-$version-windows-vc-x64-bin.zip"
                    }
                }
            }
        },
        "pcsx2-dev": {
            "version": "1.7.3329",
            "description": "A feature rich FOSS PlayStation 2 emulator (development version)",
            "homepage": "https://pcsx2.net/",
            "license": {
                "identifier": "GPL-3.0",
                "url": "https://github.com/PCSX2/pcsx2/blob/master/COPYING.GPLv3"
            },
            "notes": [
                "ATTENTION: PCSX2 requires a dump of the PS2 BIOS to function.",
                "Place the BIOS file in $persist_dir\\bios",
                "Learn more at https://wiki.pcsx2.net/Setting_up_Windows_version#BIOS"
            ],
            "suggest": {
                "Microsoft Visual C++ Runtime 2022": "extras/vcredist2022"
            },
            "url": "https://github.com/PCSX2/pcsx2/releases/download/v1.7.3329/pcsx2-v1.7.3329-windows-64bit-AVX2-Qt.7z",
            "hash": "5b5b742ed68e747d8910483c2a8c2092a5d95c812939388fc081e7a642b99106",
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\")) {",
                "   New-Item \"$persist_dir\" -ItemType Directory | Out-Null",
                "   if (Test-Path \"$env:USERPROFILE\\Documents\\PCSX2\") {",
                "       Write-host \"Migrating AppData...\" -ForegroundColor yellow",
                "       Copy-Item -Path \"$env:USERPROFILE\\Documents\\PCSX2\\*\" -Destination \"$persist_dir\" -Recurse",
                "       Remove-Item -Path \"$env:USERPROFILE\\Documents\\PCSX2\" -Recurse",
                "   }",
                "   if (!(Test-Path \"$persist_dir\\inis\\PCSX2.ini\")) {",
                "       New-item \"$persist_dir\\inis\" -ItemType Directory | Out-Null",
                "       '[AutoUpdater]', 'CheckAtStartup = false' | Set-Content \"$persist_dir\\inis\\PCSX2.ini\"",
                "   }",
                "}"
            ],
            "bin": [
                [
                    "pcsx2-qtx64-avx2.exe",
                    "pcsx2-dev"
                ]
            ],
            "shortcuts": [
                [
                    "pcsx2-qtx64-avx2.exe",
                    "PCSX2 (dev)"
                ]
            ],
            "persist": [
                "bios",
                "cheats_ws",
                "cheats",
                "covers",
                "gamesettings",
                "inis",
                "logs",
                "memcards",
                "portable.ini",
                "shaders\\GS_FX_Settings.ini",
                "snaps",
                "sstates",
                "textures"
            ],
            "checkver": {
                "url": "https://github.com/PCSX2/pcsx2/releases.atom",
                "regex": "v(?<basever>\\d+\\.\\d+)\\.(?<build>\\d+)",
                "replace": "${basever}.${build}"
            },
            "autoupdate": {
                "url": "https://github.com/PCSX2/pcsx2/releases/download/v$version/pcsx2-v$version-windows-64bit-AVX2-Qt.7z"
            }
        },
        "pcsx2": {
            "version": "1.6.0",
            "description": "A feature rich FOSS PlayStation 2 emulator",
            "homepage": "https://pcsx2.net/",
            "license": {
                "identifier": "GPL-3.0",
                "url": "https://github.com/PCSX2/pcsx2/blob/master/COPYING.GPLv3"
            },
            "notes": [
                "ATTENTION: PCSX2 requires a dump of the PS2 BIOS to function.",
                "Place the BIOS file in $persist_dir\\bios",
                "Learn more at https://wiki.pcsx2.net/Setting_up_Windows_version#BIOS"
            ],
            "suggest": {
                "Microsoft Visual C++ Runtime 2022": "extras/vcredist2022"
            },
            "url": "https://github.com/PCSX2/pcsx2/releases/download/v1.6.0/pcsx2-1.6.0-binaries.7z",
            "hash": "f3401d6f74a4306797d9aab298d58c3b3898eb563495c463993f378c9f4801cb",
            "extract_dir": "PCSX2 1.6.0",
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\")) {",
                "   New-item \"$persist_dir\" -ItemType Directory | Out-Null",
                "   if (Test-Path \"$env:USERPROFILE\\Documents\\PCSX2\") {",
                "       Write-host \"Migrating AppData...\" -ForegroundColor yellow",
                "       Copy-Item -Path \"$env:USERPROFILE\\Documents\\PCSX2\\*\" -Destination \"$persist_dir\" -Recurse",
                "       Remove-Item -Path \"$env:USERPROFILE\\Documents\\PCSX2\" -Recurse",
                "   }",
                "}"
            ],
            "bin": "pcsx2.exe",
            "shortcuts": [
                [
                    "pcsx2.exe",
                    "PCSX2"
                ]
            ],
            "persist": [
                "bios",
                "cheats_ws",
                "cheats",
                "inis",
                "logs",
                "memcards",
                "portable.ini",
                "shaders\\GSdx_FX_Settings.ini",
                "snaps",
                "sstates"
            ],
            "checkver": {
                "github": "https://github.com/PCSX2/pcsx2/"
            },
            "autoupdate": {
                "url": "https://github.com/PCSX2/pcsx2/releases/download/v$version/pcsx2-$version-binaries.7z",
                "extract_dir": "PCSX2 $version"
            }
        },
        "pegasus-nightly": {
            "version": "alpha16-42-g996720eb",
            "description": "Pegasus is a graphical frontend for browsing your game library and launching all kinds of emulators from the same place",
            "homepage": "https://pegasus-frontend.org/",
            "license": "GPLv3",
            "architecture": {
                "64bit": {
                    "url": "https://github.com/mmatyas/pegasus-frontend/releases/download/continuous/pegasus-fe_alpha16-42-g996720eb_win-mingw-static.zip",
                    "hash": "667f67373f4f89943d303e66d16177a54c9be29cdd32549fb62186f13dbfb8d8"
                }
            },
            "post_install": "New-Item -ItemType file \"$dir\\portable.txt\" | Out-Null",
            "shortcuts": [
                [
                    "pegasus-fe.exe",
                    "Pegasus (Latest)"
                ]
            ],
            "checkver": {
                "url": "https://api.github.com/repos/mmatyas/pegasus-frontend/releases/tags/continuous",
                "regex": "continuous/pegasus-fe_([\\w\\d-]+)_win-mingw-static.zip"
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://github.com/mmatyas/pegasus-frontend/releases/download/continuous/pegasus-fe_$version_win-mingw-static.zip"
                    }
                }
            }
        },
        "pegasus": {
            "version": "alpha16",
            "description": "Pegasus is a graphical frontend for browsing your game library and launching all kinds of emulators from the same place",
            "homepage": "https://pegasus-frontend.org/",
            "license": "GPLv3",
            "architecture": {
                "64bit": {
                    "url": "https://github.com/mmatyas/pegasus-frontend/releases/download/alpha16/pegasus-fe_alpha16_win-mingw-static.zip",
                    "hash": "defa62b38b19fc5623331ae54443005024428c1f82bce57883f13fb2e9e545b1"
                }
            },
            "post_install": "New-Item -ItemType file \"$dir\\portable.txt\" | Out-Null",
            "shortcuts": [
                [
                    "pegasus-fe.exe",
                    "Pegasus (Stable)"
                ]
            ],
            "checkver": {
                "github": "https://github.com/mmatyas/pegasus-frontend",
                "regex": "download/(?<version>[wa][^/]+)/pegasus-fe_([^\\.]+)_win-mingw-static.zip"
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://github.com/mmatyas/pegasus-frontend/releases/download/$version/pegasus-fe_$version_win-mingw-static.zip"
                    }
                }
            }
        },
        "phoenixemu": {
            "version": "2.8",
            "description": "Phoenix is an emulator of 3DO Interactive Player and Atari Jaguar written by Maxim Grishin",
            "homepage": "http://www.arts-union.ru/node/23",
            "license": "Freeware,...",
            "architecture": {
                "64bit": {
                    "url": "http://www.arts-union.ru/sites/default/files/ph28jag-win64.zip",
                    "hash": "686a9057447629bcf4091659482b2c99136aba66057b8274a5853bd8da2485c7",
                    "extract_dir": "ph-win64",
                    "bin": "PhoenixEmuProject.exe",
                    "shortcuts": [
                        [
                            "PhoenixEmuProject.exe",
                            "Phoenix Emulator"
                        ]
                    ]
                },
                "32bit": {
                    "url": "http://www.arts-union.ru/sites/default/files/ph28jag-win32.zip",
                    "hash": "4b61ef22afe8c6957901788a1c0aa1cda870754f8e4a0e509915886b927210b5",
                    "extract_dir": "ph-win32",
                    "bin": "PhoenixEmuProject.exe",
                    "shortcuts": [
                        [
                            "PhoenixEmuProject.exe",
                            "Phoenix Emulator"
                        ]
                    ]
                }
            },
            "checkver": {
                "url": "http://www.arts-union.ru/node/24",
                "regex": "Версия ([\\d.]+).JAG"
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "http://www.arts-union.ru/sites/default/files/ph$cleanVersionjag-win64.zip"
                    },
                    "32bit": {
                        "url": "http://www.arts-union.ru/sites/default/files/ph$cleanVersionjag-win32.zip"
                    }
                }
            }
        },
        "play": {
            "version": "0.56",
            "description": "A newer experimental ps2 emulator.",
            "homepage": "https://purei.org",
            "license": "BSD-2-Clause",
            "architecture": {
                "32bit": {
                    "url": "https://purei.org/downloads/play/stable/0.56/Play-x86-32.exe#/dl.7z",
                    "hash": "128036177a846c17b618fe6215d52de9e99e607ef8f01b93e224b2f88a3cfd4f"
                },
                "64bit": {
                    "url": "https://purei.org/downloads/play/stable/0.56/Play-x86-64.exe#/dl.7z",
                    "hash": "5e52ee68b0efd901ce24047ce425b1719600f270c8a9c4a5f57e04ce673e1d70"
                }
            },
            "post_install": "Remove-Item \"$dir\\`$PLUGINSDIR\", \"$dir\\uninstall.exe\" -Recurse -Force",
            "bin": "Play.exe",
            "shortcuts": [
                [
                    "Play.exe",
                    "Play"
                ]
            ],
            "checkver": {
                "url": "https://purei.org/downloads/play/stable/?C=M;O=D",
                "regex": ">([\\d.]+)/<"
            },
            "autoupdate": {
                "architecture": {
                    "32bit": {
                        "url": "https://purei.org/downloads/play/stable/$version/Play-x86-32.exe#/dl.7z"
                    },
                    "64bit": {
                        "url": "https://purei.org/downloads/play/stable/$version/Play-x86-64.exe#/dl.7z"
                    }
                }
            }
        },
        "ppsspp-dev": {
            "version": "1.13.2-1091",
            "description": "Sony PSP emulator (Development)",
            "homepage": "https://www.ppsspp.org",
            "license": {
                "identifier": "GPL 2.0 or later",
                "url": "https://github.com/hrydgard/ppsspp/blob/master/LICENSE.TXT"
            },
            "architecture": {
                "32bit": {
                    "url": "https://buildbot.orphis.net/ppsspp/index.php?m=dl&rev=v1.13.2-1091-g0c39c434d&platform=windows-x86#/dl.7z",
                    "hash": "d2624b8a058976a888641727b815f6d8397b7cd2addbfce8e099c2bc03c1f130",
                    "bin": [
                        [
                            "PPSSPPWindows.exe",
                            "ppsspp-dev"
                        ]
                    ],
                    "shortcuts": [
                        [
                            "PPSSPPWindows.exe",
                            "PPSSPP (development)"
                        ]
                    ]
                },
                "64bit": {
                    "url": "https://buildbot.orphis.net/ppsspp/index.php?m=dl&rev=v1.13.2-1091-g0c39c434d&platform=windows-amd64#/dl.7z",
                    "hash": "15d44433e64b0de850d5592984a1240aa38b17d5177ded1227d575c08d4c8e7d",
                    "bin": [
                        [
                            "PPSSPPWindows64.exe",
                            "ppsspp-dev"
                        ]
                    ],
                    "shortcuts": [
                        [
                            "PPSSPPWindows64.exe",
                            "PPSSPP (development)"
                        ]
                    ]
                }
            },
            "extract_dir": "ppsspp",
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\")) {",
                "   New-item \"$persist_dir\" -ItemType Directory | Out-Null",
                "   New-item \"$persist_dir\\memstick\" -ItemType Directory | Out-Null",
                "}"
            ],
            "persist": [
                "memstick",
                "assets",
                "demos"
            ],
            "checkver": {
                "url": "https://buildbot.orphis.net/ppsspp/index.php",
                "regex": "=v(?<version>[\\d.]+-[\\d]+)-g(?<commit>[a-f\\d]+)&[\\w;=]+-amd64"
            },
            "autoupdate": {
                "architecture": {
                    "32bit": {
                        "url": "https://buildbot.orphis.net/ppsspp/index.php?m=dl&rev=v$version-g$matchCommit&platform=windows-x86#/dl.7z"
                    },
                    "64bit": {
                        "url": "https://buildbot.orphis.net/ppsspp/index.php?m=dl&rev=v$version-g$matchCommit&platform=windows-amd64#/dl.7z"
                    }
                }
            }
        },
        "ppsspp": {
            "version": "1.13.2",
            "description": "Sony PSP emulator",
            "homepage": "https://www.ppsspp.org",
            "license": {
                "identifier": "GPL 2.0 or later",
                "url": "https://github.com/hrydgard/ppsspp/blob/master/LICENSE.TXT"
            },
            "url": "https://www.ppsspp.org/files/1_13_2/ppsspp_win.zip",
            "hash": "e73c5d639bdf7c39edb1263830f49a84d6061bd64810cd69994911e10faaeb20",
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\")) {",
                "   New-Item \"$persist_dir\" -ItemType Directory | Out-Null",
                "   New-Item \"$persist_dir\\memstick\" -ItemType Directory | Out-Null",
                "}"
            ],
            "bin": [
                [
                    "PPSSPPWindows64.exe",
                    "ppsspp"
                ]
            ],
            "shortcuts": [
                [
                    "PPSSPPWindows64.exe",
                    "PPSSPP"
                ]
            ],
            "persist": [
                "assets",
                "demos",
                "memstick"
            ],
            "checkver": {
                "url": "https://www.ppsspp.org/downloads.html",
                "regex": "files/([\\d]+)_([\\d]+)_([\\d]+)/ppsspp_win.zip",
                "replace": "${1}.${2}.${3}"
            },
            "autoupdate": {
                "url": "https://www.ppsspp.org/files/$underscoreVersion/ppsspp_win.zip"
            }
        },
        "project64-dev": {
            "version": "4.0.0-5917-a2981ff",
            "description": "Nintendo 64 emulator",
            "homepage": "https://www.pj64-emu.com/",
            "license": {
                "identifier": "GPL-2.0",
                "url": "https://github.com/project64/project64/blob/develop/license.md"
            },
            "url": "https://www.pj64-emu.com/file/setup-project64-Dev-4-0-0-5917-a2981ff/",
            "hash": "826f204bfa422c2e743bb2215f28edc200dec15bb9db7298640ede121ea73111",
            "bin": [
                [
                    "Project64.exe",
                    "Project64-dev"
                ]
            ],
            "shortcuts": [
                [
                    "Project64.exe",
                    "Project64 (development)"
                ]
            ],
            "persist": [
                "Config",
                "Logs",
                "Save",
                "Screenshots",
                "Textures",
                "Games",
                "ROMs"
            ],
            "checkver": {
                "url": "https://www.pj64-emu.com/nightly-builds",
                "regex": "((?<major>[\\d]+)\\.(?<minor>[\\d]+)\\.(?<patch>[\\d]+)-(?<build>[\\d]+)-(?<commit>[\\da-f]+))"
            },
            "autoupdate": {
                "url": "https://www.pj64-emu.com/file/setup-project64-Dev-$dashVersion/"
            },
            "innosetup": true
        },
        "project64": {
            "version": "3.0.1-5664-2df3434",
            "description": "Nintendo 64 emulator",
            "homepage": "https://www.pj64-emu.com/",
            "license": {
                "identifier": "GPL-2.0",
                "url": "https://github.com/project64/project64/blob/develop/license.md"
            },
            "architecture": {
                "64bit": {
                    "url": "https://www.pj64-emu.com/file/project64-3-0-0-5632-f83bee9/#/Project64-3.0.1-5664-2df3434.zip",
                    "hash": "6e2d123a0d665576649c16dc0cb902d70f9a1072a5fbcd23a5ab4cf3854dd07f",
                    "bin": [
                        [
                            "Project64.exe",
                            "Project64"
                        ]
                    ],
                    "shortcuts": [
                        [
                            "Project64.exe",
                            "Project64"
                        ]
                    ]
                }
            },
            "persist": [
                "Config",
                "Logs",
                "Save",
                "Screenshots",
                "Textures",
                "Games",
                "ROMs"
            ],
            "checkver": {
                "url": "https://www.pj64-emu.com/public-releases",
                "regex": "^(?<version>.+?) (?<url>.*)$",
                "script": [
                    "$ProgressPreference = 'SilentlyContinue'",
                    "#$json = Get-Content bucket\\project64.json | ConvertFrom-Json",
                    "$page = (Invoke-WebRequest $json.checkver.url).Content",
                    "$aregex = New-Object System.Text.RegularExpressions.Regex(\"<a href=`\"/`(?<url>[^`\"]*`)`\">Project64`\\s+`(?<version>v?[`\\d.]+`)`\\s+Zip</a>\")",
                    "$amatch = $aregex.Matches($page) | Select-Object -First 1",
                    "$burl = $json.homepage + $amatch.Groups['url'].Value",
                    "$bpage = (Invoke-WebRequest $burl).Content",
                    "$bregex = New-Object System.Text.RegularExpressions.Regex(\"window.location = '/(?<url>[^']+)'\")",
                    "$bmatch = $bregex.Matches($bpage) | Select-Object -First 1",
                    "$rurl = $bmatch.Groups['url'].Value",
                    "$curl = $json.homepage + $rurl",
                    "$cpage = (Invoke-WebRequest -Method Head $curl).RawContent",
                    "$cregex = New-Object System.Text.RegularExpressions.Regex(\"filename=`\"Project64-(?<version>[\\d.]+-[\\d]+-[0-9a-f]+`)\")",
                    "$cmatch = $cregex.Matches($cpage) | Select-Object -First 1",
                    "$rversion = $cmatch.Groups['version'].Value",
                    "Write-Output $rversion $rurl",
                    "$ProgressPreference = 'Continue'"
                ]
            },
            "autoupdate": {
                "url": "https://www.pj64-emu.com/$matchUrl#/Project64-$matchVersion.zip"
            }
        },
        "prosystem": {
            "version": "1.3",
            "description": "The ProSystem Emulator is an Atari 7800 emulator for the PC",
            "homepage": "http://gstanton.github.io/ProSystem1_3",
            "license": "GPL-2.0-only",
            "url": "https://github.com/gstanton/ProSystem1_3/releases/download/v1.3/ProSystem_1_3.zip",
            "hash": "34cfba00ee7f97bb49b26e08b874d36410569e861e24f7522523b0643b15b2be",
            "extract_dir": "ProSystem_13",
            "bin": "ProSystem.exe",
            "shortcuts": [
                [
                    "ProSystem.exe",
                    "ProSystem Atari 7800"
                ]
            ],
            "checkver": {
                "github": "https://github.com/gstanton/ProSystem1_3"
            },
            "autoupdate": {
                "url": "https://github.com/gstanton/ProSystem$underscoreVersion/releases/download/v$version/ProSystem_$underscoreVersion.zip",
                "extract_dir": "ProSystem_$cleanVersion"
            }
        },
        "ps3-system-software": {
            "version": "4.89",
            "description": "Sony PlayStation 3 system software",
            "homepage": "https://www.playstation.com/en-us/support/hardware/ps3/system-software/",
            "license": {
                "identifier": "Proprietary",
                "url": "https://doc.dl.playstation.net/doc/ps3-eula/ps3_eula_en.html"
            },
            "url": "http://dus01.ps3.update.playstation.net/update/ps3/image/us/2022_0510_95307e1b51d3bcc33a274db91488d29f/PS3UPDAT.PUP",
            "hash": "ef033f897242237848eaffee97256a8998da8848e0c6cc05b68e6810a9110179",
            "checkver": {
                "url": "https://www.playstation.com/en-us/support/hardware/ps3/system-software/",
                "regex": "(?sm)PlayStation®3 System Software Update ((?:\\d+)?(?:\\.?\\d*)).*?ps3/image/us/(?<time>[\\w_]+)/PS3UPDAT.PUP"
            },
            "autoupdate": {
                "url": "http://dus01.ps3.update.playstation.net/update/ps3/image/us/$matchTime/PS3UPDAT.PUP"
            }
        },
        "punes-opengl": {
            "version": "0.109",
            "description": "Qt-based Nintendo Entertaiment System emulator and NSF/NSFe Music Player (OpenGL Version)",
            "homepage": "https://github.com/punesemu/puNES",
            "license": "GPL-2.0",
            "url": "https://github.com/punesemu/puNES/releases/download/v0.109/punes-0.109-x86_64-win-opengl.zip",
            "hash": "7f74e869cfd280f5011a7644b62d234ac34505ecb2a4ac8c0b0cb0ce255e5301",
            "bin": "punes64.exe",
            "shortcuts": [
                [
                    "punes64.exe",
                    "puNES (OpenGL)"
                ]
            ],
            "checkver": "github",
            "autoupdate": {
                "url": "https://github.com/punesemu/puNES/releases/download/v$version/punes-$version-x86_64-win-opengl.zip"
            }
        },
        "punes": {
            "version": "0.109",
            "description": "Qt-based Nintendo Entertaiment System emulator and NSF/NSFe Music Player (Direct3D Version)",
            "homepage": "https://github.com/punesemu/puNES",
            "license": "GPL-2.0",
            "url": "https://github.com/punesemu/puNES/releases/download/v0.109/punes-0.109-x86_64-win-d3d9.zip",
            "hash": "2b75965baafe8b7709d439bb5bdf5be72d5dc3dac77186f74789c443bb737350",
            "bin": "punes64.exe",
            "shortcuts": [
                [
                    "punes64.exe",
                    "puNES (Direct3D)"
                ]
            ],
            "checkver": "github",
            "autoupdate": {
                "url": "https://github.com/punesemu/puNES/releases/download/v$version/punes-$version-x86_64-win-d3d9.zip"
            }
        },
        "raine": {
            "version": "0.94.3",
            "description": "RAINE is an emulator for arcade games",
            "homepage": "https://raine.1emulation.com/",
            "license": "Artistic-2.0",
            "architecture": {
                "32bit": {
                    "url": [
                        "https://raine.1emulation.com/archive/raine32-0.94.3.7z",
                        "https://raine.1emulation.com/archive/dlls32-0.92x.7z"
                    ],
                    "hash": [
                        "28691f8b3b6eee2f3617e09aaf4790932856ec3c6a5799b874a7c2faf8f7c0be",
                        "95e9c7613aa6f42c341a0c45d4863fd1c7b3c6eebc2542de98e4c826e22f4d56"
                    ],
                    "extract_dir": "raine32",
                    "bin": [
                        [
                            "raine32.exe",
                            "RAINE"
                        ]
                    ],
                    "shortcuts": [
                        [
                            "raine32.exe",
                            "RAINE"
                        ]
                    ]
                },
                "64bit": {
                    "url": [
                        "https://raine.1emulation.com/archive/raine64-0.94.3.7z",
                        "https://raine.1emulation.com/archive/dlls64-0.92x.7z"
                    ],
                    "hash": [
                        "5e8967c7d55b8bb07c809a252dc27b2eaaf6f80d3f5e663d4456792b1f153d16",
                        "903856890c586870e75ccb680d07a68b4aed710a1985b5d0adabe86c26b12773"
                    ],
                    "extract_dir": "raine64",
                    "bin": [
                        [
                            "raine.exe",
                            "RAINE"
                        ]
                    ],
                    "shortcuts": [
                        [
                            "raine.exe",
                            "RAINE"
                        ]
                    ]
                }
            },
            "persist": [
                "artwork",
                "blend",
                "config",
                "debug",
                "demos",
                "emudx",
                "roms",
                "savedata",
                "savegame",
                "screens"
            ],
            "checkver": {
                "url": "https://raine.1emulation.com/download/latest.html",
                "regex": "Available files for version ([\\d.]+[a-zA-Z]?)"
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://raine.1emulation.com/archive/raine64-$version.7z"
                    },
                    "32bit": {
                        "url": "https://raine.1emulation.com/archive/raine32-$version.7z"
                    }
                }
            }
        },
        "redream-dev": {
            "version": "1.5.0-1045-g9f00768",
            "description": "Sega Dreamcast emulator",
            "homepage": "https://redream.io",
            "license": {
                "identifier": "Freeware",
                "url": "https://redream.io"
            },
            "architecture": {
                "64bit": {
                    "url": "https://redream.io/download/redream.x86_64-windows-v1.5.0-1045-g9f00768.zip",
                    "hash": "f9a36158de0d4fb22947b0e10be7e7739ee1f8c957d9dd3daf052c50e72fc303"
                }
            },
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\")) {",
                "   New-item \"$persist_dir\" -ItemType Directory | Out-Null",
                "   New-Item \"$persist_dir\\redream.cfg\" -Type File | Out-Null",
                "}"
            ],
            "bin": "redream.exe",
            "shortcuts": [
                [
                    "redream.exe",
                    "Redream (dev)"
                ]
            ],
            "persist": [
                "cache",
                "saves",
                "redream.cfg"
            ],
            "checkver": {
                "url": "https://redream.io/download",
                "regex": "v([\\d.]+-\\d{4}-g[a-f0-9]+)"
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://redream.io/download/redream.x86_64-windows-v$version.zip"
                    }
                }
            }
        },
        "redream": {
            "version": "1.5.0",
            "description": "Sega Dreamcast emulator",
            "homepage": "https://redream.io",
            "license": {
                "identifier": "Freeware",
                "url": "https://redream.io"
            },
            "architecture": {
                "64bit": {
                    "url": "https://redream.io/download/redream.x86_64-windows-v1.5.0.zip",
                    "hash": "c29b1faf56df9c9926cfb77f874484571fbe8e59689b1a39091425ab309e6463"
                }
            },
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\")) {",
                "   New-item \"$persist_dir\" -ItemType Directory | Out-Null",
                "   New-Item \"$persist_dir\\redream.cfg\" -Type File | Out-Null",
                "}"
            ],
            "bin": "redream.exe",
            "shortcuts": [
                [
                    "redream.exe",
                    "Redream"
                ]
            ],
            "persist": [
                "cache",
                "saves",
                "redream.cfg"
            ],
            "checkver": {
                "url": "https://redream.io/download",
                "regex": "v([\\d.]+)"
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://redream.io/download/redream.x86_64-windows-v$version.zip"
                    }
                }
            }
        },
        "reicast": {
            "version": "20.02.03",
            "description": "Dreamcast Emulator",
            "homepage": "https://reicast.com",
            "license": {
                "identifier": "GPL-2.0"
            },
            "url": "http://reicast-builds-windows.s3.amazonaws.com/builds/heads/stable-333b7c536071ea77b0ecc46e534cb28206e471b4/reicast-win_x64-RelWithDebInfo-333b7c536071ea77b0ecc46e534cb28206e471b4.zip",
            "hash": "556eccd84fbf463ca7d32cdb6decf51254d929088db6010c447071f54da416ed",
            "bin": "reicast-win_x64-RelWithDebInfo-333b7c536071ea77b0ecc46e534cb28206e471b4.exe",
            "shortcuts": [
                [
                    "reicast-win_x64-RelWithDebInfo-333b7c536071ea77b0ecc46e534cb28206e471b4.exe",
                    "reicast.exe",
                    "reicast"
                ]
            ]
        },
        "retroarch-nightly": {
            "version": "nightly",
            "description": "Frontend for emulators, game engines and media players (nightly)",
            "homepage": "https://www.retroarch.com/",
            "license": {
                "identifier": "GPL-3.0",
                "url": "https://github.com/libretro/RetroArch/blob/master/COPYING"
            },
            "notes": [
                "ATTENTION: Retroarch requires BIOS/firmware files for some emulation.",
                "It is recommended to read the libretro docs for each core you plan to use.",
                "See https://docs.libretro.com/library/bios/ for more information."
            ],
            "architecture": {
                "32bit": {
                    "url": "https://buildbot.libretro.com/nightly/windows/x86/RetroArch.7z",
                    "extract_dir": "RetroArch-Win32"
                },
                "64bit": {
                    "url": "https://buildbot.libretro.com/nightly/windows/x86_64/RetroArch.7z",
                    "extract_dir": "RetroArch-Win64"
                }
            },
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\\retroarch.cfg\")) {",
                "    New-Item \"$persist_dir\\retroarch.cfg\" -Type File | Out-Null",
                "}"
            ],
            "bin": [
                [
                    "retroarch.exe",
                    "retroarch-nightly"
                ]
            ],
            "shortcuts": [
                [
                    "retroarch.exe",
                    "RetroArch (nightly)"
                ]
            ],
            "persist": [
                "assets\\wallpapers",
                "cores",
                "cheats",
                "overlays",
                "playlists",
                "records",
                "recordings",
                "saves",
                "screenshots",
                "shaders\\presets",
                "states",
                "system",
                "thumbnails",
                "content_favorites.lpl",
                "content_history.lpl",
                "retroarch.cfg"
            ],
            "autoupdate": {
                "architecture": {
                    "32bit": {
                        "url": "https://buildbot.libretro.com/nightly/windows/x86/RetroArch.7z"
                    },
                    "64bit": {
                        "url": "https://buildbot.libretro.com/nightly/windows/x86_64/RetroArch.7z"
                    }
                }
            }
        },
        "retroarch": {
            "version": "1.10.3",
            "description": "Frontend for emulators, game engines and media players.",
            "homepage": "https://www.retroarch.com/",
            "license": {
                "identifier": "GPL-3.0",
                "url": "https://github.com/libretro/RetroArch/blob/master/COPYING"
            },
            "notes": [
                "ATTENTION: Retroarch requires BIOS/firmware files for some emulation.",
                "It is recommended to read the libretro docs for each core you plan to use.",
                "See https://docs.libretro.com/library/bios/ for more information."
            ],
            "architecture": {
                "32bit": {
                    "url": "https://buildbot.libretro.com/stable/1.10.3/windows/x86/RetroArch.7z",
                    "hash": "e61a12d51dad31505070e9f9338031113d3f598287fb79906e9e32b2bd649257",
                    "extract_dir": "RetroArch-Win32"
                },
                "64bit": {
                    "url": "https://buildbot.libretro.com/stable/1.10.3/windows/x86_64/RetroArch.7z",
                    "hash": "924f40b63e0cf9aaa0f89c34c75d0c85c26f921c6563917405b099b11ff7ae4c",
                    "extract_dir": "RetroArch-Win64"
                }
            },
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\\retroarch.cfg\")) { Move-Item \"$dir\\retroarch.default.cfg\" \"$dir\\retroarch.cfg\" }",
                "'favorites', 'history' | ForEach-Object {",
                "    if (!(Test-Path \"$persist_dir\\content_$_.lpl\")) { New-Item \"$dir\\content_$_.lpl\" | Out-Null }",
                "}"
            ],
            "bin": "retroarch.exe",
            "shortcuts": [
                [
                    "retroarch.exe",
                    "RetroArch"
                ]
            ],
            "persist": [
                "assets\\wallpapers",
                "config",
                "cores",
                "cheats",
                "overlays",
                "playlists",
                "records",
                "recordings",
                "saves",
                "screenshots",
                "shaders\\presets",
                "states",
                "system",
                "thumbnails",
                "content_favorites.lpl",
                "content_history.lpl",
                "retroarch.cfg"
            ],
            "checkver": {
                "url": "https://www.retroarch.com/?page=platforms",
                "regex": "The current stable version is:\\s+([\\d.]+)</"
            },
            "autoupdate": {
                "architecture": {
                    "32bit": {
                        "url": "https://buildbot.libretro.com/stable/$version/windows/x86/RetroArch.7z"
                    },
                    "64bit": {
                        "url": "https://buildbot.libretro.com/stable/$version/windows/x86_64/RetroArch.7z"
                    }
                }
            }
        },
        "romsorter": {
            "version": "release5",
            "description": "Compress, or uncompress ROMs, detect duplicates, catalog, manage CHD and DAT data, sort for Everdrive, or create 1G1R sets - all with one app",
            "homepage": "https://github.com/drakewill-CRL/ROMSorter",
            "license": "MIT",
            "notes": [
                "",
                "ROMSorter depends on having the .NET 6 runtime installed.",
                "",
                "The .NET 6 runtime, also known as Microsoft Windows Desktop Runtime, is available in the Extras bucket.",
                "",
                "Since the runtime gets installed globally, Sudo is needed, which is part of the Main bucket.",
                "",
                "For example, with Sudo installed, you could execute the following to get the dependencies: scoop install extras/windowsdesktop-runtime-lts",
                ""
            ],
            "suggest": {
                "Sudo": "main/sudo",
                ".NET6": "extras/windowsdesktop-runtime-lts"
            },
            "url": "https://github.com/drakewill-CRL/ROMSorter/releases/download/release5/ROMSorter.zip",
            "hash": "1ba6738dc7c9bedb4736f5e00ed94516e1c1cb750a7bcdd0801ada2557ffac40",
            "shortcuts": [
                [
                    "ROMSorter.exe",
                    "ROMSorter"
                ]
            ],
            "checkver": {
                "github": "https://github.com/drakewill-CRL/ROMSorter",
                "regex": "tag/(release\\d+)"
            },
            "autoupdate": {
                "url": "https://github.com/drakewill-CRL/ROMSorter/releases/download/$version/ROMSorter.zip"
            }
        },
        "rpcs3": {
            "version": "0.0.24-14171",
            "description": "Open-source Sony PlayStation 3 emulator",
            "homepage": "https://rpcs3.net/",
            "license": {
                "identifier": "GPL-2.0",
                "url": "https://github.com/RPCS3/rpcs3/blob/master/LICENSE"
            },
            "notes": [
                "ATTENTION: RPCS3 requires a copy of the official PS3 firmware to function.",
                "Install the ps3-system-software package.  You must still manually load PS3UPDAT.PUP",
                "See the official quickstart guide for further instructions: https://rpcs3.net/quickstart"
            ],
            "depends": "ps3-system-software",
            "suggest": {
                "Microsoft Visual C++ Runtime 2022": "extras/vcredist2022"
            },
            "url": "https://github.com/rpcs3/rpcs3-binaries-win/releases/download/build-acc2fea7e3d66e2aafcfa094148200a48053a902/rpcs3-v0.0.24-14171-acc2fea7_win64.7z",
            "hash": "e483a58f667fed4687fc1068abb595a585ea08006747e88c4ff01ec9637013e5",
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\")) {",
                "   New-Item \"$persist_dir\" -ItemType Directory | Out-Null",
                "   New-Item \"$persist_dir\\config.yml\" -ItemType File | Out-Null",
                "   New-Item \"$persist_dir\\games.yml\" -ItemType File | Out-Null",
                "   '[Meta]', 'checkUpdateStart=false' | Set-Content \"$dir\\GuiConfigs\\CurrentSettings.ini\"",
                "}"
            ],
            "bin": "rpcs3.exe",
            "shortcuts": [
                [
                    "rpcs3.exe",
                    "RPCS3"
                ]
            ],
            "persist": [
                "dev_flash",
                "dev_flash2",
                "dev_flash3",
                "dev_hdd0",
                "dev_hdd1",
                "dev_usb000",
                "cache",
                "captures",
                "config.yml",
                "config",
                "firmware",
                "games.yml",
                "GuiConfigs",
                "Icons",
                "patches"
            ],
            "checkver": {
                "url": "https://rpcs3.net/compatibility?b",
                "regex": "/rpcs3-binaries-win/releases/download/build-(?<fullhash>[0-9a-f]+)/rpcs3-v(?<build>[0-9]+\\.[0-9]+\\.[0-9]+\\-[0-9]+)-(?<shorthash>[0-9a-f]{8})",
                "replace": "${build}"
            },
            "autoupdate": {
                "url": "https://github.com/rpcs3/rpcs3-binaries-win/releases/download/build-$matchFullhash/rpcs3-v$matchBuild-$matchShorthash_win64.7z",
                "hash": {
                    "url": "https://rpcs3.net/compatibility?b",
                    "regex": "Windows SHA-256: ($sha256)"
                }
            }
        },
        "ryujinx": {
            "version": "1.1.279",
            "description": "A simple, experimental Nintendo Switch emulator",
            "homepage": "https://ryujinx.org/",
            "license": {
                "identifier": "MIT",
                "url": "https://github.com/Ryujinx/Ryujinx/blob/master/LICENSE.txt"
            },
            "notes": [
                "ATTENTION: Ryujinx requires Nintendo Switch firmware and a prod.keys file to function.",
                "Learn more at https://github.com/Ryujinx/Ryujinx/wiki/Ryujinx-Setup-&-Configuration-Guide"
            ],
            "architecture": {
                "64bit": {
                    "url": "https://github.com/Ryujinx/release-channel-master/releases/download/1.1.279/ryujinx-1.1.279-win_x64.zip",
                    "hash": "6421b0f82bcec8665471d3126c1163826097f51b261079fc2578cf8518c9d605"
                }
            },
            "extract_dir": "publish",
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\")) {",
                "   New-item \"$persist_dir\\portable\" -ItemType Directory | Out-Null",
                "   if (Test-Path \"$env:APPDATA\\Ryujinx\") {",
                "       Write-host \"Migrating AppData...\" -ForegroundColor yellow",
                "       Copy-Item -Path \"$env:APPDATA\\Ryujinx\\*\" -Destination \"$persist_dir\\portable\" -Recurse",
                "       Remove-Item -Path \"$env:APPDATA\\Ryujinx\" -Recurse",
                "   }",
                "}"
            ],
            "bin": "Ryujinx.exe",
            "shortcuts": [
                [
                    "Ryujinx.exe",
                    "Ryujinx"
                ]
            ],
            "persist": "portable",
            "checkver": {
                "github": "https://github.com/Ryujinx/release-channel-master"
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://github.com/Ryujinx/release-channel-master/releases/download/$version/ryujinx-$version-win_x64.zip"
                    }
                }
            }
        },
        "saint": {
            "version": "2.40",
            "description": "SainT is a Windows based cycle accurate ATARI-ST emulator",
            "homepage": "http://leonard.oxg.free.fr/SainT/saint.html",
            "license": "Freeware",
            "url": "http://leonard.oxg.free.fr/SainT/SainT240.zip",
            "hash": "a30c15f485bcc7ada635a5eb1654ff5cf805da8d141a1b64d4e83a26d609b0fa",
            "extract_dir": "SainT",
            "bin": [
                "SainT.exe",
                "Dir2Msa\\dir2msa.exe"
            ],
            "shortcuts": [
                [
                    "SainT.exe",
                    "SainT Atari-ST Emulator"
                ]
            ],
            "persist": [
                "SaintT.ini",
                "MemoryShot",
                "Tos102uk.img",
                "tos106fr.img"
            ],
            "checkver": {
                "url": "http://leonard.oxg.free.fr/SainT/versions.txt",
                "re": "^([\\d.]+)"
            },
            "autoupdate": {
                "url": "http://leonard.oxg.free.fr/SainT/SainT$cleanVersion.zip"
            }
        },
        "sameboy": {
            "version": "0.15.6",
            "description": "A Game Boy and Game Boy Color emulator written in C",
            "homepage": "https://sameboy.github.io/",
            "license": {
                "identifier": "MIT",
                "url": "https://github.com/LIJI32/SameBoy/blob/master/LICENSE"
            },
            "url": "https://github.com/LIJI32/SameBoy/releases/download/v0.15.6/sameboy_winsdl_v0.15.6.zip",
            "hash": "39b94290816662dfd6051f688fc3614ccd0916bd54415f9b8baecad822b0285c",
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\\prefs.bin\")) {",
                "    New-Item \"$dir\\prefs.bin\" -Type File | Out-Null",
                "}"
            ],
            "bin": [
                "sameboy.exe",
                "sameboy_debugger.exe"
            ],
            "shortcuts": [
                [
                    "sameboy.exe",
                    "SameBoy"
                ],
                [
                    "sameboy_debugger.exe",
                    "SameBoy Debugger"
                ]
            ],
            "persist": "prefs.bin",
            "checkver": {
                "github": "https://github.com/LIJI32/SameBoy"
            },
            "autoupdate": {
                "url": "https://github.com/LIJI32/SameBoy/releases/download/v$version/sameboy_winsdl_v$version.zip"
            }
        },
        "scummvm-nightly": {
            "version": "d0cc3be5",
            "description": "ScummVM is a program which allows you to run certain classic graphical adventure and role-playing games",
            "homepage": "https://www.scummvm.org/",
            "license": {
                "identifier": "GPL-3.0",
                "url": "https://github.com/scummvm/scummvm/blob/master/COPYING"
            },
            "architecture": {
                "32bit": {
                    "url": "https://buildbot.scummvm.org/dailybuilds/master/windows-x86-master-d0cc3be5.zip",
                    "hash": "a27632ecfea59df587d268ba06047c3c892add0517705aed33eea4fe0114314c",
                    "extract_dir": "windows-x86-master-d0cc3be5"
                },
                "64bit": {
                    "url": "https://buildbot.scummvm.org/dailybuilds/master/windows-x86-64-master-d0cc3be5.zip",
                    "hash": "e76c7d3b8d15def22caffa8c46383aad2dc4703f29ba986d127731b4652c934b",
                    "extract_dir": "windows-x86-64-master-d0cc3be5"
                }
            },
            "bin": "win32dist-mingw/scummvm.exe",
            "shortcuts": [
                [
                    "scummvm.exe",
                    "ScummVM (nightly)"
                ]
            ],
            "persist": [
                "scummvm.ini",
                "saves",
                "themes",
                "extras"
            ],
            "checkver": {
                "url": "https://buildbot.scummvm.org/dailybuilds/master/?C=M;O=D",
                "regex": "windows-x86-64-master-([a-f0-9]{8}).zip"
            },
            "autoupdate": {
                "hash": {
                    "url": "$url.sha256"
                },
                "architecture": {
                    "32bit": {
                        "url": "https://buildbot.scummvm.org/dailybuilds/master/windows-x86-master-$version.zip",
                        "extract_dir": "windows-x86-master-$version"
                    },
                    "64bit": {
                        "url": "https://buildbot.scummvm.org/dailybuilds/master/windows-x86-64-master-$version.zip",
                        "extract_dir": "windows-x86-64-master-$version"
                    }
                }
            }
        },
        "scummvm": {
            "version": "2.6.0",
            "description": "ScummVM is a program which allows you to run certain classic graphical adventure and role-playing games",
            "homepage": "https://www.scummvm.org/",
            "license": {
                "identifier": "GPL-3.0",
                "url": "https://github.com/scummvm/scummvm/blob/master/COPYING"
            },
            "architecture": {
                "32bit": {
                    "url": "https://downloads.scummvm.org/frs/scummvm/2.6.0/scummvm-2.6.0-win32.zip",
                    "hash": "4368c0ddcec6a409019b7c3356962d7f540e40ad5a6d0d725b5b86aca0e11dc2",
                    "extract_dir": "scummvm-2.6.0-win32"
                },
                "64bit": {
                    "url": "https://downloads.scummvm.org/frs/scummvm/2.6.0/scummvm-2.6.0-win32-x86_64.zip",
                    "hash": "b38e6714fecace6239dfe4811af7fcd21420bc1a3b9dd476755623fb8c231fc1",
                    "extract_dir": "scummvm-2.6.0-win32-x86_64"
                }
            },
            "shortcuts": [
                [
                    "scummvm.exe",
                    "ScummVM"
                ]
            ],
            "persist": [
                "scummvm.ini",
                "saves",
                "themes",
                "extras"
            ],
            "checkver": {
                "github": "https://github.com/scummvm/scummvm"
            },
            "autoupdate": {
                "hash": {
                    "url": "$url.sha256"
                },
                "architecture": {
                    "32bit": {
                        "url": "https://downloads.scummvm.org/frs/scummvm/$version/scummvm-$version-win32.zip",
                        "extract_dir": "scummvm-$version-win32"
                    },
                    "64bit": {
                        "url": "https://downloads.scummvm.org/frs/scummvm/$version/scummvm-$version-win32-x86_64.zip",
                        "extract_dir": "scummvm-$version-win32-x86_64"
                    }
                }
            }
        },
        "snes9x-dev": {
            "version": "1.61-1076",
            "description": "Nintendo SNES (Super Nintendo Entertainment System) emulator",
            "homepage": "http://www.snes9x.com/",
            "license": {
                "identifier": "Freeware",
                "url": "https://github.com/snes9xgit/snes9x/blob/master/LICENSE"
            },
            "architecture": {
                "32bit": {
                    "url": "https://ci.appveyor.com/api/buildjobs/5pf4b3huh2oajvqf/artifacts/snes9x-1.61-1076-28be1a1-win32.zip",
                    "hash": "8de783e63f00c1a41c45d3bc740e4c5ba573ec673fed6ef55b5c816d9885d259",
                    "bin": "snes9x.exe",
                    "shortcuts": [
                        [
                            "snes9x.exe",
                            "Snes9X (dev)"
                        ]
                    ]
                },
                "64bit": {
                    "url": "https://ci.appveyor.com/api/buildjobs/mpqabq0lr5np409l/artifacts/snes9x-1.61-1076-28be1a1-win32-x64.zip",
                    "hash": "2861150527e4b5d393b07ec5ddef004e5ca87e974e061d646477e30d00ab3ed7",
                    "bin": [
                        [
                            "snes9x-x64.exe",
                            "snes9x"
                        ]
                    ],
                    "shortcuts": [
                        [
                            "snes9x-x64.exe",
                            "Snes9X (dev)"
                        ]
                    ]
                }
            },
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\\snes9x.conf\")) {",
                "    New-Item \"$dir\\snes9x.conf\" -Type File | Out-Null",
                "}"
            ],
            "persist": [
                "Saves",
                "snes9x.conf"
            ],
            "checkver": {
                "url": "https://ci.appveyor.com/api/projects/snes9x/snes9x",
                "regex": "\"jobId\":\"(?<win32>.*?)\".*?arch=win32,.*?\"jobId\":\"(?<x64>.*?)\".*?arch=win32-x64,.*\"version\":\"(?<version>.*?)\".*\"commitId\":\"(?<commit>.{7}).*\""
            },
            "autoupdate": {
                "architecture": {
                    "32bit": {
                        "url": "https://ci.appveyor.com/api/buildjobs/$matchWin32/artifacts/snes9x-$matchVersion-$matchCommit-win32.zip"
                    },
                    "64bit": {
                        "url": "https://ci.appveyor.com/api/buildjobs/$matchX64/artifacts/snes9x-$matchVersion-$matchCommit-win32-x64.zip"
                    }
                }
            }
        },
        "snes9x": {
            "version": "1.61",
            "description": "Nintendo SNES (Super Nintendo Entertainment System) emulator",
            "homepage": "http://www.snes9x.com/",
            "license": {
                "identifier": "Non-commercial",
                "url": "https://github.com/snes9xgit/snes9x/blob/master/LICENSE"
            },
            "architecture": {
                "32bit": {
                    "url": "https://github.com/snes9xgit/snes9x/releases/download/1.61/snes9x-1.61-win32.zip",
                    "hash": "95b4a40a76832338533ed3a084a5215764932265c18b101467f9819931d89c37",
                    "bin": "snes9x.exe",
                    "shortcuts": [
                        [
                            "snes9x.exe",
                            "Snes9X"
                        ]
                    ]
                },
                "64bit": {
                    "url": "https://github.com/snes9xgit/snes9x/releases/download/1.61/snes9x-1.61-win32-x64.zip",
                    "hash": "c52100c21ed2b6754eaf3b9536570b67b1f3c89806c8f2b4448856fbb7639dee",
                    "bin": [
                        [
                            "snes9x-x64.exe",
                            "snes9x"
                        ]
                    ],
                    "shortcuts": [
                        [
                            "snes9x-x64.exe",
                            "Snes9X"
                        ]
                    ]
                }
            },
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\\snes9x.conf\")) {",
                "    New-Item \"$dir\\snes9x.conf\" -Type File | Out-Null",
                "}"
            ],
            "persist": [
                "BIOS",
                "Cheats",
                "Movies",
                "Patches",
                "Roms",
                "SatData",
                "Saves",
                "Screenshots",
                "SPCs",
                "snes9x.conf"
            ],
            "checkver": {
                "github": "https://github.com/snes9xgit/snes9x"
            },
            "autoupdate": {
                "architecture": {
                    "32bit": {
                        "url": "https://github.com/snes9xgit/snes9x/releases/download/$version/snes9x-$version-win32.zip"
                    },
                    "64bit": {
                        "url": "https://github.com/snes9xgit/snes9x/releases/download/$version/snes9x-$version-win32-x64.zip"
                    }
                }
            }
        },
        "ssf": {
            "homepage": "https://twitter.com/FessX",
            "description": "Sega Saturn emulator focused on accurate hardware emulation",
            "version": "PreviewVer_R28",
            "license": "Freeware",
            "url": "https://github.com/shimazzz/SEGASaturnEmulator-SSF/releases/download/PreviewVer/SSF_PreviewVer_R28.zip",
            "hash": "3b5cdf7a1eda656ca6879b5e7abde35eb497fefc33ca9f45b0e4103687d65e7b",
            "extract_dir": "SSF_PreviewVer_R28",
            "bin": "SSF.exe",
            "shortcuts": [
                [
                    "SSF.exe",
                    "SSF"
                ]
            ],
            "persist": [
                "Backup",
                "CDIndex",
                "Setting",
                "Snapshot",
                "StateSave",
                "Wave"
            ],
            "checkver": {
                "url": "https://github.com/shimazzz/SEGASaturnEmulator-SSF/releases",
                "regex": "SSF_PreviewVer_R(?<revision>[\\d]+)\\.zip",
                "reverse": true,
                "replace": "PreviewVer_R${revision}"
            },
            "autoupdate": {
                "url": "https://github.com/shimazzz/SEGASaturnEmulator-SSF/releases/download/PreviewVer/SSF_$version.zip",
                "extract_dir": "SSF_$version"
            }
        },
        "steam-rom-manager": {
            "version": "2.3.40",
            "description": "Steam ROM Manager adds non-Steam games to steam in bulk and manages their artwork assets",
            "homepage": "https://github.com/doZennn/steam-rom-manager",
            "license": {
                "identifier": "GPL-3.0",
                "url": "https://github.com/SteamGridDB/steam-rom-manager/blob/master/LICENSE"
            },
            "url": "https://github.com/doZennn/steam-rom-manager/releases/download/v2.3.40/Steam-ROM-Manager-portable-2.3.40.exe",
            "hash": "04d870d8541f3bd2c0a03eb86f6fda4d1da7218fbda3c7c535526d62e68734eb",
            "installer": {
                "script": "Rename-Item \"$dir\\steam-rom-manager-portable-$version.exe\" 'steam-rom-manager.exe' -Force"
            },
            "shortcuts": [
                [
                    "steam-rom-manager.exe",
                    "Steam Rom Manager"
                ]
            ],
            "persist": "userData",
            "checkver": {
                "github": "https://github.com/doZennn/steam-rom-manager",
                "regex": ".*[mM]anager-portable-(?<version>[\\d\\w.]+).exe"
            },
            "autoupdate": {
                "url": "https://github.com/doZennn/steam-rom-manager/releases/download/v$version/Steam-ROM-Manager-portable-$version.exe"
            }
        },
        "steemsse": {
            "version": "4.0.2",
            "description": "ST Enhanced EMulator Sensei Software Edition",
            "homepage": "https://sourceforge.net/projects/steemsse",
            "license": "GPL-3.0",
            "architecture": {
                "64bit": {
                    "url": "https://downloads.sourceforge.net/project/steemsse/Steem%20SSE%204.0/v4.0.2/Steem.SSE.4.0.2.Win64.D3D.R32.zip",
                    "hash": "332a25773acbe3a05bcd8d35976f5553d217ea2b70ffaff7840c39d249f03363",
                    "extract_dir": "Steem.SSE.4.0.2.Win64.D3D",
                    "bin": "Steem64D3D.exe",
                    "shortcuts": [
                        [
                            "Steem64D3D.exe",
                            "Steem Atari ST Emulator"
                        ]
                    ]
                },
                "32bit": {
                    "url": "https://downloads.sourceforge.net/project/steemsse/Steem%20SSE%204.0/v4.0.2/Steem.SSE.4.0.2.Win32.D3D.R32.zip",
                    "hash": "5340e98a3cc185556beb890c4a3a323c46dd2e491d8650b23decc543bb561557",
                    "extract_dir": "Steem.SSE.4.0.2.Win32.D3D",
                    "bin": "Steem32D3D.exe",
                    "shortcuts": [
                        [
                            "Steem32D3D.exe",
                            "Steem Atari ST Emulator"
                        ]
                    ]
                }
            },
            "checkver": {
                "url": "https://sourceforge.net/projects/steemsse/rss",
                "re": "/Steem\\.SSE\\.([\\d.]+)\\.Win64\\.D3D\\.R32\\.zip"
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://downloads.sourceforge.net/project/steemsse/Steem%20SSE%20$majorVersion.$minorVersion/v$version/Steem.SSE.$version.Win64.D3D.R32.zip",
                        "extract_dir": "Steem.SSE.$version.Win64.D3D"
                    },
                    "32bit": {
                        "url": "https://downloads.sourceforge.net/project/steemsse/Steem%20SSE%20$majorVersion.$minorVersion/v$version/Steem.SSE.$version.Win32.D3D.R32.zip",
                        "extract_dir": "Steem.SSE.$version.Win32.D3D"
                    }
                }
            }
        },
        "stella": {
            "homepage": "https://stella-emu.github.io",
            "version": "6.7",
            "license": "GPL-2.0-or-later",
            "description": "Atari 2600 VCS emulator",
            "depends": "extras/vcredist2017",
            "architecture": {
                "64bit": {
                    "url": "https://github.com/stella-emu/stella/releases/download/6.7/Stella-6.7-x64.exe",
                    "hash": "01e4c8f50aad70481642215cdcdffe915bc99e8336bdaae043694677dc614a91",
                    "shortcuts": [
                        [
                            "Stella.exe",
                            "Stella"
                        ]
                    ]
                },
                "32bit": {
                    "url": "https://github.com/stella-emu/stella/releases/download/6.7/Stella-6.7-win32.exe",
                    "hash": "1a0f55f67a86e1bf629f413faf89b1237e7d3e7dae94be9ae27e5a7bc49a5eca",
                    "shortcuts": [
                        [
                            "Stella.exe",
                            "Stella"
                        ]
                    ]
                }
            },
            "innosetup": true,
            "checkver": {
                "github": "https://github.com/stella-emu/stella"
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://github.com/stella-emu/stella/releases/download/$version/Stella-$version-x64.exe"
                    },
                    "32bit": {
                        "url": "https://github.com/stella-emu/stella/releases/download/$version/Stella-$version-win32.exe"
                    }
                }
            }
        },
        "tegra-rcm-gui": {
            "version": "2.6",
            "description": "RCM exploit for Nintendo Switch (1st Gen)",
            "homepage": "https://github.com/eliboa/TegraRcmGUI/",
            "license": {
                "identifier": "GPL-2.0",
                "url": "http://www.gnu.org/licenses/gpl-2.0.html"
            },
            "url": "https://github.com/eliboa/TegraRcmGUI/releases/download/2.6/TegraRcmGUI_v2.6_portable.zip",
            "hash": "e9b0d68007649d4942d019ac8c394ebb3b0af95fcb54fb543a101e7614a4435c",
            "bin": "TegraRcmGUI_v2.6_portable\\TegraRcmGUI.exe",
            "shortcuts": [
                [
                    "TegraRcmGUI_v2.6_portable\\TegraRcmGUI.exe",
                    "TegraRcmGUI"
                ]
            ],
            "checkver": {
                "github": "https://github.com/eliboa/TegraRcmGUI",
                "regex": "[tT]egra[rR]cmGUI_v(?<version>[\\d\\w.]+)_portable.zip"
            },
            "autoupdate": {
                "url": "https://github.com/eliboa/TegraRcmGUI/releases/download/$version/TegraRcmGUI_v$version_portable.zip"
            }
        },
        "townemu": {
            "version": "20220702",
            "description": "FM Towns Emulator 'Tsugaru'",
            "homepage": "https://github.com/captainys/TOWNSEMU",
            "license": "GPL-2.0",
            "url": "https://github.com/captainys/TOWNSEMU/releases/download/v20220702/windows_binary_latest.zip",
            "hash": "aada8d1338c7725f5aa12f2a666c1be2254fc1af5066d8a6d04d4638aa12dc58",
            "bin": [
                "Tsugaru_CUI.exe",
                "Tsugaru_GUI.exe"
            ],
            "shortcuts": [
                [
                    "Tsugaru_CUI.exe",
                    "Tsugaru (CLI)"
                ],
                [
                    "Tsugaru_GUI.exe",
                    "Tsugaru (GUI)"
                ]
            ],
            "checkver": "github",
            "autoupdate": {
                "url": "https://github.com/captainys/TOWNSEMU/releases/download/v$version/windows_binary_latest.zip"
            }
        },
        "vice-stable": {
            "version": "3.6.1",
            "description": "VICE is an emulator collection which emulates the C64, the C64-DTV, the C128, the VIC20, practically all PET models, the PLUS4 and the CBM-II (aka C610). It runs on Unix, MS-DOS, Win32, OS/2, Acorn RISC OS, BeOS, QNX 6.x, Amiga, GP2X or Mac OS X machines.",
            "homepage": "https://sourceforge.net/projects/vice-emu/",
            "license": {
                "identifier": "GPLv2"
            },
            "url": "https://sourceforge.net/projects/vice-emu/files/releases/binaries/windows/GTK3VICE-3.6.1-win64.zip/download#/vice.zip",
            "hash": "8a4c55c90dd7b13491f63205ced6fac41519966a0acf3b81d2489a8988dfb2a5",
            "extract_dir": "GTK3VICE-3.6.1-win64",
            "bin": [
                "bin\\c1541.exe",
                "bin\\cartconv.exe",
                "bin\\petcat.exe",
                "bin\\vsid.exe",
                "bin\\x128.exe",
                "bin\\x64dtv.exe",
                "bin\\x64sc.exe",
                "bin\\xcbm2.exe",
                "bin\\xcbm5x0.exe",
                "bin\\xpet.exe",
                "bin\\xplus4.exe",
                "bin\\xscpu64.exe",
                "bin\\xvic.exe"
            ],
            "checkver": {
                "url": "https://sourceforge.net/projects/vice-emu/rss?path=/releases/binaries/windows",
                "re": "GTK3VICE-(.*)-win64\\.zip"
            },
            "autoupdate": {
                "url": "https://sourceforge.net/projects/vice-emu/files/releases/binaries/windows/GTK3VICE-$version-win64.zip/download#/vice.zip",
                "extract_dir": "GTK3VICE-$version-win64"
            }
        },
        "vice": {
            "version": "3.6.2-42517",
            "description": "Updated builds of the VICE emulator",
            "homepage": "https://github.com/Zibri/VICE",
            "license": "GPL-2.0",
            "url": "https://github.com/Zibri/VICE/releases/download/r42517/GTK3VICE-3.6.2-dev-win64-r42517.7z",
            "hash": "4f1df54b34ef05997daa03b017ba0a96c3fe337f3e00fcd8a8f1f2c8c629b437",
            "extract_dir": "GTK3VICE-3.6.2-dev-win64-r42517",
            "bin": [
                "bin\\c1541.exe",
                "bin\\cartconv.exe",
                "bin\\petcat.exe",
                "bin\\vsid.exe",
                "bin\\x128.exe",
                "bin\\x64.exe",
                "bin\\x64dtv.exe",
                "bin\\x64sc.exe",
                "bin\\xcbm2.exe",
                "bin\\xcbm5x0.exe",
                "bin\\xpet.exe",
                "bin\\xplus4.exe",
                "bin\\xscpu64.exe",
                "bin\\xvic.exe"
            ],
            "checkver": {
                "github": "https://github.com/Zibri/VICE",
                "regex": "GTK3VICE-(?<release>[\\d.]+)-dev-win64-r(?<build>[\\d]+).7z",
                "replace": "${release}-${build}"
            },
            "autoupdate": {
                "url": "https://github.com/Zibri/VICE/releases/download/r$matchBuild/GTK3VICE-$matchRelease-dev-win64-r$matchBuild.7z",
                "extract_dir": "GTK3VICE-$matchRelease-dev-win64-r$matchBuild"
            }
        },
        "virtualjaguar": {
            "version": "2.1.2",
            "description": "Portable Atari Jaguar emulator",
            "homepage": "https://icculus.org/virtualjaguar",
            "license": "GPL-3.0",
            "architecture": {
                "64bit": {
                    "url": "https://icculus.org/virtualjaguar/tarballs/virtualjaguar-2.1.2-win64.rar",
                    "hash": "26d2092cf93269f76deeddcdf411adf1c80c810d2aff0c379e89750c7eac5f5d"
                },
                "32bit": {
                    "url": "https://icculus.org/virtualjaguar/tarballs/virtualjaguar-2.1.2-win32.rar",
                    "hash": "da3422b6e1ce5736b9ee452d98ed0876b08be6aabd41d804e3ff286e368c7455"
                }
            },
            "extract_dir": "virtualjaguar",
            "bin": "virtualjaguar.exe",
            "shortcuts": [
                [
                    "virtualjaguar.exe",
                    "Virtual Jaguar"
                ]
            ],
            "checkver": {
                "url": "https://icculus.org/virtualjaguar",
                "regex": "The latest official release is ([\\d.]+)\\."
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://icculus.org/virtualjaguar/tarballs/virtualjaguar-$version-win64.rar"
                    },
                    "32bit": {
                        "url": "https://icculus.org/virtualjaguar/tarballs/virtualjaguar-$version-win32.rar"
                    }
                }
            }
        },
        "visualboyadvance-m-nightly": {
            "version": "nightly",
            "description": "Nintendo Game Boy Advance emulator",
            "homepage": "https://vba-m.com",
            "license": {
                "identifier": "GPL-2.0",
                "url": "http://www.gnu.org/licenses/gpl-2.0.html"
            },
            "architecture": {
                "32bit": {
                    "url": "https://nightly.vba-m.com/visualboyadvance-m-Win-x86_32.zip"
                },
                "64bit": {
                    "url": "https://nightly.vba-m.com/visualboyadvance-m-Win-x86_64.zip"
                }
            },
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\\vbam.ini\")) {",
                "   New-Item \"$dir\\vbam.ini\" -Type File | Out-Null",
                "   Set-Content \"$dir\\vbam.ini\" '[General]'",
                "   Add-Content \"$dir\\vbam.ini\" 'OnlineUpdates=never'",
                "   'Battery', 'Recording', 'Screenshot', 'State' | ForEach-Object {",
                "   Add-Content -Path \"$dir\\vbam.ini\" -Value $_`Dir`=$_ }",
                "}"
            ],
            "bin": [
                [
                    "visualboyadvance-m.exe",
                    "visualboyadvance-m-nightly"
                ]
            ],
            "shortcuts": [
                [
                    "visualboyadvance-m.exe",
                    "VisualBoyAdvance-M (nightly)"
                ]
            ],
            "persist": [
                "Battery",
                "Recording",
                "Screenshot",
                "State"
            ],
            "autoupdate": {
                "architecture": {
                    "32bit": {
                        "url": "https://github.com/visualboyadvance-m/visualboyadvance-m/releases/download/v$version/visualboyadvance-m-Win-32bit.zip"
                    },
                    "64bit": {
                        "url": "https://github.com/visualboyadvance-m/visualboyadvance-m/releases/download/v$version/visualboyadvance-m-Win-64bit.zip"
                    }
                }
            }
        },
        "visualboyadvance-m": {
            "version": "2.1.4",
            "description": "Nintendo Game Boy Advance emulator",
            "homepage": "https://vba-m.com",
            "license": {
                "identifier": "GPL-2.0",
                "url": "http://www.gnu.org/licenses/gpl-2.0.html"
            },
            "architecture": {
                "32bit": {
                    "url": "https://github.com/visualboyadvance-m/visualboyadvance-m/releases/download/v2.1.4/visualboyadvance-m-Win-32bit.zip",
                    "hash": "753b896b5f6b1a05052ef8e6e5b06bc80f9d9b8dfc9870b0dbc282227b089e5d"
                },
                "64bit": {
                    "url": "https://github.com/visualboyadvance-m/visualboyadvance-m/releases/download/v2.1.4/visualboyadvance-m-Win-64bit.zip",
                    "hash": "e73cb3d4a0f6eb890549f04fef575ff4d9d3beb3b20b4877c4039cc2d9342311"
                }
            },
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\\vbam.ini\")) {",
                "   New-Item \"$dir\\vbam.ini\" -Type File | Out-Null",
                "   Set-Content \"$dir\\vbam.ini\" '[General]'",
                "   Add-Content \"$dir\\vbam.ini\" 'OnlineUpdates=never'",
                "   'Battery', 'Recording', 'Screenshot', 'State' | ForEach-Object {",
                "   Add-Content -Path \"$dir\\vbam.ini\" -Value $_`Dir`=$_ }",
                "}"
            ],
            "bin": "visualboyadvance-m.exe",
            "shortcuts": [
                [
                    "visualboyadvance-m.exe",
                    "VisualBoyAdvance-M"
                ]
            ],
            "persist": [
                "Battery",
                "Recording",
                "Screenshot",
                "State"
            ],
            "checkver": {
                "github": "https://github.com/visualboyadvance-m/visualboyadvance-m"
            },
            "autoupdate": {
                "architecture": {
                    "32bit": {
                        "url": "https://github.com/visualboyadvance-m/visualboyadvance-m/releases/download/v$version/visualboyadvance-m-Win-32bit.zip"
                    },
                    "64bit": {
                        "url": "https://github.com/visualboyadvance-m/visualboyadvance-m/releases/download/v$version/visualboyadvance-m-Win-64bit.zip"
                    }
                }
            }
        },
        "visualboyadvance-sdl": {
            "version": "1.7.2",
            "description": "A gameboy and gameboy advance emulator",
            "homepage": "https://sourceforge.net/projects/vba/",
            "license": {
                "identifier": "GPLv2"
            },
            "url": "https://sourceforge.net/projects/vba/files/VisualBoyAdvance/1.7.2/VisualBoyAdvance-1.7.2-SDL-Win32.zip",
            "hash": "6da78c1b3fd4434d9a331157f57d435d54e70d75cd66c226e658fd118e760d92",
            "bin": "VisualBoyAdvance-SDL.exe",
            "shortcuts": [
                [
                    "VisualBoyAdvance-SDL.exe",
                    "visualboyadvance-sdl",
                    "vbasdl"
                ]
            ],
            "persist": [
                "Battery",
                "Recording",
                "Screenshot",
                "State"
            ],
            "checkver": {
                "url": "https://sourceforge.net/projects/vba/rss",
                "re": "VisualBoyAdvance-(.*)-SDL-Win32\\.zip"
            },
            "autoupdate": {
                "url": "https://downloads.sourceforge.net/project/vba/VisualBoyAdvance/$version/VisualBoyAdvance-$version-SDL-Win32.zip"
            }
        },
        "visualboyadvance": {
            "version": "1.7.2",
            "description": "A gameboy and gameboy advance emulator",
            "homepage": "https://sourceforge.net/projects/vba/",
            "license": {
                "identifier": "GPLv2"
            },
            "url": "https://downloads.sourceforge.net/project/vba/VisualBoyAdvance/1.7.2/VisualBoyAdvance-1.7.2.zip",
            "hash": "sha1:59f438a2e9aea4d623061caeb782b0f4705e4fb3",
            "bin": "VisualBoyAdvance.exe",
            "shortcuts": [
                [
                    "VisualBoyAdvance.exe",
                    "visualboyadvance",
                    "vba"
                ]
            ],
            "persist": [
                "Battery",
                "Recording",
                "Screenshot",
                "State"
            ],
            "checkver": {
                "url": "https://sourceforge.net/projects/vba/rss",
                "re": "VisualBoyAdvance-(.*)-SDL-Win32\\.zip"
            },
            "autoupdate": {
                "url": "https://downloads.sourceforge.net/project/vba/VisualBoyAdvance/$version/VisualBoyAdvance-$version.zip"
            }
        },
        "vita3k": {
            "version": "ff685b8",
            "description": "PlayStation Vita emulator (Development)",
            "homepage": "https://vita3k.org",
            "license": {
                "identifier": "GPL-2.0",
                "url": "https://github.com/Vita3K/Vita3K/blob/master/COPYING.txt"
            },
            "architecture": {
                "64bit": {
                    "url": "https://github.com/Vita3K/Vita3K/releases/download/continuous/windows-latest.zip",
                    "hash": "f266fdf3a166bb5485c3a3b4772cc0b90ee22943b264c7f5b9aaaa0245759b5b"
                }
            },
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\")) {",
                "   New-item \"$persist_dir\" -ItemType Directory | Out-Null",
                "   New-Item \"$persist_dir\\config.yml\" -Type File | Out-Null",
                "}"
            ],
            "bin": "Vita3K.exe",
            "shortcuts": [
                [
                    "Vita3K.exe",
                    "Vita3K"
                ]
            ],
            "persist": [
                "data",
                "lang",
                "shaders-builtin",
                "config.yml"
            ],
            "checkver": {
                "github": "https://github.com/Vita3K/Vita3K",
                "regex": "commit[/:]\\s?([a-f0-9]{7})"
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://github.com/Vita3K/Vita3K/releases/download/continuous/windows-latest.zip"
                    }
                }
            }
        },
        "winfellow": {
            "version": "0.5.8.1189",
            "description": "WinFellow is an Amiga emulator",
            "homepage": "http://petschau.github.io/WinFellow",
            "license": "GPL-2.0-only",
            "architecture": {
                "32bit": {
                    "shortcuts": [
                        [
                            "WinFellow-x86.exe",
                            "WinFellow"
                        ]
                    ]
                },
                "64bit": {
                    "shortcuts": [
                        [
                            "WinFellow-x64.exe",
                            "WinFellow"
                        ]
                    ]
                }
            },
            "url": "https://github.com/petschau/WinFellow/releases/download/v0.5.8.1189/WinFellow_v0.5.8.1189-master-551edc5.zip",
            "hash": "06935368b1e93392ab847b9c8873aac94be96d89df32ef9be001f8d4d4b17746",
            "checkver": {
                "url": "https://github.com/petschau/WinFellow/releases/latest",
                "regex": "/v([\\d.]+)/WinFellow_v(?:[\\d.]+)-master-(?<commit>[\\da-z]{7}).zip"
            },
            "autoupdate": {
                "url": "https://github.com/petschau/WinFellow/releases/download/v$version/WinFellow_v$version-master-$matchCommit.zip"
            }
        },
        "winuae": {
            "version": "4.9.1",
            "description": "WinUAE Amiga emulator",
            "homepage": "https://www.winuae.net",
            "license": "MIT",
            "architecture": {
                "32bit": {
                    "url": "https://download.abime.net/winuae/releases/InstallWinUAE4910.msi",
                    "hash": "decfaa2fcce91f0be265743837b730eb1d7414d7f192f8f3e6bf761dcafd2765",
                    "bin": "WinUAE\\winuae.exe",
                    "shortcuts": [
                        [
                            "WinUAE\\winuae.exe",
                            "WinUAE"
                        ]
                    ]
                },
                "64bit": {
                    "url": "https://download.abime.net/winuae/releases/InstallWinUAE4910_x64.msi",
                    "hash": "4a8d5ee09e99bd247badea79903a79ef98895cef31062a07e01682f8552d7b1e",
                    "bin": "WinUAE\\winuae64.exe",
                    "shortcuts": [
                        [
                            "WinUAE\\winuae64.exe",
                            "WinUAE"
                        ]
                    ]
                }
            },
            "checkver": {
                "url": "https://www.winuae.net/category/news/",
                "regex": "WinUAE ([\\d.]+) \\("
            },
            "autoupdate": {
                "architecture": {
                    "32bit": {
                        "url": "https://download.abime.net/winuae/releases/InstallWinUAE$cleanVersion0.msi"
                    },
                    "64bit": {
                        "url": "https://download.abime.net/winuae/releases/InstallWinUAE$cleanVersion0_x64.msi"
                    }
                }
            }
        },
        "xebra": {
            "version": "211031",
            "description": "PlayStation emulator focused on accuracy",
            "homepage": "http://drhell.web.fc2.com/ps1/",
            "license": "Freeware",
            "notes": [
                "Warning: XEBRA.INI is not persisted across updates because of version incompatibilities.",
                "If you use BIOS with XEBRA, rename BIOS as \"OSROM\" and overwrite $dir\\OSROM",
                "If you use Video plugin with XEBRA, rename plugin as \"VIDEO.DLL\" and overwrite $dir\\VIDEO.DLL,",
                "and check \"View\">\"Video Output\">\"Use VIDEO.DLL\"",
                "Learn more at: http://drhell.web.fc2.com/ps1/xebra/index2.html"
            ],
            "url": "https://drhell.web.fc2.com/ps1/xebra211031.zip",
            "hash": "1bbb3eb5abfb6a53da8a35012cb1d78ec63f5e1bc28ae24614c22dd5cb4d7046",
            "pre_install": [
                "'BU00', 'BU10', 'OSROM', 'VIDEO.DLL' | ForEach-Object {",
                "    if (!(Test-Path \"$persist_dir\\$_\")) {",
                "        New-Item -ItemType File \"$dir\\$_\" | Out-Null",
                "    }",
                "}"
            ],
            "shortcuts": [
                [
                    "XEBRA.EXE",
                    "XEBRA"
                ]
            ],
            "persist": [
                "BU00",
                "BU10",
                "OSROM",
                "VIDEO.DLL"
            ],
            "checkver": {
                "regex": "xebra([\\da-z]+)\\.zip"
            },
            "autoupdate": {
                "url": "https://drhell.web.fc2.com/ps1/xebra$version.zip"
            }
        },
        "xemu": {
            "version": "0.7.70",
            "description": "Original Xbox Emulator",
            "homepage": "https://xemu.app",
            "license": {
                "identifier": "GPL-2.0",
                "url": "https://github.com/mborgerson/xemu/blob/master/LICENSE"
            },
            "architecture": {
                "64bit": {
                    "url": "https://github.com/mborgerson/xemu/releases/download/v0.7.70/xemu-win-release.zip",
                    "hash": "4963bc50cd90863e6bd60ce884790d92a2f027cbc78eca184c9266effe216344"
                }
            },
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\")) {",
                "   New-item \"$persist_dir\" -ItemType Directory | Out-Null",
                "   New-item \"$persist_dir\\bios\" -ItemType Directory | Out-Null",
                "   New-item \"$persist_dir\\data\" -ItemType Directory | Out-Null",
                "}"
            ],
            "bin": "xemu.exe",
            "shortcuts": [
                [
                    "xemu.exe",
                    "Xemu"
                ]
            ],
            "persist": [
                "bios",
                "data"
            ],
            "checkver": {
                "github": "https://github.com/mborgerson/xemu"
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://github.com/mborgerson/xemu/releases/download/v$version/xemu-win-release.zip"
                    }
                }
            }
        },
        "xenia-canary": {
            "version": "0c30199",
            "description": "Xbox 360 Research Emulator (development version)",
            "homepage": "https://xenia.jp",
            "license": {
                "identifier": "BSD-3-Clause",
                "url": "https://github.com/xenia-canary/xenia-canary/blob/canary_pr/LICENSE"
            },
            "url": "https://github.com/xenia-canary/xenia-canary/releases/download/0c30199/xenia_canary.zip",
            "hash": "f1169ab5794b2c0867f6c276a704a135cb961bccfa2ec91ad404674015d29415",
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\")) {",
                "   New-Item \"$persist_dir\" -ItemType Directory | Out-Null",
                "   New-item \"$persist_dir\\portable.txt\" -ItemType File | Out-Null",
                "   New-item \"$persist_dir\\xenia-canary.config.toml\" -ItemType File | Out-Null",
                "   if (Test-Path \"$env:USERPROFILE\\Documents\\Xenia\") {",
                "       Write-host \"Migrating AppData...\" -ForegroundColor yellow",
                "       Copy-Item -Path \"$env:USERPROFILE\\Documents\\Xenia\\*\" -Destination \"$persist_dir\" -Recurse",
                "       Remove-Item -Path \"$env:USERPROFILE\\Documents\\Xenia\" -Recurse",
                "   }",
                "}"
            ],
            "bin": "xenia_canary.exe",
            "shortcuts": [
                [
                    "xenia_canary.exe",
                    "Xenia Canary"
                ]
            ],
            "persist": [
                "portable.txt",
                "xenia-canary.config.toml",
                "content",
                "cache"
            ],
            "checkver": {
                "github": "https://github.com/xenia-canary/xenia-canary",
                "regex": "([a-f0-9]{7})<"
            },
            "autoupdate": {
                "url": "https://github.com/xenia-canary/xenia-canary/releases/download/$version/xenia_canary.zip"
            }
        },
        "xenia": {
            "version": "1.0.2765",
            "description": "Microsoft Xbox 360 emulator",
            "homepage": "https://xenia.jp",
            "license": {
                "identifier": "BSD-3-Clause",
                "url": "https://github.com/xenia-project/xenia/blob/master/LICENSE"
            },
            "architecture": {
                "64bit": {
                    "url": "https://github.com/xenia-project/release-builds-windows/releases/download/v1.0.2765-master/xenia_master.zip",
                    "hash": "4ca5e14ad189b67ee8893600aea47c79eb3e43ad05ecb16a63eca2f5a20e5065"
                }
            },
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\")) {",
                "   New-item \"$persist_dir\" -ItemType Directory | Out-Null",
                "   New-item \"$persist_dir\\portable.txt\" -ItemType File | Out-Null",
                "   New-item \"$persist_dir\\xenia.config.toml\" -ItemType File | Out-Null",
                "   if (Test-Path \"$env:USERPROFILE\\Documents\\Xenia\") {",
                "       Write-host \"Migrating AppData...\" -ForegroundColor yellow",
                "       Copy-Item -Path \"$env:USERPROFILE\\Documents\\Xenia\\*\" -Destination \"$persist_dir\" -Recurse",
                "       Remove-Item -Path \"$env:USERPROFILE\\Documents\\Xenia\" -Recurse",
                "   }",
                "}"
            ],
            "bin": "xenia.exe",
            "shortcuts": [
                [
                    "xenia.exe",
                    "Xenia"
                ]
            ],
            "persist": [
                "portable.txt",
                "xenia.config.toml",
                "content",
                "cache"
            ],
            "checkver": {
                "github": "https://github.com/xenia-project/release-builds-windows",
                "regex": "v([\\d.]+)-master/xenia_master\\.zip"
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://github.com/xenia-project/release-builds-windows/releases/download/v$version-master/xenia_master.zip"
                    }
                }
            }
        },
        "xformer": {
            "version": "10",
            "description": "The earliest Atari 800 emulator",
            "homepage": "http://emulators.com/xformer.htm",
            "license": "Unlicensed",
            "architecture": {
                "64bit": {
                    "url": "http://www.emulators.com/freefile/xformer10.zip",
                    "hash": "87fb892621013e78d1b3c64f08209c9fbaa3a0e374370b53ce3eb1685901ed24",
                    "bin": "xformer10-x64.exe",
                    "shortcuts": [
                        [
                            "xformer10-x64.exe",
                            "Xformer 10"
                        ]
                    ]
                },
                "32bit": {
                    "url": "http://www.emulators.com/freefile/xformer10.zip",
                    "hash": "87fb892621013e78d1b3c64f08209c9fbaa3a0e374370b53ce3eb1685901ed24",
                    "bin": "xformer10.exe",
                    "shortcuts": [
                        [
                            "xformer10.exe",
                            "Xformer 10"
                        ]
                    ]
                }
            }
        },
        "yabause": {
            "version": "0.9.15",
            "description": "Sega Saturn emulator",
            "homepage": "https://yabause.org",
            "license": {
                "identifier": "GPL"
            },
            "url": "https://download.tuxfamily.org/yabause/releases/0.9.15/yabause-0.9.15-win64.zip",
            "hash": "ee989be918eb49cce0b046d55775cacfe39d6c9c44a161bcf4539dbdd670c432",
            "extract_dir": "yabause-0.9.15-win64",
            "bin": "yabause.exe",
            "shortcuts": [
                [
                    "yabause.exe",
                    "yabause"
                ]
            ]
        },
        "yuzu-dev": {
            "version": "EA-2966",
            "description": "Nintendo Switch emulator",
            "homepage": "https://github.com/pineappleEA/pineapple-src",
            "license": {
                "identifier": "GPL-2.0",
                "url": "https://github.com/pineappleEA/pineapple-src/blob/main/LICENSE"
            },
            "architecture": {
                "64bit": {
                    "url": "https://github.com/pineappleEA/pineapple-src/releases/download/EA-2966/Windows-Yuzu-EA-2966.7z",
                    "hash": "7c7117d47463c3c3aad757c2a66444f04d2f759aa96368c9db4b58915dd75afb"
                }
            },
            "extract_dir": "yuzu-windows-msvc-early-access",
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\")) {",
                "   New-item \"$persist_dir\" -ItemType Directory | Out-Null",
                "   New-item \"$persist_dir\\user\" -ItemType Directory | Out-Null",
                "   if (Test-Path \"$env:APPDATA\\yuzu\") {",
                "       Write-host \"Migrating AppData...\" -ForegroundColor yellow",
                "       Copy-Item -Path \"$env:APPDATA\\yuzu\\*\" -Destination \"$persist_dir\\user\" -Recurse",
                "       Remove-Item -Path \"$env:APPDATA\\yuzu\" -Recurse",
                "   }",
                "}"
            ],
            "bin": [
                [
                    "yuzu.exe",
                    "yuzu-dev"
                ],
                [
                    "yuzu-cmd.exe",
                    "yuzu-cmd-dev"
                ]
            ],
            "shortcuts": [
                [
                    "yuzu.exe",
                    "Yuzu (dev)"
                ]
            ],
            "persist": [
                "user",
                "plugins"
            ],
            "checkver": {
                "github": "https://github.com/pineappleEA/pineapple-src",
                "regex": "(EA-\\d+) \\(auto-updater\\)"
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://github.com/pineappleEA/pineapple-src/releases/download/$version/Windows-Yuzu-$version.7z"
                    }
                }
            }
        },
        "yuzu-pineapple": {
            "version": "EA-2966",
            "description": "A Yuzu Early Access fork with Linux-specific patches",
            "homepage": "https://github.com/pineappleEA/pineapple-src",
            "license": {
                "identifier": "GPL-2.0",
                "url": "https://github.com/pineappleEA/pineapple-src/blob/main/LICENSE"
            },
            "architecture": {
                "64bit": {
                    "url": "https://github.com/pineappleEA/pineapple-src/releases/download/EA-2966/Windows-Yuzu-EA-2966.7z",
                    "hash": "7c7117d47463c3c3aad757c2a66444f04d2f759aa96368c9db4b58915dd75afb"
                }
            },
            "extract_dir": "yuzu-windows-msvc-early-access",
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\")) {",
                "   New-item \"$persist_dir\" -ItemType Directory | Out-Null",
                "   New-item \"$persist_dir\\user\" -ItemType Directory | Out-Null",
                "   if (Test-Path \"$env:APPDATA\\yuzu\") {",
                "       Write-host \"Migrating AppData...\" -ForegroundColor yellow",
                "       Copy-Item -Path \"$env:APPDATA\\yuzu\\*\" -Destination \"$persist_dir\\user\" -Recurse",
                "       Remove-Item -Path \"$env:APPDATA\\yuzu\" -Recurse",
                "   }",
                "}"
            ],
            "bin": [
                [
                    "yuzu.exe",
                    "yuzu-dev"
                ],
                [
                    "yuzu-cmd.exe",
                    "yuzu-cmd-dev"
                ]
            ],
            "shortcuts": [
                [
                    "yuzu.exe",
                    "Yuzu (Development)"
                ]
            ],
            "persist": [
                "user",
                "plugins"
            ],
            "checkver": {
                "github": "https://github.com/pineappleEA/pineapple-src",
                "regex": "(EA-\\d+) \\(auto-updater\\)"
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://github.com/pineappleEA/pineapple-src/releases/download/$version/Windows-Yuzu-$version.7z"
                    }
                }
            }
        },
        "yuzu": {
            "version": "0-1173",
            "description": "Experimental emulator for the Nintendo Switch",
            "homepage": "https://yuzu-emu.org/",
            "license": {
                "identifier": "GPL-2.0",
                "url": "https://github.com/yuzu-emu/yuzu-mainline/blob/master/license.txt"
            },
            "architecture": {
                "64bit": {
                    "url": "https://github.com/yuzu-emu/yuzu-mainline/releases/download/mainline-0-1173/yuzu-windows-msvc-20220920-237c8ef89.7z",
                    "hash": "e7f026ee0d4b05429493f73c15ddbc23802f43701990bd96290190e19258cfe2"
                }
            },
            "extract_dir": "yuzu-windows-msvc",
            "pre_install": [
                "if (!(Test-Path \"$persist_dir\")) {",
                "   New-item \"$persist_dir\" -ItemType Directory | Out-Null",
                "   New-item \"$persist_dir\\user\" -ItemType Directory | Out-Null",
                "   if (Test-Path \"$env:APPDATA\\yuzu\") {",
                "       Write-host \"Migrating AppData...\" -ForegroundColor yellow",
                "       Copy-Item -Path \"$env:APPDATA\\yuzu\\*\" -Destination \"$persist_dir\\user\" -Recurse",
                "       Remove-Item -Path \"$env:APPDATA\\yuzu\" -Recurse",
                "   }",
                "}"
            ],
            "bin": [
                "yuzu.exe",
                "yuzu-cmd.exe"
            ],
            "shortcuts": [
                [
                    "yuzu.exe",
                    "Yuzu"
                ]
            ],
            "persist": [
                "user",
                "plugins"
            ],
            "checkver": {
                "github": "https://github.com/yuzu-emu/yuzu-mainline",
                "regex": "download/mainline-([\\d.-]+)/yuzu-windows-msvc-(?<date>[\\d]{8})-(?<commit>[\\da-f]+).7z"
            },
            "autoupdate": {
                "architecture": {
                    "64bit": {
                        "url": "https://github.com/yuzu-emu/yuzu-mainline/releases/download/mainline-$version/yuzu-windows-msvc-$matchDate-$matchCommit.7z"
                    }
                }
            }
        },
        "z26": {
            "version": "4.07",
            "description": "z26 is an Atari 2600 emulator",
            "homepage": "http://www.whimsey.com/z26",
            "license": "GPL-2.0-only",
            "url": "https://www.emutopia.com/index.php?option=com_cobalt&task=files.download&tmpl=component&id=20700&fid=20&fidx=1&rid=1699#/dl.zip",
            "hash": "4b73fdfa7e671e8e5c69544ab2fb68318e7b12125dd15b0d36fa9e1abc7b0de1",
            "extract_dir": "z26_407_win10",
            "shortcuts": [
                [
                    "z26.exe",
                    "z26"
                ]
            ]
        }
    }
}